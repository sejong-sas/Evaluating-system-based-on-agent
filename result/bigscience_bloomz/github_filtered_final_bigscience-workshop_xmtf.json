{
  "1-1 (Weights)": "No quotes were supplied that mention the bigscience-workshop/xmtf model weights, their availability, storage location, or download procedure. Therefore, based solely on the provided material, there is no evidence that the weights are public or that any access mechanism has been disclosed.",
  "1-1 (Weights)__evidence": [],
  "1-2 (Code)": "The quote set contains no sentences that refer to training or inference code for bigscience-workshop/xmtf. Accordingly, no information is available about whether the full training pipeline, data-prep scripts, or inference utilities have been released.",
  "1-2 (Code)__evidence": [],
  "1-3 (License)": "The repository includes the standard Apache Software License, v2.0. This is conveyed explicitly in the lines:\n  • \"Apache License\\n                           Version 2.0, January 2004\"\n  • \"Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n   you may not use this file except in compliance with the License.\"\nUnder Apache-2.0, users are granted broad rights to (a) use, (b) modify, (c) redistribute, and (d) make commercial use of the software and model artifacts, provided they comply with attribution and notice requirements laid out in the license text. No additional restrictions such as “research-only” or “non-commercial” appear in the supplied excerpts.",
  "1-3 (License)__evidence": [
    {
      "source": "[license_files]",
      "quote": "Apache License\n                           Version 2.0, January 2004"
    },
    {
      "source": "[license_files]",
      "quote": "Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License."
    }
  ],
  "1-4 (Paper)": "One citation is given for the bigscience-workshop/xmtf model: \"https://arxiv.org/abs/2211.01786).\" This link points to an arXiv paper, implying that the associated technical report or publication describing the model’s methodology and results is available at that URL. No other papers, blog posts, or technical reports are referenced in the provided quotes.",
  "1-4 (Paper)__evidence": [
    {
      "source": "readme",
      "quote": "https://arxiv.org/abs/2211.01786)."
    }
  ],
  "1-5 (Architecture)": "",
  "1-5 (Architecture)__evidence": [],
  "1-6 (Tokenizer)": "",
  "1-6 (Tokenizer)__evidence": [],
  "2-1 (Hardware)": "",
  "2-1 (Hardware)__evidence": [],
  "2-2 (Software)": "",
  "2-2 (Software)__evidence": [],
  "2-3 (API)": "",
  "2-3 (API)__evidence": [],
  "3-1 (Pre-training)": "",
  "3-1 (Pre-training)__evidence": [],
  "3-2 (Fine-tuning)": "",
  "3-2 (Fine-tuning)__evidence": [],
  "3-3 (Reinforcement Learning)": "",
  "3-3 (Reinforcement Learning)__evidence": [],
  "4-1 (Pre-training Data)": "",
  "4-1 (Pre-training Data)__evidence": [],
  "4-2 (Fine-tuning Data)": "",
  "4-2 (Fine-tuning Data)__evidence": [],
  "4-3 (Reinforcement Learning Data)": "",
  "4-3 (Reinforcement Learning Data)__evidence": [],
  "4-4 (Data Filtering)": "The only explicit details supplied for the data-filtering stage are two code lines:\n1) \"import cld3\"\n2) \"detect_res = cld3.get_language(sentence)\"\n\nTaken together, these quotes show that the pipeline incorporates an automatic language-identification step based on the cld3 library. First, the script imports the cld3 package, and then, for every individual sentence, it calls the function get_language(). The returned value is stored in the variable detect_res, implying that the detected language (and possibly other metadata produced by cld3) is examined later in the cleaning procedure to determine whether a given sentence should be retained or discarded. No additional thresholds, ratios, or classifier scores are disclosed, and no other kinds of filtering (e.g., length limits, perplexity checks, deduplication, or toxicity screening) are mentioned in the provided material.",
  "4-4 (Data Filtering)__evidence": [
    {
      "source": "[py_files/plotstables/contamination/probe_contamination.py]",
      "quote": "import cld3"
    },
    {
      "source": "[py_files/plotstables/contamination/probe_contamination.py]",
      "quote": "detect_res = cld3.get_language(sentence)"
    }
  ],
  "__usage": {
    "fine_tuning": "unknown",
    "rl": "unknown"
  }
}