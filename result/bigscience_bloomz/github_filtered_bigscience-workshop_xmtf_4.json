{
  "4-1 (Pre-training Data)": "",
  "4-1 (Pre-training Data)__evidence": [],
  "4-2 (Fine-tuning Data)": "",
  "4-2 (Fine-tuning Data)__evidence": [],
  "4-3 (Reinforcement Learning Data)": "",
  "4-3 (Reinforcement Learning Data)__evidence": [],
  "4-4 (Data Filtering)": "The only explicit details supplied for the data-filtering stage are two code lines:\n1) \"import cld3\"\n2) \"detect_res = cld3.get_language(sentence)\"\n\nTaken together, these quotes show that the pipeline incorporates an automatic language-identification step based on the cld3 library. First, the script imports the cld3 package, and then, for every individual sentence, it calls the function get_language(). The returned value is stored in the variable detect_res, implying that the detected language (and possibly other metadata produced by cld3) is examined later in the cleaning procedure to determine whether a given sentence should be retained or discarded. No additional thresholds, ratios, or classifier scores are disclosed, and no other kinds of filtering (e.g., length limits, perplexity checks, deduplication, or toxicity screening) are mentioned in the provided material.",
  "4-4 (Data Filtering)__evidence": [
    {
      "source": "[py_files/plotstables/contamination/probe_contamination.py]",
      "quote": "import cld3"
    },
    {
      "source": "[py_files/plotstables/contamination/probe_contamination.py]",
      "quote": "detect_res = cld3.get_language(sentence)"
    }
  ]
}