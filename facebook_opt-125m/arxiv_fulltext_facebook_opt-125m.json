{
  "model_id": "facebook/opt-125m",
  "full_texts": [
    {
      "arxiv_id": "2205.01068",
      "full_text": "OPT: Open Pre-trained Transformer Language Models\nSusan Zhang∗, Stephen Roller∗, Naman Goyal∗,\nMikel Artetxe, Moya Chen, Shuohui Chen, Christopher Dewan, Mona Diab, Xian Li,\nXi Victoria Lin, Todor Mihaylov, Myle Ott†, Sam Shleifer†, Kurt Shuster, Daniel Simig,\nPunit Singh Koura, Anjali Sridhar, Tianlu Wang, Luke Zettlemoyer\nMeta AI\n{susanz,roller,naman}@fb.com\nAbstract\nLarge language models,\nwhich are often\ntrained for hundreds of thousands of compute\ndays, have shown remarkable capabilities for\nzero- and few-shot learning. Given their com-\nputational cost, these models are difﬁcult to\nreplicate without signiﬁcant capital. For the\nfew that are available through APIs, no ac-\ncess is granted to the full model weights, mak-\ning them difﬁcult to study. We present Open\nPre-trained Transformers (OPT), a suite of\ndecoder-only pre-trained transformers ranging\nfrom 125M to 175B parameters, which we aim\nto fully and responsibly share with interested\nresearchers. We show that OPT-175B is com-\nparable to GPT-3,1 while requiring only 1/7th\nthe carbon footprint to develop. We are also\nreleasing our logbook detailing the infrastruc-\nture challenges we faced, along with code for\nexperimenting with all of the released models.\n1\nIntroduction\nLarge language models (LLMs) trained on massive\ntext collections have shown surprising emergent\ncapabilities to generate text and perform zero- and\nfew-shot learning (Brown et al., 2020; Lieber et al.,\n2021; Smith et al., 2022; Rae et al., 2021; Chowd-\nhery et al., 2022). While in some cases the public\ncan interact with these models through paid APIs,\nfull model access is currently limited to only a\nfew highly resourced labs.2 This restricted access\nhas limited researchers’ ability to study how and\nwhy these large language models work, hindering\n∗Equal contribution.\n†Work done while at Meta AI.\n1Following Brown et al. (2020), we use GPT-3 to refer to\nboth the 175B model and the smaller scale models as well.\n2Exceptions include work by EleutherAI, who released\ndense models up to 20B in size (Black et al., 2022),\nSalesforce (Nijkamp et al., 2022), and Meta AI, who re-\nleased dense models up to 13B and sparse models up to\n1.1T (Artetxe et al., 2021).\nThere is also ongoing work\nfrom the BigScience workshop (https://bigscience.\nhuggingface.co/), which aims to open source very large\nmultilingual language models and datasets.\nprogress on improving known challenges in areas\nsuch as robustness, bias, and toxicity.\nIn this technical report, we present Open Pre-\ntrained Transformers (OPT), a suite of decoder-\nonly pre-trained transformers ranging from 125M\nto 175B parameters, which we aim to fully and\nresponsibly share with interested researchers. We\ntrain the OPT models to roughly match the per-\nformance and sizes of the GPT-3 class of models,\nwhile also applying the latest best practices in data\ncollection and efﬁcient training. Our aim in de-\nveloping this suite of OPT models is to enable re-\nproducible and responsible research at scale, and\nto bring more voices to the table in studying the\nimpact of these LLMs. Deﬁnitions of risk, harm,\nbias, and toxicity, etc., should be articulated by the\ncollective research community as a whole, which is\nonly possible when models are available for study.\nWe are releasing all of our models between\n125M and 66B parameters, and will provide full\nresearch access to OPT-175B upon request. Ac-\ncess will be granted to academic researchers; those\nafﬁliated with organizations in government, civil\nsociety, and academia; and those in industry re-\nsearch laboratories. We are also releasing both the\nlogbook of our model creation as well as our code-\nbase, metaseq,3 which enabled training OPT-175B\non 992 80GB A100 GPUs, reaching 147 TFLOP/s\nutilization per GPU. From this implementation, and\nfrom using the latest generation of NVIDIA hard-\nware, we are able to develop OPT-175B using only\n1/7th the carbon footprint of GPT-3. While this is a\nsigniﬁcant achievement, the energy cost of creating\nsuch a model is still nontrivial, and repeated efforts\nto replicate a model of this size will only amplify\nthe growing compute footprint of these LLMs.\nWe believe the entire AI community — aca-\ndemic researchers, civil society, policymakers, and\nindustry — must work together to develop clear\n3https://github.com/facebookresearch/\nmetaseq\narXiv:2205.01068v4  [cs.CL]  21 Jun 2022\n\nModel\n#L\n#H\ndmodel\nLR\nBatch\n125M\n12\n12\n768\n6.0e−4\n0.5M\n350M\n24\n16\n1024\n3.0e−4\n0.5M\n1.3B\n24\n32\n2048\n2.0e−4\n1M\n2.7B\n32\n32\n2560\n1.6e−4\n1M\n6.7B\n32\n32\n4096\n1.2e−4\n2M\n13B\n40\n40\n5120\n1.0e−4\n4M\n30B\n48\n56\n7168\n1.0e−4\n4M\n66B\n64\n72\n9216\n0.8e−4\n2M\n175B\n96\n96\n12288\n1.2e−4\n2M\nTable 1: Model architecture details. We report the\nnumber of layers (#L), number of attention heads (#H),\nand the embedding size (dmodel). We also report the\npeak Learning Rate (LR) and global batch size in num-\nber of tokens (Batch).\nguidelines around responsible AI in general and\nresponsible LLMs in particular, given their cen-\ntrality in many downstream language applications.\nA much broader segment of the AI community\nneeds access to these models in order to conduct\nreproducible research and collectively drive the\nﬁeld forward. With the release of OPT-175B and\nsmaller-scale baselines, we hope to increase the di-\nversity of voices deﬁning the ethical considerations\nof such technologies.\n2\nMethod\n2.1\nModels\nWe present results on eight Transformer language\nmodels ranging from 125 million to 175 billion\nparameters. Architectural details are displayed in\nTable 1. In the interest of transparency, and to re-\nduce risk of training instabilities, our models and\nhyperparameters largely follow Brown et al. (2020),\nwith variations in batch size mostly to obtain in-\ncreased computational efﬁciency.\n2.2\nTraining Setup\nFor weight initialization, we follow the same set-\ntings provided in the Megatron-LM codebase,4 us-\ning a normal distribution with zero mean and stan-\ndard deviation of 0.006. Standard deviation for\noutput layers are scaled by a 1.0/\n√\n2L term where\nL is the total number of layers. All bias terms are\ninitialized as 0, and all models are trained with\nReLU activation and a sequence length of 2048.\n4https://github.com/NVIDIA/\nMegatron-LM/blob/main/examples/pretrain_\ngpt3_175B.sh\nWe use an AdamW optimizer (Loshchilov and\nHutter, 2017) with (β1, β2) set to (0.9, 0.95), and\nweight decay of 0.1. We follow a linear learning\nrate schedule, warming up from 0 to the maximum\nlearning rate over the ﬁrst 2000 steps in OPT-175B,\nor over 375M tokens in our smaller baselines, and\ndecaying down to 10% of the maximum LR over\n300B tokens. A number of mid-ﬂight changes\nto LR were also required (see Section 2.5). Our\nbatch sizes range from 0.5M to 4M depending on\nthe model size (see Table 1) and is kept constant\nthroughout the course of training.\nWe use a dropout of 0.1 throughout, but we\ndo not apply any dropout to embeddings.\nWe\nclip gradient norms at 1.0, except for some mid-\nﬂight changes that reduce this threshold down\nfrom 1.0 to 0.3 (see Section 2.5).\nWe also in-\nclude a gradient predivide factor to reduce the risk\nof over/underﬂows when computing the gradient\nacross all ranks (splitting the division by the world\nsize of N into two division operations by\n√\nN).\n2.3\nPre-training Corpus\nThe pre-training corpus contains a concatenation\nof datasets used in RoBERTa (Liu et al., 2019b),\nthe Pile (Gao et al., 2021a), and PushShift.io Red-\ndit (Baumgartner et al., 2020; Roller et al., 2021).\nAll corpora were previously collected or ﬁltered\nto contain predominantly English text, but a small\namount of non-English data is still present within\nthe corpus via CommonCrawl.\nWe removed duplicated documents across all\ndatasets by ﬁltering out documents via Min-\nhashLSH (Rajaraman and Ullman, 2011) with a\nJaccard similarity ≥.95. We found the Pile was\nparticularly full of duplicate documents, and ad-\nvise future researchers using the Pile to perform\nadditional de-duplication processing.\nWe tokenize all corpora using the GPT-2 byte\nlevel BPE tokenizer (Sennrich et al., 2016; Radford\net al., 2019; Brown et al., 2020). Our ﬁnal corpus\ncontains roughly 180B tokens.\nRoBERTa\nWe included the BookCorpus (Zhu\net al., 2015) and Stories (Trinh and Le, 2018) sub-\nsets of the RoBERTa corpus and utilized an up-\ndated version of CCNews, containing news stories\ncrawled through September 28, 2021. This CC-\nNews v2 corpus was preprocessed the same way as\nthe original RoBERTa CCNews (Liu et al., 2019b).\nThe Pile\nWe included a subset of the Pile\n(Gao et al., 2021a), including: CommonCrawl,\n\nDM Mathematics,\nProject Gutenberg,\nHack-\nerNews, OpenSubtitles, OpenWebText2, USPTO\nand Wikipedia. Other subsets of the Pile were elim-\ninated as we found they increased the risk of insta-\nbilities, as measured by tendency to cause spikes\nin gradient norms at the 1.3B scale, or were other-\nwise deemed unsuitable. All subsets went through\nadditional ad-hoc whitespace normalization.\nPushShift.io Reddit\nWe included a subset of\nthe Pushshift.io corpus produced by Baumgart-\nner et al. (2020) and previously used by Roller\net al. (2021). To convert the conversational trees\ninto language-model-accessible documents, we ex-\ntracted the longest chain of comments in each\nthread and discarded all other paths in the tree.\nThis reduced the corpus by about 66%.\n2.4\nTraining Efﬁciency\nWe trained OPT-175B on 992 80GB A100 GPUs,\nby utilizing Fully Sharded Data Parallel (Artetxe\net al., 2021) with Megatron-LM Tensor Parallelism\n(Shoeybi et al., 2019). We achieve utilization of up\nto 147 TFLOP/s per GPU. We keep Adam state in\nFP32, since we shard it across all hosts, while the\nmodel weights remained in FP16. To avoid under-\nﬂows, we used dynamic loss scaling, as described\nin Micikevicius et al. (2017).\n2.5\nTraining Processes\nHere we describe signiﬁcant training process ad-\njustments that arose during OPT-175B pre-training.\nHardware Failures\nWe faced a signiﬁcant num-\nber of hardware failures in our compute cluster\nwhile training OPT-175B. In total, hardware fail-\nures contributed to at least 35 manual restarts and\nthe cycling of over 100 hosts over the course of 2\nmonths. During manual restarts, the training run\nwas paused, and a series of diagnostics tests were\nconducted to detect problematic nodes. Flagged\nnodes were then cordoned off and training was re-\nsumed from the last saved checkpoint. Given the\ndifference between the number of hosts cycled out\nand the number of manual restarts, we estimate 70+\nautomatic restarts due to hardware failures.\nLoss Divergences\nLoss divergences were also an\nissue in our training run. When the loss diverged,\nwe found that lowering the learning rate and restart-\ning from an earlier checkpoint allowed for the job\nto recover and continue training. We noticed a cor-\nrelation between loss divergence, our dynamic loss\n0k\n20k\n40k\n60k\n80k\n100k\n120k\n140k\nIterations\n0.0e-4\n0.2e-4\n0.4e-4\n0.6e-4\n0.8e-4\n1.0e-4\n1.2e-4\nLearning Rate\nEmpirical Learning Rate\nFigure 1: Empirical LR schedule. We found that low-\nering learning rate was helpful for avoiding instabili-\nties.\n0k\n20k\n40k\n60k\n80k\n100k\n120k\n140k\nIterations\n7.0\n7.5\n8.0\n8.5\n9.0\n9.5\n10.0\nPerplexity\nValidation Perplexity\nFigure 2: Validation Perplexity. Our mid-ﬂight LR\nchanges had clear effects on validation perplexity.\nscalar crashing to 0, and the l2-norm of the activa-\ntions of the ﬁnal layer spiking. These observations\nled us to pick restart points for which our dynamic\nloss scalar was still in a “healthy” state (≥1.0),\nand after which our activation norms would trend\ndownward instead of growing unboundedly. Our\nempirical LR schedule is shown in Figure 1. Early\nin training, we also noticed that lowering gradient\nclipping from 1.0 to 0.3 helped with stability; see\nour released logbook for exact details. Figure 2\nshows our validation loss with respect to training\niterations.\nOther Mid-ﬂight Changes\nWe conducted a\nnumber of other experimental mid-ﬂight changes\nto handle loss divergences. These included: switch-\ning to vanilla SGD (optimization plateaued quickly,\nand we reverted back to AdamW); resetting the dy-\nnamic loss scalar (this helped recover some but not\nall divergences); and switching to a newer version\nof Megatron (this reduced pressure on activation\nnorms and improved throughput).\n\n3\nEvaluations\n3.1\nPrompting & Few-Shot\nWe evaluate our model on 16 standard NLP tasks\nutilized in the literature: HellaSwag (Zellers et al.,\n2019), StoryCloze (Mostafazadeh et al., 2016),\nPIQA (Bisk et al., 2020), ARC Easy and Challenge\n(Clark et al., 2018), OpenBookQA (Mihaylov et al.,\n2018), WinoGrad (Levesque et al., 2011), Wino-\nGrande (Sakaguchi et al., 2020), and SuperGLUE\n(Wang et al., 2019). We follow GPT-3 (Brown\net al., 2020) by using their prompts and overall ex-\nperimental setup. We compare primarily to GPT-3,\nhaving aimed to re-implement their evaluation set-\ntings, but include reported performance of other\nLLMs on a per-task basis when available (Lieber\net al., 2021; Rae et al., 2021; Hoffmann et al., 2022;\nBlack et al., 2022)\nWe report performance in accuracy (omitting F1\nfor MultiRC and ReCoRD for consistency in eval-\nuation metrics). For the Winograd Schema Chal-\nlenge (WSC) task in the SuperGLUE benchmark,\nwe follow (Brown et al., 2020) and formulate the\ntask as multiple choice questions, which is known\nto affect performance (Liu et al., 2020).\nZero-shot\nOverall average zero-shot perfor-\nmance across all 14 tasks may be seen in Figure 3.\nOverall, we see our average performance follows\nthe trend of GPT-3. However, performance can\nvary radically across the tasks: for a full break-\ndown, see Appendix A. Note that we intentionally\nremoved MultiRC and WIC from these averages, as\nthese datasets seem to systematically favor GPT-3\nor OPT disproportionately.\nOur performance roughly matched GPT-3 for 10\ntasks, and underperformed in 3 tasks (ARC Chal-\nlenge and MultiRC). In 3 tasks (CB, BoolQ, WSC),\nwe ﬁnd both GPT and OPT models display unpre-\ndictable behavior with respect to scale, likely due\nto the small size of the validation set in these 3\ntasks (56, 277, and 104 examples, respectively).\nIn WIC, we see that the OPT models always out-\nperform the GPT-3 models, though the numbers\nreported by Brown et al. (2020) also seem question-\nable, given WIC being a binary classiﬁcation task.5\nFor MultiRC, we are unable to replicate the GPT-3\nresults using the Davinci API6 within our evalua-\ntion setup, suggesting differences in the methods\n5Brown et al. (2020) reports 0% accuracy on WIC, which\nimplies 100% accuracy if the classiﬁcation was inverted.\n6https://beta.openai.com/docs/engines/\noverview\n108\n109\n1010\n1011\nParameters\n50\n55\n60\n65\n70\nAvg. Accuracy\nAverage across 14 NLP Tasks (Zero-Shot)\nOPT\nGPT\nFigure 3:\nZero-shot NLP Evaluation Averages.\nAcross a variety of tasks and model sizes, OPT largely\nmatches the reported averages of GPT-3. However, per-\nformance varies greatly per task: see Appendix A.\n108\n109\n1010\n1011\nParameters\n50\n55\n60\n65\n70\n75\nAvg. Accuracy\nAverage across 14 NLP Tasks\nShot\n0\n1\n32\nSeries\nOPT\nGPT\nFigure 4:\nMulti-shot performance.\nOPT perfor-\nmance for one- and few-shot lags behind GPT-3 mod-\nels, but performance depends heavily per task; see Ap-\npendix A.\nof evaluation on this task. For BoolQ and WSC,\nwe note that both OPT and GPT models seem to\nhover around majority-class accuracy, suggesting\nsmall perturbations in probability masses may be\ndominating the evaluations.\nChinchilla (Hoffmann et al., 2022) and Gopher\n(Rae et al., 2021) perform roughly consistently\nwith others for their parameter sizes, while PaLM\n(Chowdhery et al., 2022) generally performs better\nacross all settings, even when controlling for num-\nber of parameters. We speculate the high perfor-\nmance of PaLM comes predominantly from higher\nquality and diversity of pre-training data.\nOne-shot and Few-shot\nAverage multi-shot in-\ncontext performance is shown in Figure 4 (again,\nomitting MultiRC and WIC), with detailed perfor-\nmances shown in Appendix A. Across the average\n\nof all metrics, we ﬁnd that OPT models perform\nsimilarly to GPT-3 models. However, as with zero-\nshot, breaking down these results per task shows\na different story: in the same set of 10 datasets as\nzero-shot, we see similar performance across the\ntwo models. Some of the remaining datasets show\ninconsistent performance with respect to model\nsize for both OPT and GPT-3 models (BoolQ, CB,\nWSC, RTE). In MultiRC, we consistently see un-\nderperformance of OPT models compared to GPT-\n3 models. Similar to our zero-shot evaluation, we\nhypothesize our one- and few-shot evaluation setup\nmay differ signiﬁcantly from Brown et al. (2020).\n3.2\nDialogue\nGiven that LLMs are known to be an integral com-\nponent of modern dialogue models (Adiwardana\net al., 2020; Roller et al., 2021; Thoppilan et al.,\n2022; Rae et al., 2021; Chowdhery et al., 2022), we\nadditionally evaluate OPT-175B on several open\nsource dialogue datasets. In particular, we fol-\nlow Roller et al. (2021), and evaluate on ConvAI2\n(Dinan et al., 2020b), Wizard of Wikipedia (Di-\nnan et al., 2019b), Empathetic Dialogues (Rashkin\net al., 2019), and Blended Skill Talk (Smith et al.,\n2020). We additionally evaluate on the more recent\nWizard of Internet dataset (Komeili et al., 2021).\nWe focus our comparisons primarily against ex-\nisting open source dialogue models including the\nﬁne-tuned BlenderBot 1 (Roller et al., 2021) and\nits pre-training counterpart Reddit 2.7B. We also\ncompare against the ﬁne-tuned R2C2 BlenderBot,\na 2.7B parameter BlenderBot-like model trained by\nShuster et al. (2022).\nWe report Perplexity and Unigram F1 (UF1)\noverlap, following the metrics of the ConvAI2 com-\npetition (Dinan et al., 2020b). To control for dif-\nferent tokenization in each of the models, we nor-\nmalize all perplexities to be in the space of the\nGPT-2 tokenizer (Radford et al., 2019). We also\nnote which models are supervised with respect to\nthese dialogue tasks and which are unsupervised.\nFor OPT-175B, all generations are performed using\ngreedy decoding up to a maximum of 32 tokens.\nWe do not attempt to prompt the model at all except\nfor alternating “Person 1:” and “Person 2:” lines of\ndialogue. The remaining models use the generation\nparameters found in BlenderBot 1.\nResults are shown in Table 2.\nWe see that\nOPT-175B signiﬁcantly outperforms the also-\nunsupervised Reddit 2.7B model on all tasks, and\nperforms competitively with the fully supervised\nBlenderBot 1 model, especially in the ConvAI2\ndataset. On the Wizard-of-Internet dataset, which\nis fully unsupervised for all models, we see that\nOPT-175B obtains the lowest perplexity but still\nhas lower UF1 than the models with Wizard-of-\nWikipedia supervision.\nWe were somewhat surprised that the evaluations\nof the unsupervised OPT-175B model were as com-\npetitive as BlenderBot 1 on the ConvAI2 dataset.\nThis may indicate leakage of the ConvAI2 dataset\ninto the general pre-training corpus or even into the\nvalidation data as evaluated in Table 2. To address\nconcerns of leakage, we searched our pre-training\ncorpus for the ﬁrst conversation in the ConvAI2\ndataset, but we did not ﬁnd any overlap. We addi-\ntionally evaluated OPT-175B on the ConvAI2 hid-\nden test set, which has never been publicly released,\nand achieved 10.7 ppl and .185 UF1, matching the\nperformance of the validation set. Furthermore, we\nevaluated OPT-175B on a subset of the ConvAI2-\nlike MultiSessionChat (MSC) dataset (Xu et al.,\n2021b) and obtained a perplexity of 9.7 and UF1\nof .177, indicating the model is generalizing well\nacross multiple PersonaChat-like datasets. Since\nboth MSC and WoI datasets were released after the\nCommonCrawl snapshot used in pre-training cor-\npus, there is minimal risk of leakage. We conclude\nthat OPT-175B has a strong ability to maintain a\nconsistent persona across conversations, a behav-\nior also highlighted in LaMDA (Thoppilan et al.,\n2022).\n4\nBias & Toxicity Evaluations\nTo understand the potential harm of OPT-175B,\nwe evaluate a series of benchmarks related to hate\nspeech detection, stereotype awareness, and toxic\ncontent generation. While there may be shortcom-\nings in these benchmarks (Blodgett et al., 2021; Ja-\ncobs and Wallach, 2021), these measurements pro-\nvide a ﬁrst step towards understanding the limita-\ntions of OPT-175B. We compare primarily against\nGPT-3 Davinci, as these benchmarks were not yet\navailable to be included in Brown et al. (2020).\n4.1\nHate Speech Detection\nUsing the ETHOS dataset provided in Mollas et al.\n(2020) and instrumented by Chiu and Alexander\n(2021), we measure the ability of OPT-175B to\nidentify whether or not certain English statements\nare racist or sexist (or neither). In the zero-, one-,\n\nPerplexity (↓)\nUnigram F1 (↑)\nModel\nEval\nC2\nWW\nED\nBST\nWoI\nC2\nWW\nED\nBST\nWoI\nReddit 2.7B\nUnsup.\n18.9\n21.0\n11.6\n17.4\n18.0\n.126\n.133\n.135\n.133\n.124\nBlenderBot 1\nSup.\n10.2\n12.5\n9.0\n11.9\n14.7\n.183\n.189\n.192\n.178\n.154\nR2C2 BlenderBot\nSup.\n10.5\n12.4\n9.1\n11.7\n14.6\n.205\n.198\n.197\n.186\n.160\nOPT-175B\nUnsup.\n10.8\n13.3\n10.3\n12.1\n12.0\n.185\n.152\n.149\n.162\n.147\nTable 2: Dialogue Evaluations. OPT-175B, in a fully unsupervised setting, performs competitively against fully\nsupervised models.\nSetup\nDavinci\nOPT-175B\nZero-shot\n.628\n.667\nOne-shot\n.616\n.713\nFew-shot (binary)\n.354\n.759\nFew-shot (multiclass)\n.672\n.812\nTable 3: Hate speech detection. F1 scores of detect-\ning hate speech between Davinci and OPT-175B. OPT-\n175B considerably outperforms Davinci in all settings.\nand few-shot binary cases, the model is presented\nwith text and asked to consider whether the text is\nracist or sexist and provide a yes/no response. In\nthe few-shot multiclass setting, the model is asked\nto provide a yes/no/neither response.\nResults are presented in Table 3. With all of\nour one-shot through few-shot conﬁgurations, OPT-\n175B performs considerably better than Davinci.\nWe speculate this occurs from two sources: (1)\nevaluating via the Davinci API may be bringing\nin safety control mechanisms beyond the original\n175B GPT-3 model used in Brown et al. (2020);\nand (2) the signiﬁcant presence of unmoderated\nsocial media discussions in the pre-training dataset\nhas provided additional inductive bias to aid in such\nclassiﬁcation tasks.\n4.2\nCrowS-Pairs\nDeveloped for masked language models, CrowS-\nPairs (Nangia et al., 2020) is a crowdsourced bench-\nmark aiming to measure intrasentence level biases\nin 9 categories: gender, religion, race/color, sex-\nual orientation, age, nationality, disability, physical\nappearance, and socioeconomic status. Each exam-\nple consists of a pair of sentences representing a\nstereotype, or anti-stereotype, regarding a certain\ngroup, with the goal of measuring model preference\ntowards stereotypical expressions. Higher scores\nindicate higher bias exhibited by a model.\nCategory\nGPT-3\nOPT-175B\nGender\n62.6\n65.7\nReligion\n73.3\n68.6\nRace/Color\n64.7\n68.6\nSexual orientation\n76.2\n78.6\nAge\n64.4\n67.8\nNationality\n61.6\n62.9\nDisability\n76.7\n76.7\nPhysical appearance\n74.6\n76.2\nSocioeconomic status\n73.8\n76.2\nOverall\n67.2\n69.5\nTable 4: CrowS-Pairs evaluation. Lower is better for\nall categories, indicating more fairness. The OPT-175B\nmodel performs worse than Davinci in most categories.\nWhen compared with Davinci in Table 4, OPT-\n175B appears to exhibit more stereotypical biases\nin almost all categories except for religion. Again,\nthis is likely due to differences in training data;\nNangia et al. (2020) showed that Pushshift.io Red-\ndit corpus has a higher incidence rate for stereo-\ntypes and discriminatory text than other corpora\n(e.g. Wikipedia).\nGiven this is a primary data\nsource for OPT-175B, the model may have learned\nmore discriminatory associations, which directly\nimpacts its performance on CrowS-Pairs.\n4.3\nStereoSet\nFollowing Lieber et al. (2021) and Artetxe et al.\n(2021), we use StereoSet (Nadeem et al., 2021)\nto measure stereotypical bias across 4 categories:\nprofession, gender, religion, and race. In addition\nto intrasentence measurement (similar to CrowS-\nPairs), StereoSet includes measurement at the inter-\nsentence level to test a model’s ability to incorpo-\nrate additional context. To account for a potential\ntrade-off between bias detection and language mod-\neling capability, StereoSet includes two metrics:\n\nCategory\nDavinci\nOPT-175B\nProf.\nLMS (↑)\n78.4\n74.1\nSS (↓)\n63.4\n62.6\nICAT (↑)\n57.5\n55.4\nGend.\nLMS (↑)\n75.6\n74.0\nSS (↓)\n66.5\n63.6\nICAT (↑)\n50.6\n53.8\nReli.\nLMS (↑)\n80.8\n84.0\nSS (↓)\n59.0\n59.0\nICAT (↑)\n66.3\n68.9\nRace\nLMS (↑)\n77.0\n74.9\nSS (↓)\n57.4\n56.8\nICAT (↑)\n65.7\n64.8\nOverall\nLMS (↑)\n77.6\n74.8\nSS (↓)\n60.8\n59.9\nICAT (↑)\n60.8\n60.0\nTable 5: StereoSet Evaluations. Davinci and OPT-\n175B perform similarly across all evaluations.\nLanguage Modeling Score (LMS) and Stereotype\nScore (SS), which are then combined to form the\nIdealized Context Association Test score (ICAT).\nUnlike Lieber et al. (2021), we normalize scores\nby token count, rather than character count, which\nthey report improves metrics for several models.\nResults are shown in Table 5.\nWe see that\nDavinci and OPT-175B exhibit similar scores on\naggregate (overall ICAT is very close between the\ntwo). In particular, Davinci outperforms in the\nareas of profession and race, while OPT-175B out-\nperforms in the areas of Gender and Religion. OPT-\n175B performs better across the board on the SS\nmetric, while Davinci generally outperforms on the\nLMS metric.\n4.4\nRealToxicityPrompts\nWe evaluate the tendency of OPT-175B to respond\nwith toxic language via the RealToxicityPrompts\n(Gehman et al., 2020) dataset. Following PaLM\n(Chowdhery et al., 2022), we sample 25 genera-\ntions of 20 tokens using nucleus sampling (Holtz-\nman et al., 2020) (p = 0.9) for each of 10, 000\nrandomly sampled prompts from RTP, and report\nmean toxicity probabilities of the continuations,\nstratiﬁed across bucketed toxicities of the original\nprompts. For comparison, we report bucketed toxi-\ncity rates from Davinci and PaLM.\nResults are shown in Figure 5. Overall, we see\n0.0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1.0\nPrompt Toxicity Probability (Binned)\n0.00\n0.05\n0.10\n0.15\n0.20\n0.25\n0.30\n0.35\n0.40\n0.45\nToxicity Probability of Continuation (TPC)\nToxicity Probability of Prompt (TPP)\nOPT 175B\nDavinci\nPaLM\nFigure 5: RealToxicityPompts.\nOPT-175B is more\nlikely to generate toxic responses than either Davinci\nor PaLM. Consistent with prior work, toxicity rates in-\ncrease as prompt toxicity increases.\nthat OPT-175B has a higher toxicity rate than ei-\nther PaLM or Davinci. We also observe that all\n3 models have increased likelihood of generating\ntoxic continuations as the toxicity of the prompt\nincreases, which is consistent with the observations\nof Chowdhery et al. (2022). As with our exper-\niments in hate speech detection, we suspect the\ninclusion of unmoderated social media texts in the\npre-training corpus raises model familiarity with,\nand therefore propensity to generate and detect,\ntoxic text. This strong awareness of toxic language\nmay or may not be desirable depending on the\nspeciﬁc requirements of downstream applications.\nFuture applications of OPT-175B should consider\nthis aspect of the model, and take additional miti-\ngations, or avoid usage entirely as appropriate.\n4.5\nDialogue Safety Evaluations\nFinally, we compare OPT-175B on two Dialogue\nSafety evaluations. The ﬁrst, SaferDialogues (Ung\net al., 2021), measures the ability to recover from\nexplicit safety failures, usually in the form of apol-\nogizing or recognizing its mistake. The second, the\nSafety Bench Unit Tests (Dinan et al., 2021), mea-\nsures how unsafe a model’s response is, stratiﬁed\nacross 4 levels of topic sensitivity: Safe, Realis-\ntic, Unsafe, and Adversarial. As with the other\ndialogue evaluations (Section 3.2), we compare to\nseveral existing open source dialogue models.\nResults for both experiments are shown in Ta-\nble 6. We observe that OPT-175B has similar per-\nformance as the Reddit 2.7B model across both\nSaferDialogues and the Unit Tests, with OPT-175B\nperforming marginally better in the Safe and Adver-\nsarial settings. Consistent with Roller et al. (2021)\n\nSafe. Dia.\nUnit Tests (↓)\nModel\nPPL\nF1\nSa\nRe\nUn\nAd\nReddit 2.7B\n16.2\n.140\n.300\n.261\n.450\n.439\nBlenderBot 1\n12.4\n.161\n.028\n.150\n.250\n.194\nR2C2 BlenderBot\n13.8\n.160\n.022\n.133\n.289\n.222\nOPT-175B\n14.7\n.141\n.033\n.261\n.567\n.283\nTable 6: Dialogue Responsible AI evaluations. OPT-\n175B is roughly on par with the Reddit 2.7B model, but\nperforms worse in the Unsafe setting.\nand Xu et al. (2020), we ﬁnd that the models ﬁne-\ntuned on curated dialogue datasets (BlenderBot 1,\nR2C2) have overall lower toxicity. We conclude\nthat future experimentation of OPT-175B for dia-\nlogue should contain explicit ﬁne-tuning on curated\ndatasets in order to improve the safety proﬁle.\n5\nLimitations\nIn Sections 3.1 and 4, we carried out extensive\nevaluation of all released models at varying scales.\nWe saw parity in performance for standard evalu-\nation datasets used in the GPT-3 models. More-\nover, we performed safety, bias, and inclusion eval-\nuations, again seeing largely comparable perfor-\nmance with some variations in toxicity and hate\nspeech detection. However, such evaluations may\nnot fully characterize the complete limitations of\nthese models. In general, we qualitatively observe\nthat OPT-175B suffers from the same limitations\nnoted in other LLMs (Brown et al., 2020; Lieber\net al., 2021; Thoppilan et al., 2022; Rae et al., 2021;\nSmith et al., 2022; Chowdhery et al., 2022; Bender\net al., 2021).\nIn particular, we found OPT-175B does not work\nwell with declarative instructions or point-blank\ninterrogatives. Prompting with such instructions\ntends to produce a simulation of a dialogue begin-\nning with such an instruction, rather than an execu-\ntion of the instruction. Future work into instruction\nlearning, in the vein of InstructGPT (Ouyang et al.,\n2022), may alleviate these limitations.\nOPT-175B also tends to be repetitive and can eas-\nily get stuck in a loop. While sampling can reduce\nthe incidence rate of repetitive behavior (Holtz-\nman et al., 2020), we anecdotally found it did not\neliminate it entirely when only one generation is\nsampled. Future work may wish to incorporate\nmore modern strategies for reducing repetition and\nimproving diversity, such as unlikelihood training\n(Welleck et al., 2020) or best-ﬁrst decoding (Meis-\nter et al., 2020).\nSimilar to other LLMs, OPT-175B can produce\nfactually incorrect statements (Adiwardana et al.,\n2020; Brown et al., 2020; Roller et al., 2021; Rae\net al., 2021; Chowdhery et al., 2022; Thoppilan\net al., 2022). This can be particularly harmful in\napplications where information accuracy is critical,\nsuch as healthcare and scientiﬁc discovery (Wei-\ndinger et al., 2021b). Recently, several efforts have\nreported that retrieval-augmented models can im-\nprove factual correctness of LLMs (Lewis et al.,\n2020; Komeili et al., 2021; Thoppilan et al., 2022;\nBorgeaud et al., 2021; Shuster et al., 2022; Nakano\net al., 2021). We believe OPT-175B will also bene-\nﬁt from retrieval-augmentation in future iterations.\nAs shown in Section 4, we also ﬁnd OPT-175B\nhas a high propensity to generate toxic language\nand reinforce harmful stereotypes, even when pro-\nvided with a relatively innocuous prompt (Gehman\net al., 2020), and adversarial prompts are trivial to\nﬁnd (Dinan et al., 2021). There has been a great\ndeal of work on mitigations for toxicity and bi-\nases (Dathathri et al., 2019; Dinan et al., 2019a;\nSheng et al., 2019; Dinan et al., 2020a; Liu et al.,\n2019a; Krause et al., 2020; Xu et al., 2020; Liang\net al., 2021; Dinan et al., 2021; Xu et al., 2021a;\nDhamala et al., 2021; Schick et al., 2021; Ouyang\net al., 2022). Depending on downstream applica-\ntions, future uses of OPT-175B may need to employ\nthese or novel mitigation approaches, especially be-\nfore any real world deployment. Given our primary\ngoal as a replication of GPT-3, we choose not to\napply these mitigations in this ﬁrst release.\nIn summary, we still believe this technology is\npremature for commercial deployment. Despite\nincluding data sheets and model cards, we believe\nmore scrutiny should be afforded to the training\ndata with additional data characterization and se-\nlection criteria in order to use data responsibly. The\ncurrent practice is to feed the model with as much\ndata as possible and minimal selection within these\ndatasets. Despite having comprehensive evalua-\ntions, we would ideally have more streamlined and\nconsistent evaluation setups to ensure replicability\nand reproducibility of evaluation scenarios. Dif-\nferences in prompting styles and number of shots\nfor in-context learning could create variations that\nlead to different results. We hope that the public\nrelease of the OPT models will enable many more\nresearchers to work on these important issues.\n\n6\nConsiderations for Release\nFollowing the recommendations for individual re-\nsearchers generated by the Partnership for AI,7\nalong with the governance guidance outlined by\nNIST,8 we are disclosing all of the details in-\nvolved in training OPT-175B through our log-\nbook,9 our code, and providing researchers access\nto model weights for OPT-175B, along with a suite\nof smaller baselines mirroring the setup for OPT-\n175B. We aim to be fully accountable for the devel-\nopment lifecycle of OPT-175B, and only through\nincreasing transparency around LLM development\ncan we start understanding the limitations and risks\nof LLMs before broader deployment occurs.\nBy sharing a detailed account of our day-to-day\ntraining process, we disclose not only how much\ncompute was used to train the current version of\nOPT-175B, but also the human overhead required\nwhen underlying infrastructure or the training pro-\ncess itself becomes unstable at scale. These details\nare generally omitted from previous publications,\nlikely due to the inability to fully ablate changes\nmade mid-ﬂight (without drastically increasing the\ncompute budget). We hope that by revealing how\ncertain ad-hoc design decisions were made, we can\nimprove upon these practices in the future, and col-\nlectively increase the experimental robustness in\ndeveloping models at this scale.\nOutside of these notes, the metaseq codebase\nitself is the ﬁnal source of truth in many of our\nimplementation details. By releasing our develop-\nment codebase, we aim to shed light on any imple-\nmentation detail that may have been omitted from\nbeing explicitly enumerated in this paper, as it is\neither considered a detail of standard practice in\nthe ﬁeld, or is simply a detail we failed to account\nfor. This current codebase is also the only known\nopen-source implementation of training a decoder-\nonly transformer that is ≥175B parameters without\nthe use of pipeline paralellism on NVIDIA GPUs.\nTo enable experimentation at 175B scale, we are\nproviding researchers with direct access to the pa-\nrameters of OPT-175B. The reasoning here is two-\nfold: enable Responsible AI research into LLMs\nwhile simultaneously reducing the environmental\n7https://partnershiponai.org/paper/\nresponsible-publication-recommendations/\n8https://nvlpubs.nist.gov/nistpubs/\nSpecialPublications/NIST.SP.1270.pdf\n9https://github.com/facebookresearch/\nmetaseq/blob/main/projects/OPT/\nchronicles/OPT175B_Logbook.pdf\nimpact of pursuing research at this scale. There is a\ngrowing body of work detailing ethical and social\nrisks from deploying language models with emer-\ngent capabilities at scale (Weidinger et al., 2021a;\nBommasani et al., 2021; Dinan et al., 2021; Kenton\net al., 2021). By limiting access to OPT-175B to\nthe research community with a non-commercial\nlicense, we aim to focus development efforts on\nquantifying the limitations of the LLMs ﬁrst, be-\nfore broader commercial deployment occurs.\nFurthermore, there exists signiﬁcant compute\nand carbon cost to reproduce models of this size.\nWhile OPT-175B was developed with an estimated\ncarbon emissions footprint (CO2eq) of 75 tons,10\nGPT-3 was estimated to use 500 tons (Patterson\net al., 2021), while Gopher required 380 tons (Rae\net al., 2021). These estimates are not universally re-\nported, and the accounting methodologies for these\ncalculations are also not standardized. In addition,\nmodel training is only one component of the over-\nall carbon footprint of AI systems; we must also\nconsider experimentation and eventual downstream\ninference cost, all of which contribute to the grow-\ning energy footprint of creating large-scale models\n(Wu et al., 2022). By releasing our logbook, we\nhope to highlight the gap between a theoretical car-\nbon cost estimate that assumes no hardware failures\nor training instabilities, versus one that aims to in-\nclude the entire LLM development lifecycle. We\nneed to understand the manufacturing (or embod-\nied) carbon of these systems (Gupta et al., 2021)\nas they grow increasingly more complex, and we\nhope that our paper can help future work in deﬁn-\ning additional factors to consider when measuring\nthe impact of scale on the environment.\nSimilarly, by producing a set of baselines across\na wide range of scales, we hope to enable the\nbroader research community to study the impact\nand limitations of these models with respect to\nscale alone. As reported in Hoffmann et al. (2022),\nmany of these LLMs may have been under-trained\nas a function of the amount of training data used,\nwhich implies that incorporating more data and con-\ntinuing to train these baseline models may continue\nto improve performance. There is also evidence\nthat step-function changes in capabilities may oc-\ncur at a scale that is much smaller than 175B (Wei\net al., 2021), indicating a need to examine a wider\nrange of scales for different research applications.\n10With ablations, baselines and downtime, our own esti-\nmates of total cost is roughly 2× higher.\n\n7\nRelated Work\nSince the publication of the Transformer architec-\nture (Vaswani et al., 2017) and BERT (Devlin et al.,\n2019), the ﬁeld of NLP has experienced a massive\nshift towards the use of LLMs with self-supervised\npre-training. Multiple masked langauge models,\nincluding T5 (Raffel et al., 2020) and Megatron-\nLM (Shoeybi et al., 2019), have shown consistent\nimprovements through scale. These scaling gains\ncome not only from growing the total number of\nparameters in the models, but also the amount and\nquality of pre-training data (Liu et al., 2019b; Hoff-\nmann et al., 2022).\nAuto-regressive language models (Mikolov et al.,\n2009) have seen the largest growth in model size,\nfrom 117M parameters (Radford et al., 2018) to\nover 500B parameters (Smith et al., 2022; Chowd-\nhery et al., 2022). The resulting massive improve-\nment in generative ﬂuency and quality was ﬁrst\ncharacterized in GPT-2 (Radford et al., 2019) and\nfurther improved with GPT-3 (Brown et al., 2020)\nand later models. Although a variety of very large\n(over 100B parameters) generative models have\nnow been trained (Lieber et al., 2021; Rae et al.,\n2021; Thoppilan et al., 2022; Smith et al., 2022;\nChowdhery et al., 2022), they are all closed source\nand accessible only internally or via paid API ser-\nvices. There are a few notable efforts towards open\nsourcing LLMs from non-proﬁt research organiza-\ntions including EleutherAI (Black et al., 2022) and\nBigScience.11 These models differ from the OPT\nmodels in pre-training data, target languages and\nmodel scale, making it possible for the community\nto compare different pre-training strategies.\nSince Brown et al. (2020), the primary evalu-\nation criterion for LLMs has been prompt-based\n(Black et al., 2022; Rae et al., 2021; Chowdhery\net al., 2022), as is also performed in this paper.\nThis is largely due to the convenience of evaluat-\ning on many tasks without specialized task-speciﬁc\nﬁne-tuning. Prompting itself has a long history:\ncloze evaluations go back several decades (Cham-\nbers and Jurafsky, 2008; Mostafazadeh et al., 2016).\nMore recently, prompting or masked inﬁlling has\nbeen used to probe models for knowledge (Petroni\net al., 2019) or perform a variety of NLP tasks\n(Radford et al., 2019; Brown et al., 2020). There\nhas also been work on eliciting prompting behav-\nior in smaller models (Schick and Schütze, 2020;\n11https://huggingface.co/bigscience/\ntr11-176B-ml-logs/tensorboard\nGao et al., 2021b; Li and Liang, 2021; Lester et al.,\n2021; Scao and Rush, 2021), improving the ﬂexi-\nbility of prompting (Shin et al., 2020), and under-\nstanding why and how prompting works (Liu et al.,\n2021; Min et al., 2022).\nRecent efforts have shown gains by ﬁne-tuning\nmodels to directly respond to instruction-style\nprompting (Wei et al., 2021; Min et al., 2021; Sanh\net al., 2021; Ouyang et al., 2022). However, ef-\nfective prompt engineering remains an open re-\nsearch challenge. Results vary signiﬁcantly and\nunpredictably with the selection of the prompt (Lu\net al., 2021), and models do not seem to understand\nthe prompts as fully as we expect (Webson and\nPavlick, 2021). Furthermore, it is challenging to\nwrite prompts without a development set, which\nleads to questions about the extent to which we\nare actually achieving zero- or few-shot learning in\npractice (Perez et al., 2021). We do not attempt to\naddress these concerns of prompting, and instead\nonly aim to provide evaluation of OPT-175B in ex-\nisting settings. However, we hope the full release of\nOPT-175B will enable others to better study these\nchallenges in the future.\n8\nConclusion\nIn this technical report, we introduced OPT, a col-\nlection of auto-regressive language models ranging\nin size from 125M to 175B parameters. Our goal\nwas to replicate the performance and sizes of the\nGPT-3 class of models, while also applying the\nlatest best practices in data curation and training\nefﬁciency. We described training details, evaluated\nperformance in a number of NLP and dialogue set-\ntings, and characterized behaviors with respect to\nbias, toxicity and hate speech. We also described\nmany other limitations the models have, and dis-\ncussed a wide set of considerations for responsibly\nreleasing the models. We believe the entire AI\ncommunity would beneﬁt from working together\nto develop guidelines for responsible LLMs, and\nwe hope that broad access to these types of models\nwill increase the diversity of voices deﬁning the\nethical considerations of such technologies.\nAcknowledgements\nWe would like to thank Scott Jeschonek, Giri Anan-\ntharaman, Diego Sarina, Joaquin Colombo, Chris\nBray, Stephen Roylance, Kalyan Saladi, Shubho\nSengupta, and Brian O’Horo for helping to remove\ninfrastructure blockers along the way; Percy Liang,\n\nRishi Bommasani, and Emily Dinan for discus-\nsions on responsible release practices; Carole-Jean\nWu for discussions on sustainability and carbon\nfootprint considerations; Srini Iyer, Ramakanth Pa-\nsunuru, and Shruti Bhosale for previous contribu-\ntions to evaluations; Benjamin Lefaudeux, Geeta\nChauhan, Natalia Gimelshein, Horace He, and Sam\nGross for discussions on performance improvement\nwork; Emily Dinan, Carole-Jean Wu, Daniel McK-\ninnon, and Mark Tygert for feedback on this draft;\nAntoine Bordes, Joelle Pineau, Mary Williamson,\nNecip Fazil Ayan, Armand Joulin, Sergey Edunov,\nMelanie Kambadur, Zornitsa Kozareva, Ves Stoy-\nanov, Vitaliy Liptchinsky, Rahul Iyer, Jing Xu, Ja-\nson Weston, and many others for supporting this\nproject internally.\nReferences\nDaniel Adiwardana, Minh-Thang Luong, David R So,\nJamie Hall, Noah Fiedel, Romal Thoppilan, Zi Yang,\nApoorv Kulshreshtha, Gaurav Nemade, Yifeng Lu,\net al. 2020.\nTowards a human-like open-domain\nchatbot. arXiv preprint arXiv:2001.09977.\nMikel Artetxe, Shruti Bhosale, Naman Goyal, Todor\nMihaylov, Myle Ott, Sam Shleifer, Xi Victoria Lin,\nJingfei Du, Srinivasan Iyer, Ramakanth Pasunuru,\nGiri Anantharaman, Xian Li, Shuohui Chen, Halil\nAkin, Mandeep Baines, Louis Martin, Xing Zhou,\nPunit Singh Koura, Brian O’Horo, Jeff Wang, Luke\nZettlemoyer, Mona T. Diab, Zornitsa Kozareva, and\nVes Stoyanov. 2021.\nEfﬁcient large scale lan-\nguage modeling with mixtures of experts.\nCoRR,\nabs/2112.10684.\nJason Baumgartner, Savvas Zannettou, Brian Keegan,\nMegan Squire, and Jeremy Blackburn. 2020. The\npushshift reddit dataset. CoRR, abs/2001.08435.\nEmily M Bender, Timnit Gebru, Angelina McMillan-\nMajor, and Shmargaret Shmitchell. 2021.\nOn the\ndangers of stochastic parrots: Can language models\nbe too big? In Proceedings of the 2021 ACM Confer-\nence on Fairness, Accountability, and Transparency,\npages 610–623.\nYonatan Bisk, Rowan Zellers, Ronan Le bras, Jianfeng\nGao, and Yejin Choi. 2020. Piqa: Reasoning about\nphysical commonsense in natural language.\nPro-\nceedings of the AAAI Conference on Artiﬁcial Intel-\nligence, 34(05):7432–7439.\nSid Black, Stella Biderman, Eric Hallahan, Quentin An-\nthony, Leo Gao, Laurence Golding, Horace He, Con-\nnor Leahy, Kyle McDonell, Jason Phang, Michael\nPieler, USVSN Sai Prashanth, Shivanshu Purohit,\nLaria Reynolds, Jonathan Tow, Ben Wang, and\nSamuel Weinbach. 2022. Gpt-neox-20b: An open-\nsource autoregressive language model.\nSu Lin Blodgett, Gilsinia Lopez, Alexandra Olteanu,\nRobert Sim, and Hanna Wallach. 2021. Stereotyp-\ning Norwegian salmon: An inventory of pitfalls in\nfairness benchmark datasets. In Proceedings of the\n59th Annual Meeting of the Association for Compu-\ntational Linguistics and the 11th International Joint\nConference on Natural Language Processing (Vol-\nume 1: Long Papers), pages 1004–1015, Online. As-\nsociation for Computational Linguistics.\nRishi Bommasani, Drew A. Hudson, Ehsan Adeli,\nRuss Altman, Simran Arora, Sydney von Arx,\nMichael S. Bernstein, Jeannette Bohg, Antoine\nBosselut, Emma Brunskill, Erik Brynjolfsson, Shya-\nmal Buch, Dallas Card, Rodrigo Castellon, Ni-\nladri Chatterji, Annie S. Chen, Kathleen Creel,\nJared Quincy Davis, Dorottya Demszky, Chris Don-\nahue, Moussa Doumbouya, Esin Durmus, Stefano\nErmon, John Etchemendy, Kawin Ethayarajh, Li Fei-\nFei, Chelsea Finn, Trevor Gale, Lauren Gillespie,\nKaran Goel, Noah D. Goodman, Shelby Grossman,\nNeel Guha, Tatsunori Hashimoto, Peter Henderson,\nJohn Hewitt, Daniel E. Ho, Jenny Hong, Kyle Hsu,\nJing Huang, Thomas Icard, Saahil Jain, Dan Juraf-\nsky, Pratyusha Kalluri, Siddharth Karamcheti, Geoff\nKeeling, Fereshte Khani, Omar Khattab, Pang Wei\nKoh, Mark S. Krass, Ranjay Krishna, Rohith Kudi-\ntipudi, and et al. 2021.\nOn the opportunities and\nrisks of foundation models. CoRR, abs/2108.07258.\nSebastian Borgeaud, Arthur Mensch, Jordan Hoff-\nmann, Trevor Cai, Eliza Rutherford, Katie Millican,\nGeorge van den Driessche, Jean-Baptiste Lespiau,\nBogdan Damoc, Aidan Clark, et al. 2021. Improv-\ning language models by retrieving from trillions of\ntokens. arXiv preprint arXiv:2112.04426.\nTom Brown, Benjamin Mann, Nick Ryder, Melanie\nSubbiah,\nJared\nD\nKaplan,\nPrafulla\nDhariwal,\nArvind Neelakantan, Pranav Shyam, Girish Sastry,\nAmanda Askell, Sandhini Agarwal, Ariel Herbert-\nVoss, Gretchen Krueger, Tom Henighan, Rewon\nChild, Aditya Ramesh, Daniel Ziegler, Jeffrey Wu,\nClemens Winter, Chris Hesse, Mark Chen, Eric\nSigler, Mateusz Litwin, Scott Gray, Benjamin Chess,\nJack Clark, Christopher Berner, Sam McCandlish,\nAlec Radford, Ilya Sutskever, and Dario Amodei.\n2020. Language models are few-shot learners. In\nAdvances in Neural Information Processing Systems,\nvolume 33, pages 1877–1901. Curran Associates,\nInc.\nNathanael Chambers and Dan Jurafsky. 2008. Unsuper-\nvised learning of narrative event chains. In Proceed-\nings of ACL-08: HLT, pages 789–797, Columbus,\nOhio. Association for Computational Linguistics.\nKe-Li Chiu and Rohan Alexander. 2021.\nDetect-\ning hate speech with gpt-3.\narXiv preprint\narXiv:2103.12407.\nAakanksha Chowdhery, Sharan Narang, Jacob Devlin,\nMaarten Bosma, Gaurav Mishra, Adam Roberts,\nPaul Barham, Hyung Won Chung, Charles Sutton,\nSebastian Gehrmann, Parker Schuh, Kensen Shi,\n\nSasha Tsvyashchenko, Joshua Maynez, Abhishek\nRao, Parker Barnes, Yi Tay, Noam Shazeer, Vin-\nodkumar Prabhakaran, Emily Reif, Nan Du, Ben\nHutchinson, Reiner Pope, James Bradbury, Jacob\nAustin, Michael Isard, Guy Gur-Ari, Pengcheng\nYin, Toju Duke, Anselm Levskaya, Sanjay Ghe-\nmawat, Sunipa Dev, Henryk Michalewski, Xavier\nGarcia, Vedant Misra, Kevin Robinson, Liam Fe-\ndus, Denny Zhou, Daphne Ippolito, David Luan,\nHyeontaek Lim, Barret Zoph, Alexander Spiridonov,\nRyan Sepassi, David Dohan, Shivani Agrawal, Mark\nOmernick, Andrew M. Dai, Thanumalayan Sankara-\nnarayana Pillai, Marie Pellat, Aitor Lewkowycz,\nErica Moreira, Rewon Child, Oleksandr Polozov,\nKatherine Lee, Zongwei Zhou, Xuezhi Wang, Bren-\nnan Saeta, Mark Diaz, Orhan Firat, Michele Catasta,\nJason Wei, Kathy Meier-Hellstern, Douglas Eck,\nJeff Dean, Slav Petrov, and Noah Fiedel. 2022.\nPalm: Scaling language modeling with pathways.\nPeter Clark, Isaac Cowhey, Oren Etzioni, Tushar Khot,\nAshish Sabharwal, Carissa Schoenick, and Oyvind\nTafjord. 2018.\nThink you have solved question\nanswering?\ntry arc, the AI2 reasoning challenge.\nCoRR, abs/1803.05457.\nSumanth Dathathri, Andrea Madotto, Janice Lan, Jane\nHung, Eric Frank, Piero Molino, Jason Yosinski, and\nRosanne Liu. 2019. Plug and play language mod-\nels: A simple approach to controlled text generation.\narXiv preprint arXiv:1912.02164.\nJacob Devlin, Ming-Wei Chang, Kenton Lee, and\nKristina Toutanova. 2019.\nBERT: Pre-training of\ndeep bidirectional transformers for language under-\nstanding. In North American Association for Com-\nputational Linguistics (NAACL).\nJwala Dhamala, Tony Sun, Varun Kumar, Satyapriya\nKrishna, Yada Pruksachatkun, Kai-Wei Chang, and\nRahul Gupta. 2021.\nBold: Dataset and metrics\nfor measuring biases in open-ended language gen-\neration. In Proceedings of the 2021 ACM Confer-\nence on Fairness, Accountability, and Transparency,\npages 862–872.\nEmily Dinan, Gavin Abercrombie, A Stevie Bergman,\nShannon Spruit, Dirk Hovy, Y-Lan Boureau, and\nVerena Rieser. 2021.\nAnticipating safety issues\nin e2e conversational ai: Framework and tooling.\narXiv preprint arXiv:2107.03451.\nEmily Dinan, Angela Fan, Adina Williams, Jack Ur-\nbanek, Douwe Kiela, and Jason Weston. 2020a.\nQueens are powerful too: Mitigating gender bias in\ndialogue generation.\nIn Proceedings of the 2020\nConference on Empirical Methods in Natural Lan-\nguage Processing (EMNLP), pages 8173–8188, On-\nline. Association for Computational Linguistics.\nEmily Dinan, Samuel Humeau, Bharath Chintagunta,\nand Jason Weston. 2019a. Build it break it ﬁx it for\ndialogue safety: Robustness from adversarial human\nattack. arXiv preprint arXiv:1908.06083.\nEmily Dinan,\nVarvara Logacheva,\nValentin\nMa-\nlykh, Alexander Miller, Kurt Shuster, Jack Ur-\nbanek, Douwe Kiela, Arthur Szlam, Iulian Serban,\nRyan Lowe, Shrimai Prabhumoye, Alan W. Black,\nAlexander Rudnicky, Jason Williams, Joelle Pineau,\nMikhail Burtsev, and Jason Weston. 2020b.\nThe\nsecond conversational intelligence challenge (Con-\nvAI2). In The NeurIPS ’18 Competition, pages 187–\n208, Cham. Springer International Publishing.\nEmily Dinan, Stephen Roller, Kurt Shuster, Angela\nFan, Michael Auli, and Jason Weston. 2019b. Wiz-\nard of Wikipedia: Knowledge-powered conversa-\ntional agents. In Proceedings of the International\nConference on Learning Representations.\nLeo Gao, Stella Biderman, Sid Black, Laurence Gold-\ning, Travis Hoppe, Charles Foster, Jason Phang,\nHorace He, Anish Thite, Noa Nabeshima, Shawn\nPresser, and Connor Leahy. 2021a. The pile: An\n800gb dataset of diverse text for language modeling.\nCoRR, abs/2101.00027.\nTianyu Gao, Adam Fisch, and Danqi Chen. 2021b.\nMaking pre-trained language models better few-shot\nlearners. In Proceedings of the 59th Annual Meet-\ning of the Association for Computational Linguis-\ntics and the 11th International Joint Conference on\nNatural Language Processing, ACL/IJCNLP 2021,\n(Volume 1: Long Papers), Virtual Event, August 1-6,\n2021, pages 3816–3830. Association for Computa-\ntional Linguistics.\nTimnit\nGebru,\nJamie\nMorgenstern,\nBriana\nVec-\nchione,\nJennifer\nWortman\nVaughan,\nHanna\nWallach,\nHal Daumé III, and Kate Crawford.\n2021.\nDatasheets for datasets.\nCommun. ACM,\n64(12):86–92.\nSamuel Gehman, Suchin Gururangan, Maarten Sap,\nYejin Choi, and Noah A. Smith. 2020.\nRealToxi-\ncityPrompts: Evaluating neural toxic degeneration\nin language models. In Findings of the Association\nfor Computational Linguistics: EMNLP 2020, pages\n3356–3369, Online. Association for Computational\nLinguistics.\nUdit Gupta, Young Geun Kim, Sylvia Lee, Jordan Tse,\nHsien-Hsin S Lee, Gu-Yeon Wei, David Brooks, and\nCarole-Jean Wu. 2021. Chasing carbon: The elu-\nsive environmental footprint of computing. IEEE In-\nternational Symposium on High-Performance Com-\nputer Architecture (HPCA 2021).\nKaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian\nSun. 2016. Deep residual learning for image recog-\nnition. In Proceedings of the IEEE conference on\ncomputer vision and pattern recognition, pages 770–\n778.\nJordan Hoffmann, Sebastian Borgeaud, Arthur Mensch,\nElena Buchatskaya, Trevor Cai, Eliza Rutherford,\nDiego de Las Casas, Lisa Anne Hendricks, Johannes\nWelbl, Aidan Clark, Tom Hennigan, Eric Noland,\nKatie Millican, George van den Driessche, Bogdan\n\nDamoc, Aurelia Guy, Simon Osindero, Karen Si-\nmonyan, Erich Elsen, Jack W. Rae, Oriol Vinyals,\nand Laurent Sifre. 2022. Training compute-optimal\nlarge language models.\nAri Holtzman, Jan Buys, Maxwell Forbes, and Yejin\nChoi. 2020. The curious case of neural text degener-\nation. ArXiv, abs/1904.09751.\nAbigail Z. Jacobs and Hanna Wallach. 2021. Measure-\nment and fairness. In Proceedings of the 2021 ACM\nConference on Fairness, Accountability, and Trans-\nparency, FAccT ’21, page 375–385, New York, NY,\nUSA. Association for Computing Machinery.\nZachary Kenton, Tom Everitt, Laura Weidinger, Ia-\nson Gabriel, Vladimir Mikulik, and Geoffrey Irv-\ning. 2021. Alignment of language agents. CoRR,\nabs/2103.14659.\nMojtaba Komeili, Kurt Shuster, and Jason Weston.\n2021.\nInternet-augmented dialogue generation.\nCoRR, abs/2107.07566.\nBen Krause, Akhilesh Deepak Gotmare, Bryan Mc-\nCann, Nitish Shirish Keskar, Shaﬁq Joty, Richard\nSocher, and Nazneen Fatema Rajani. 2020. GEDI:\nGenerative discriminator guided sequence genera-\ntion. arXiv preprint arXiv:2009.06367.\nBrian Lester, Rami Al-Rfou, and Noah Constant. 2021.\nThe power of scale for parameter-efﬁcient prompt\ntuning. CoRR, abs/2104.08691.\nHector J Levesque, Ernest Davis, and Leora Morgen-\nstern. 2011. The Winograd schema challenge. In\nAAAI Spring Symposium: Logical Formalizations of\nCommonsense Reasoning, volume 46, page 47.\nPatrick Lewis, Ethan Perez, Aleksandra Piktus, Fabio\nPetroni, Vladimir Karpukhin, Naman Goyal, Hein-\nrich Küttler, Mike Lewis, Wen-tau Yih, Tim Rock-\ntäschel, et al. 2020. Retrieval-augmented generation\nfor knowledge-intensive nlp tasks. Advances in Neu-\nral Information Processing Systems, 33:9459–9474.\nXiang Lisa Li and Percy Liang. 2021. Preﬁx-Tuning:\nOptimizing Continuous Prompts for Generation.\npages 4582–4597.\nPaul Pu Liang, Chiyu Wu, Louis-Philippe Morency,\nand Ruslan Salakhutdinov. 2021.\nTowards under-\nstanding and mitigating social biases in language\nmodels.\nIn International Conference on Machine\nLearning, pages 6565–6576. PMLR.\nOpher Lieber, Or Sharir, Barak Lenz, and Yoav\nShoham. 2021.\nJurassic-1: Technical details and\nevaluation. Technical report, AI21 Labs.\nHaochen Liu, Jamell Dacon, Wenqi Fan, Hui Liu, Zitao\nLiu, and Jiliang Tang. 2019a. Does gender matter?\ntowards fairness in dialogue systems. arXiv preprint\narXiv:1910.10486.\nHaokun Liu, William Huang, Dhara Mungra, and\nSamuel R. Bowman. 2020. Precise task formaliza-\ntion matters in Winograd schema evaluations.\nIn\nProceedings of the 2020 Conference on Empirical\nMethods in Natural Language Processing (EMNLP),\npages 8275–8280, Online. Association for Computa-\ntional Linguistics.\nJiachang Liu, Dinghan Shen, Yizhe Zhang, Bill Dolan,\nLawrence Carin, and Weizhu Chen. 2021.\nWhat\nmakes good in-context examples for gpt-3? CoRR,\nabs/2101.06804.\nYinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Man-\ndar Joshi, Danqi Chen, Omer Levy, Mike Lewis,\nLuke Zettlemoyer, and Veselin Stoyanov. 2019b.\nRoberta: A robustly optimized bert pretraining ap-\nproach. arXiv preprint arXiv:1907.11692.\nIlya Loshchilov and Frank Hutter. 2017.\nFixing\nweight decay regularization in adam.\nCoRR,\nabs/1711.05101.\nYao Lu, Max Bartolo, Alastair Moore, Sebastian\nRiedel, and Pontus Stenetorp. 2021.\nFantastically\nordered prompts and where to ﬁnd them: Overcom-\ning few-shot prompt order sensitivity.\nClara Meister, Tim Vieira, and Ryan Cotterell. 2020.\nBest-ﬁrst beam search. Transactions of the Associa-\ntion for Computational Linguistics, 8:795–809.\nPaulius Micikevicius, Sharan Narang, Jonah Alben,\nGregory Diamos, Erich Elsen, David Garcia, Boris\nGinsburg,\nMichael Houston,\nOleksii Kuchaiev,\nGanesh Venkatesh, et al. 2017.\nMixed precision\ntraining. arXiv preprint arXiv:1710.03740.\nTodor Mihaylov, Peter Clark, Tushar Khot, and Ashish\nSabharwal. 2018. Can a suit of armor conduct elec-\ntricity? A new dataset for open book question an-\nswering. CoRR, abs/1809.02789.\nTomas Mikolov, Jiri Kopecky, Lukas Burget, Ondrej\nGlembek, et al. 2009.\nNeural network based lan-\nguage models for highly inﬂective languages.\nIn\n2009 IEEE international conference on acoustics,\nspeech and signal processing, pages 4725–4728.\nIEEE.\nSewon Min, Mike Lewis, Luke Zettlemoyer, and Han-\nnaneh Hajishirzi. 2021. Metaicl: Learning to learn\nin context.\nSewon Min, Xinxi Lyu, Ari Holtzman, Mikel Artetxe,\nMike Lewis, Hannaneh Hajishirzi, and Luke Zettle-\nmoyer. 2022.\nRethinking the role of demonstra-\ntions: What makes in-context learning work? arXiv\npreprint arXiv:2202.12837.\nMargaret Mitchell, Simone Wu, Andrew Zaldivar,\nParker Barnes, Lucy Vasserman, Ben Hutchinson,\nElena Spitzer, Inioluwa Deborah Raji, and Timnit\nGebru. 2018.\nModel cards for model reporting.\nCoRR, abs/1810.03993.\n\nIoannis Mollas, Zoe Chrysopoulou, Stamatis Kar-\nlos, and Grigorios Tsoumakas. 2020.\nETHOS:\nan online hate speech detection dataset.\nCoRR,\nabs/2006.08328.\nNasrin Mostafazadeh, Nathanael Chambers, Xiaodong\nHe,\nDevi Parikh,\nDhruv Batra,\nLucy Vander-\nwende, Pushmeet Kohli, and James F. Allen. 2016.\nA corpus and evaluation framework for deeper\nunderstanding of commonsense stories.\nCoRR,\nabs/1604.01696.\nMoin Nadeem, Anna Bethke, and Siva Reddy. 2021.\nStereoSet:\nMeasuring stereotypical bias in pre-\ntrained language models. In Association for Com-\nputational Linguistics (ACL).\nReiichiro Nakano, Jacob Hilton, Suchir Balaji, Jeff Wu,\nLong Ouyang, Christina Kim, Christopher Hesse,\nShantanu Jain, Vineet Kosaraju, William Saunders,\net al. 2021.\nWebgpt: Browser-assisted question-\nanswering with human feedback.\narXiv preprint\narXiv:2112.09332.\nNikita Nangia, Clara Vania, Rasika Bhalerao, and\nSamuel R Bowman. 2020.\nCrows-pairs: A chal-\nlenge dataset for measuring social biases in masked\nlanguage models. arXiv preprint arXiv:2010.00133.\nErik Nijkamp, Bo Pang, Hiroaki Hayashi, Lifu Tu,\nHuan Wang, Yingbo Zhou, Silvio Savarese, and\nCaiming Xiong. 2022. A conversational paradigm\nfor program synthesis. arXiv preprint.\nLong Ouyang, Jeff Wu, Xu Jiang, Diogo Almeida, Car-\nroll L Wainwright, Pamela Mishkin, Chong Zhang,\nSandhini Agarwal, Katarina Slama, Alex Ray, et al.\n2022.\nTraining language models to follow in-\nstructions with human feedback.\narXiv preprint\narXiv:2203.02155.\nDavid Patterson, Joseph Gonzalez, Quoc Le, Chen\nLiang, Lluis-Miquel Munguia, Daniel Rothchild,\nDavid So, Maud Texier, and Jeff Dean. 2021. Car-\nbon emissions and large neural network training.\narXiv preprint arXiv:2104.10350.\nEthan Perez, Douwe Kiela, and Kyunghyun Cho. 2021.\nTrue few-shot learning with language models. Ad-\nvances in Neural Information Processing Systems,\n34.\nFabio Petroni, Tim Rocktäschel, Sebastian Riedel,\nPatrick Lewis, Anton Bakhtin, Yuxiang Wu, and\nAlexander Miller. 2019. Language models as knowl-\nedge bases?\nIn Proceedings of the 2019 Confer-\nence on Empirical Methods in Natural Language\nProcessing and the 9th International Joint Confer-\nence on Natural Language Processing (EMNLP-\nIJCNLP), pages 2463–2473, Hong Kong, China. As-\nsociation for Computational Linguistics.\nAlec Radford, Karthik Narasimhan, Time Salimans,\nand Ilya Sutskever. 2018. Improving language un-\nderstanding with unsupervised learning. Technical\nreport, OpenAI.\nAlec Radford, Jeffrey Wu, Rewon Child, David Luan,\nDario Amodei, and Ilya Sutskever. 2019. Language\nmodels are unsupervised multitask learners. Techni-\ncal report, OpenAI.\nJack W. Rae, Sebastian Borgeaud, Trevor Cai, Katie\nMillican, Jordan Hoffmann, H. Francis Song, John\nAslanides, Sarah Henderson, Roman Ring, Susan-\nnah Young, Eliza Rutherford, Tom Hennigan, Ja-\ncob Menick, Albin Cassirer, Richard Powell, George\nvan den Driessche, Lisa Anne Hendricks, Mari-\nbeth Rauh, Po-Sen Huang, Amelia Glaese, Jo-\nhannes Welbl, Sumanth Dathathri, Saffron Huang,\nJonathan Uesato, John Mellor, Irina Higgins, An-\ntonia Creswell, Nat McAleese, Amy Wu, Erich\nElsen, Siddhant M. Jayakumar, Elena Buchatskaya,\nDavid Budden, Esme Sutherland, Karen Simonyan,\nMichela Paganini, Laurent Sifre, Lena Martens,\nXiang Lorraine Li, Adhiguna Kuncoro, Aida Ne-\nmatzadeh, Elena Gribovskaya, Domenic Donato,\nAngeliki Lazaridou, Arthur Mensch, Jean-Baptiste\nLespiau, Maria Tsimpoukelli, Nikolai Grigorev,\nDoug Fritz, Thibault Sottiaux, Mantas Pajarskas,\nToby Pohlen, Zhitao Gong, Daniel Toyama, Cy-\nprien de Masson d’Autume, Yujia Li, Tayfun Terzi,\nVladimir Mikulik, Igor Babuschkin, Aidan Clark,\nDiego de Las Casas, Aurelia Guy, Chris Jones,\nJames Bradbury, Matthew Johnson, Blake A. Hecht-\nman, Laura Weidinger, Iason Gabriel, William S.\nIsaac, Edward Lockhart, Simon Osindero, Laura\nRimell, Chris Dyer, Oriol Vinyals, Kareem Ayoub,\nJeff Stanway, Lorrayne Bennett, Demis Hassabis,\nKoray Kavukcuoglu, and Geoffrey Irving. 2021.\nScaling language models: Methods, analysis & in-\nsights from training gopher. CoRR, abs/2112.11446.\nColin Raffel, Noam Shazeer, Adam Roberts, Katherine\nLee, Sharan Narang, Michael Matena, Yanqi Zhou,\nWei Li, and Peter J Liu. 2020. Exploring the limits\nof transfer learning with a uniﬁed text-to-text trans-\nformer. The Journal of Machine Learning Research\n(JMLR), 21:1–67.\nAnand Rajaraman and Jeffrey David Ullman. 2011.\nMining of massive datasets. Cambridge University\nPress.\nHannah Rashkin, Eric Michael Smith, Margaret Li, and\nY-Lan Boureau. 2019.\nTowards empathetic open-\ndomain conversation models: A new benchmark and\ndataset.\nIn Proceedings of the 57th Annual Meet-\ning of the Association for Computational Linguis-\ntics, pages 5370–5381, Florence, Italy. Association\nfor Computational Linguistics.\nStephen Roller, Emily Dinan, Naman Goyal, Da Ju,\nMary Williamson, Yinhan Liu, Jing Xu, Myle Ott,\nEric Michael Smith, Y-Lan Boureau, and Jason We-\nston. 2021.\nRecipes for building an open-domain\nchatbot. In Proceedings of the 16th Conference of\nthe European Chapter of the Association for Compu-\ntational Linguistics: Main Volume, pages 300–325,\nOnline. Association for Computational Linguistics.\n\nKeisuke Sakaguchi, Ronan Le Bras, Chandra Bhagavat-\nula, and Yejin Choi. 2020. Winogrande: An adver-\nsarial winograd schema challenge at scale. In The\nThirty-Fourth AAAI Conference on Artiﬁcial Intelli-\ngence, AAAI 2020, The Thirty-Second Innovative Ap-\nplications of Artiﬁcial Intelligence Conference, IAAI\n2020, The Tenth AAAI Symposium on Educational\nAdvances in Artiﬁcial Intelligence, EAAI 2020, New\nYork, NY, USA, February 7-12, 2020, pages 8732–\n8740. AAAI Press.\nVictor Sanh, Albert Webson, Colin Raffel, Stephen H.\nBach, Lintang Sutawika, Zaid Alyafeai, Antoine\nChafﬁn, Arnaud Stiegler, Teven Le Scao, Arun Raja,\nManan Dey, M Saiful Bari, Canwen Xu, Urmish\nThakker, Shanya Sharma Sharma, Eliza Szczechla,\nTaewoon Kim, Gunjan Chhablani, Nihal Nayak,\nDebajyoti Datta, Jonathan Chang, Mike Tian-Jian\nJiang, Han Wang, Matteo Manica, Sheng Shen,\nZheng Xin Yong, Harshit Pandey, Rachel Bawden,\nThomas Wang, Trishala Neeraj, Jos Rozen, Ab-\nheesht Sharma, Andrea Santilli, Thibault Fevry, Ja-\nson Alan Fries, Ryan Teehan, Stella Biderman, Leo\nGao, Tali Bers, Thomas Wolf, and Alexander M.\nRush. 2021.\nMultitask prompted training enables\nzero-shot task generalization.\nTeven Le Scao and Alexander M. Rush. 2021. How\nmany data points is a prompt worth?\npages 2627–\n2636.\nTimo Schick and Hinrich Schütze. 2020. It’s not just\nsize that matters: Small language models are also\nfew-shot learners. CoRR, abs/2009.07118.\nTimo Schick, Sahana Udupa, and Hinrich Schütze.\n2021. Self-diagnosis and self-debiasing: A proposal\nfor reducing corpus-based bias in nlp. Transactions\nof the Association for Computational Linguistics,\n9:1408–1424.\nRico Sennrich, Barry Haddow, and Alexandra Birch.\n2016.\nNeural machine translation of rare words\nwith subword units. In Proceedings of the 54th An-\nnual Meeting of the Association for Computational\nLinguistics (Volume 1: Long Papers), pages 1715–\n1725, Berlin, Germany. Association for Computa-\ntional Linguistics.\nEmily Sheng, Kai-Wei Chang, Premkumar Natarajan,\nand Nanyun Peng. 2019. The woman worked as a\nbabysitter: On biases in language generation. arXiv\npreprint arXiv:1909.01326.\nTaylor Shin, Yasaman Razeghi, Robert L. Logan IV,\nEric Wallace, and Sameer Singh. 2020. AutoPrompt:\nEliciting Knowledge from Language Models with\nAutomatically Generated Prompts.\npages 4222–\n4235.\nMohammad Shoeybi, Mostofa Patwary, Raul Puri,\nPatrick LeGresley, Jared Casper, and Bryan Catan-\nzaro. 2019. Megatron-lm: Training multi-billion pa-\nrameter language models using model parallelism.\narXiv preprint arXiv:1909.08053.\nKurt Shuster, Mojtaba Komeili, Leonard Adolphs,\nStephen Roller, Arthur Szlam, and Jason We-\nston. 2022.\nLanguage models that seek for\nknowledge: Modular search & generation for di-\nalogue and prompt completion.\narXiv preprint\narXiv:2203.13224.\nEric Smith, Mary Williamson, Kurt Shuster, Jason We-\nston, and Y-Lan Boureau. 2020. Can you put it all\ntogether: Evaluating conversational agents’ ability\nto blend skills. In Proceedings of the 58th Annual\nMeeting of the Association for Computational Lin-\nguistics. ACL.\nShaden Smith, Mostofa Patwary, Brandon Norick,\nPatrick LeGresley, Samyam Rajbhandari, Jared\nCasper, Zhun Liu, Shrimai Prabhumoye, George\nZerveas, Vijay Korthikanti, Elton Zheng, Rewon\nChild, Reza Yazdani Aminabadi, Julie Bernauer, Xia\nSong, Mohammad Shoeybi, Yuxiong He, Michael\nHouston, Saurabh Tiwary, and Bryan Catanzaro.\n2022.\nUsing deepspeed and megatron to train\nmegatron-turing NLG 530b, A large-scale genera-\ntive language model. CoRR, abs/2201.11990.\nRomal Thoppilan, Daniel De Freitas, Jamie Hall,\nNoam Shazeer, Apoorv Kulshreshtha, Heng-Tze\nCheng, Alicia Jin, Taylor Bos, Leslie Baker, Yu Du,\net al. 2022. Lamda: Language models for dialog\napplications. arXiv preprint arXiv:2201.08239.\nTrieu H. Trinh and Quoc V. Le. 2018.\nA sim-\nple method for commonsense reasoning.\nCoRR,\nabs/1806.02847.\nMegan Ung, Jing Xu, and Y-Lan Boureau. 2021. Safer-\ndialogues: Taking feedback gracefully after conver-\nsational safety failures. ArXiv, abs/2110.07518.\nAshish Vaswani, Noam Shazeer, Niki Parmar, Jakob\nUszkoreit, Llion Jones, Aidan N Gomez, Łukasz\nKaiser, and Illia Polosukhin. 2017. Attention is all\nyou need. In Advances in neural information pro-\ncessing systems.\nAlex Wang,\nYada Pruksachatkun,\nNikita Nangia,\nAmanpreet Singh, Julian Michael, Felix Hill, Omer\nLevy, and Samuel R. Bowman. 2019. SuperGLUE:\nA stickier benchmark for general-purpose language\nunderstanding systems. arXiv preprint 1905.00537.\nAlbert Webson and Ellie Pavlick. 2021. Do prompt-\nbased models really understand the meaning of their\nprompts? arXiv preprint arXiv:2109.01247.\nJason Wei, Maarten Bosma, Vincent Y. Zhao, Kelvin\nGuu, Adams Wei Yu, Brian Lester, Nan Du, An-\ndrew M. Dai, and Quoc V. Le. 2021.\nFinetuned\nlanguage models are zero-shot learners.\nCoRR,\nabs/2109.01652.\nLaura Weidinger, John Mellor, Maribeth Rauh, Conor\nGrifﬁn, Jonathan Uesato, Po-Sen Huang, Myra\nCheng, Mia Glaese, Borja Balle, Atoosa Kasirzadeh,\nZac Kenton, Sasha Brown, Will Hawkins, Tom\nStepleton, Courtney Biles, Abeba Birhane, Julia\n\nHaas, Laura Rimell, Lisa Anne Hendricks, William\nIsaac, Sean Legassick, Geoffrey Irving, and Iason\nGabriel. 2021a.\nEthical and social risks of harm\nfrom language models.\nLaura Weidinger, John Mellor, Maribeth Rauh, Conor\nGrifﬁn, Jonathan Uesato, Po-Sen Huang, Myra\nCheng, Mia Glaese, Borja Balle, Atoosa Kasirzadeh,\net al. 2021b. Ethical and social risks of harm from\nlanguage models. arXiv preprint arXiv:2112.04359.\nSean Welleck, Ilia Kulikov, Stephen Roller, Emily Di-\nnan, Kyunghyun Cho, and Jason Weston. 2020. Neu-\nral text generation with unlikelihood training.\nIn\nInternational Conference on Learning Representa-\ntions.\nCarole-Jean Wu, Ramya Raghavendra, Udit Gupta,\nBilge Acun, Newsha Ardalani, Kiwan Maeng, Glo-\nria Chang, Fiona Aga Behram, James Huang,\nCharles Bai, Michael Gschwind, Anurag Gupta,\nMyle Ott, Anastasia Melnikov, Salvatore Candido,\nDavid Brooks, Geeta Chauhan, Benjamin Lee,\nHsien-Hsin S. Lee, Bugra Akyildiz, Maximilian Ba-\nlandat, Joe Spisak, Ravi Jain, Mike Rabbat, and Kim\nHazelwood. 2022.\nSustainable AI: environmental\nimplications, challenges and opportunities. In Pro-\nceedings of the Conference on Machine Learning\nand Systems.\nJing Xu, Da Ju, Margaret Li, Y-Lan Boureau, Ja-\nson Weston, and Emily Dinan. 2020. Recipes for\nsafety in open-domain chatbots.\narXiv preprint\narXiv:2010.07079.\nJing Xu, Da Ju, Margaret Li, Y-Lan Boureau, Jason We-\nston, and Emily Dinan. 2021a. Bot-adversarial dia-\nlogue for safe conversational agents. In Proceedings\nof the 2021 Conference of the North American Chap-\nter of the Association for Computational Linguistics:\nHuman Language Technologies, pages 2950–2968,\nOnline. Association for Computational Linguistics.\nJing Xu, Arthur Szlam, and Jason Weston. 2021b. Be-\nyond goldﬁsh memory:\nLong-term open-domain\nconversation. arXiv preprint arXiv:2107.07567.\nRowan Zellers, Ari Holtzman, Yonatan Bisk, Ali\nFarhadi, and Yejin Choi. 2019.\nHellaswag: Can\na machine really ﬁnish your sentence?\nIn Pro-\nceedings of the 57th Conference of the Association\nfor Computational Linguistics, ACL 2019, Florence,\nItaly, July 28- August 2, 2019, Volume 1: Long Pa-\npers, pages 4791–4800. Association for Computa-\ntional Linguistics.\nYukun Zhu, Ryan Kiros, Richard S. Zemel, Ruslan\nSalakhutdinov, Raquel Urtasun, Antonio Torralba,\nand Sanja Fidler. 2015. Aligning books and movies:\nTowards story-like visual explanations by watching\nmovies and reading books. CoRR, abs/1506.06724.\n\nA\nAdditional Evaluations\n.\n108\n109\n1010\n1011\n1012\n30\n40\n50\n60\n70\n80\nAccuracy\nHellaSwag\n108\n109\n1010\n1011\n1012\n62.5\n65.0\n67.5\n70.0\n72.5\n75.0\n77.5\n80.0\n82.5\nStoryCloze\n108\n109\n1010\n1011\n1012\n62.5\n65.0\n67.5\n70.0\n72.5\n75.0\n77.5\n80.0\n82.5\nPIQA\n108\n109\n1010\n1011\n1012\n40\n45\n50\n55\n60\n65\n70\nARC (Easy)\n108\n109\n1010\n1011\n1012\n30\n35\n40\n45\n50\nAccuracy\nARC (Challenge)\n108\n109\n1010\n1011\n1012\n30\n35\n40\n45\n50\n55\nOpenBookQA\n108\n109\n1010\n1011\n1012\n50\n55\n60\n65\n70\n75\n80\nWinogrande\n108\n109\n1010\n1011\n1012\n60\n65\n70\n75\n80\n85\n90\nWinograd\n108\n109\n1010\n1011\n1012\n50\n55\n60\n65\n70\n75\n80\n85\nAccuracy\nBoolQ\n108\n109\n1010\n1011\n1012\n0\n10\n20\n30\n40\n50\nCB\n108\n109\n1010\n1011\n1012\n65\n70\n75\n80\n85\n90\nCOPA\n108\n109\n1010\n1011\n1012\n0\n10\n20\n30\n40\n50\n60\nWIC\n108\n109\n1010\n1011\n1012\nParameters\n50\n55\n60\n65\n70\n75\n80\n85\n90\nAccuracy\nWSC\n108\n109\n1010\n1011\n1012\nParameters\n5\n10\n15\n20\n25\nMultiRC\n108\n109\n1010\n1011\n1012\nParameters\n50\n55\n60\n65\n70\nRTE\n108\n109\n1010\n1011\n1012\nParameters\n70\n75\n80\n85\n90\nReCoRD\nOPT\nGPT\nPaLM\nChinchilla\nGopher\nEleuther\nJurassic\nFigure 6: Zero-shot NLP Evaluations. Full evaluations on all 16 NLP tasks, with comparisons where available.\nWe ﬁnd that across most tasks, GPT-3 models and OPT models perform similarly, but some tasks display highly\nerratic behavior.\n\n108\n109\n1010\n1011\n1012\n30\n40\n50\n60\n70\n80\nAccuracy\nHellaSwag\n108\n109\n1010\n1011\n1012\n65\n70\n75\n80\n85\nStoryCloze\n108\n109\n1010\n1011\n1012\n62.5\n65.0\n67.5\n70.0\n72.5\n75.0\n77.5\n80.0\n82.5\nPIQA\n108\n109\n1010\n1011\n1012\n40\n45\n50\n55\n60\n65\n70\n75\nARC (Easy)\n108\n109\n1010\n1011\n1012\n25\n30\n35\n40\n45\n50\nAccuracy\nARC (Challenge)\n108\n109\n1010\n1011\n1012\n35\n40\n45\n50\n55\n60\n65\nOpenBookQA\n108\n109\n1010\n1011\n1012\n50\n55\n60\n65\n70\n75\nWinogrande\n108\n109\n1010\n1011\n1012\n60\n65\n70\n75\n80\n85\n90\nWinograd\n108\n109\n1010\n1011\n1012\n45\n50\n55\n60\n65\n70\n75\nAccuracy\nBoolQ\n108\n109\n1010\n1011\n1012\n0\n20\n40\n60\n80\nCB\n108\n109\n1010\n1011\n1012\n65\n70\n75\n80\n85\n90\nCOPA\n108\n109\n1010\n1011\n1012\n0\n10\n20\n30\n40\n50\nWIC\n108\n109\n1010\n1011\n1012\nParameters\n50\n55\n60\n65\n70\n75\nAccuracy\nWSC\n108\n109\n1010\n1011\n1012\nParameters\n5\n10\n15\n20\n25\n30\nMultiRC\n108\n109\n1010\n1011\n1012\nParameters\n50\n55\n60\n65\n70\nRTE\n108\n109\n1010\n1011\n1012\nParameters\n70\n75\n80\n85\n90\nReCoRD\nShot\n0\n1\n32\nSeries\nOPT\nGPT\nFigure 7: Multishot-shot NLP Evaluations. Full evaluations on all 16 NLP tasks, with comparisons to the\nGPT-3 reported performance. As with zero-shot, performance is roughly similar for most tasks, with some tasks\ndemonstrating erratic behavior.\n\nB\nContributions\nPre-training\n• Initial planning: Susan Zhang\n• Training infrastructure and initial ablations: Naman Goyal, Myle Ott, Stephen Roller, Sam Shleifer,\nSusan Zhang\n• Training efﬁciency: Naman Goyal, Myle Ott, Sam Shleifer\n• Data curation and deduplication: Shuhoi Chen, Myle Ott, Stephen Roller\n• Training and monitoring OPT-175B: Mikel Artetxe, Moya Chen, Naman Goyal, Punit Singh Koura,\nMyle Ott, Sam Shleifer, Kurt Shuster, Daniel Simig, Stephen Roller, Susan Zhang\n• Training 125M–66B baselines: Naman Goyal, Stephen Roller, Susan Zhang\nEvaluations\n• NLP: Xian Li, Xi Victoria Lin, Todor Mihaylov, Stephen Roller, Anjali Sridhar\n• Dialogue: Stephen Roller\n• Responsible AI Evaluations: Punit Singh Koura, Stephen Roller, Tianlu Wang\nPaper writing:\nMoya Chen, Stephen Roller, Luke Zettlemoyer, Susan Zhang\nCode release preparation:\nChristopher Dewan, Susan Zhang\nResponsible AI conduct:\nMona Diab, Susan Zhang\nC\nDatasheet\nWe follow the recommendations of Gebru et al. (2021) and provide a data card for the dataset used to\ntrain the OPT models.\nC.1\nMotivation\n• For what purpose was the dataset created? Was there a speciﬁc task in mind? Was there a\nspeciﬁc gap that needed to be ﬁlled? Please provide a description. The pre-training data for\ntraining the OPT-175B model was created by a union of ﬁve datasets, including three datasets used\nby RoBERTa (Liu et al., 2019b), a subset of the Pile (Gao et al., 2021a), along with the Pushshift.io\nReddit dataset that was developed in (Baumgartner et al., 2020) and processed in (Roller et al., 2021).\nThese purpose of creating this dataset was to pre-train the language model on a broad corpus of text,\nwith emphasis on human-generated text.\n• Who created the dataset (e.g., which team, research group) and on behalf of which entity (e.g.,\ncompany, institution, organization)? Meta AI.\n• Who funded the creation of the dataset? If there is an associated grant, please provide the\nname of the grantor and the grant name and number. Meta AI.\n• Any other comments? No.\n\nC.2\nComposition\n• What do the instances that comprise the dataset represent (e.g., documents, photos, people,\ncountries)? Are there multiple types of instances (e.g., movies, users, and ratings; people and\ninteractions between them; nodes and edges)? Please provide a description. The instances are\ntextual documents. The overall dataset is composed from a union of the following datasets:\n– BookCorpus (Zhu et al., 2015) consists of more than 10K unpublished books\n– CC-Stories (Trinh and Le, 2018) contains a subset of CommonCrawl data ﬁltered to match the\nstory-like style of Winograd schemas\n– The Pile (Gao et al., 2021a) from which the following was included:\n* Pile-CC\n* OpenWebText2\n* USPTO\n* Project Gutenberg\n* OpenSubtitles\n* Wikipedia\n* DM Mathematics\n* HackerNews\n– Pushshift.io Reddit dataset that was developed in Baumgartner et al. (2020) and processed in\nRoller et al. (2021).\n– CCNewsV2 containing an updated version of the English portion of the CommonCrawl News\ndataset that was used in RoBERTa (Liu et al., 2019b)\n• How many instances are there in total (of each type, if appropriate)? The training data contains\n180B tokens corresponding to 800 GB of data.\n• Does the dataset contain all possible instances or is it a sample (not necessarily random) of\ninstances from a larger set? If the dataset is a sample, then what is the larger set? Is the\nsample representative of the larger set (e.g., geographic coverage)? If so, please describe how\nthis representativeness was validated/veriﬁed. If it is not representative of the larger set, please\ndescribe why not (e.g., to cover a more diverse range of instances, because instances were\nwithheld or unavailable). The CC-stories dataset contains a subset of CommonCrawl data ﬁltered\nto match the story-like style of Winograd schemas. The remainder of the dataset was collected from\nthe above sources, reformatted, and deduplicated.\n• What data does each instance consist of? “Raw” data (e.g., unprocessed text or images) or\nfeatures? In either case, please provide a description. Each instance consists of raw text data.\n• Is there a label or target associated with each instance? If so, please provide a description. No.\n• Is any information missing from individual instances? If so, please provide a description,\nexplaining why this information is missing (e.g., because it was unavailable). This does not\ninclude intentionally removed information, but might include, e.g., redacted text. No.\n• Are relationships between individual instances made explicit (e.g., users’ movie ratings, social\nnetwork links)? If so, please describe how these relationships are made explicit. There are no\nexplicit relationships between individual instances.\n• Are there recommended data splits (e.g., training, development/validation, testing)? If so,\nplease provide a description of these splits, explaining the rationale behind them. We hold out\na random validation set of approximately 200MB from the pretraining data, sampled proportionally\nto each dataset’s size in the pretraining corpus.\n\n• Are there any errors, sources of noise, or redundancies in the dataset? If so, please provide a\ndescription. Outside of naturally occurring duplication from potential overlaps between the datasets,\nthere are no other redundancies, errors, or sources of noise that we add.\n• Is the dataset self-contained, or does it link to or otherwise rely on external resources (e.g.,\nwebsites, tweets, other datasets)? It’s self-contained.\n• Does the dataset contain data that, if viewed directly, might be offensive, insulting, threatening,\nor might otherwise cause anxiety? If so, please describe why. Parts of the dataset are a subset of\npublic Common Crawl data, along with a subset of public Reddit data, which could contain sentences\nthat, if viewed directly, might be offensive, insulting, threatening, or might otherwise cause anxiety.\n• Does the dataset relate to people? If not, you may skip the remaining questions in this section.\nSome documents of this data relate to people, such as news articles, Wikipedia descriptions, etc.\n• Does the dataset identify any subpopulations (e.g., by age, gender)? If so, please describe how\nthese subpopulations are identiﬁed and provide a description of their respective distributions\nwithin the dataset. No, the dataset does not explicitly include subpopulation identiﬁcation.\n• Any other comments? No.\nC.3\nCollection Process\n• How was the data associated with each instance acquired? Was the data directly observ-\nable (e.g., raw text, movie ratings), reported by subjects (e.g., survey responses), or indirectly\ninferred/ derived from other data (e.g., part-of-speech tags, model-based guesses for age or\nlanguage)? If data was reported by subjects or indirectly inferred/derived from other data,\nwas the data validated/veriﬁed? If so, please describe how. N/A. The dataset is a union of ﬁve\npublicly available datasets.\n• What mechanisms or procedures were used to collect the data (e.g., hardware apparatus or\nsensor, manual human curation, software program, software API)? How were these mecha-\nnisms or procedures validated? The data was downloaded from the internet.\n• If the dataset is a sample from a larger set, what was the sampling strategy (e.g., deterministic,\nprobabilistic with speciﬁc sampling probabilities)? Please see previous answers for how the\ndataset was created.\n• Who was involved in the data collection process (e.g., students, crowdworkers, contractors)\nand how were they compensated (e.g., how much were crowdworkers paid)? This data is\nmined, ﬁltered and sampled by machines.\n• Over what timeframe was the data collected? Does this timeframe match the creation time-\nframe of the data associated with the instances (e.g., recent crawl of old news articles)? If not,\nplease describe the timeframe in which the data associated with the instances was created. The\nCC-News dataset contains English news articles crawled between September 2016 and September\n2021.\n• Does the dataset relate to people? If not, you may skip the remainder of the questions in this\nsection. No.\n• Did you collect the data from the individuals in question directly, or obtain it via third parties\nor other sources (e.g., websites)? N/A.\n• Were the individuals in question notiﬁed about the data collection? If so, please describe (or\nshow with screenshots or other information) how notice was provided, and provide a link or\nother access point to, or otherwise reproduce, the exact language of the notiﬁcation itself. N/A.\n\n• Did the individuals in question consent to the collection and use of their data? If so, please\ndescribe (or show with screenshots or other information) how consent was requested and pro-\nvided, and provide a link or other access point to, or otherwise reproduce, the exact language\nto which the individuals consented. N/A.\n• If consent was obtained, were the consenting individuals provided with a mechanism to revoke\ntheir consent in the future or for certain uses? If so, please provide a description, as well as a\nlink or other access point to the mechanism (if appropriate). N/A.\n• Has an analysis of the potential impact of the dataset and its use on data subjects (e.g., a\ndata protection impact analysis) been conducted? If so, please provide a description of this\nanalysis, including the outcomes, as well as a link or other access point to any supporting\ndocumentation. Some toxicity and bias evaluations were performed. Please refer to the main\ndocument and the model card for these details.\n• Any other comments? No.\nC.4\nPreprocessing/cleaning/labeling\n• Was any preprocessing/cleaning/labeling of the data done (e.g., discretization or bucketing, to-\nkenization, part-of-speech tagging, SIFT feature extraction, removal of instances, processing\nof missing values)? If so, please provide a description. If not, you may skip the remainder\nof the questions in this section. The component datasets went through standard cleaning and\nre-formatting practices, including removing repetitive/non-informative text like “Chapter One,” or\n“This ebook by Project Gutenberg.”\n• Was the “raw” data saved in addition to the preprocessed/cleaned/labeled data (e.g., to sup-\nport unanticipated future uses)? If so, please provide a link or other access point to the “raw”\ndata. The “raw” component datasets is publicly available in their respective locations (more details\ncan be seen in the respective papers linked in references).\n• Any other comments? No.\nC.5\nUses\n• Has the dataset been used for any tasks already? If so, please provide a description. Yes, this\ndataset was used to pre-train the OPT models.\n• Is there a repository that links to any or all papers or systems that use the dataset? If so,\nplease provide a link or other access point. https://github.com/facebookresearch/\nmetaseq\n• What (other) tasks could the dataset be used for? This data can be used to pre-train language\nmodels, which are foundation to many current and future language tasks.\n• Is there anything about the composition of the dataset or the way it was collected and prepro-\ncessed/cleaned/labeled that might impact future uses? For example, is there anything that a\nfuture user might need to know to avoid uses that could result in unfair treatment of individ-\nuals or groups (e.g., stereotyping, quality of service issues) or other undesirable harms (e.g.,\nﬁnancial harms, legal risks) If so, please provide a description. Is there anything a future user\ncould do to mitigate these undesirable harms? The pipeline for creating this dataset paves a way\nfor building a scalable infrastructure for mining datasets.\n• Are there tasks for which the dataset should not be used? If so, please provide a description.\nNone that we are currently aware of.\n• Any other comments? No.\n\nC.6\nDistribution\n• Will the dataset be distributed to third parties outside of the entity (e.g., company, institution,\norganization) on behalf of which the dataset was created? If so, please provide a description.\nNot at this time.\n• How will the dataset will be distributed (e.g., tarball on website, API, GitHub)? Does the\ndataset have a digital object identiﬁer (DOI)? N/A.\n• When will the dataset be distributed? N/A.\n• Will the dataset be distributed under a copyright or other intellectual property (IP) license,\nand/or under applicable terms of use (ToU)? If so, please describe this license and/or ToU, and\nprovide a link or other access point to, or otherwise reproduce, any relevant licensing terms\nor ToU, as well as any fees associated with these restrictions. N/A.\n• Do any export controls or other regulatory restrictions apply to the dataset or to individual\ninstances? If so, please describe these restrictions, and provide a link or other access point to,\nor otherwise reproduce, any supporting documentation. N/A.\n• Any other comments? No.\nC.7\nMaintenance\n• Who is supporting/hosting/maintaining the dataset? Meta AI.\n• How can the owner/curator/manager of the dataset be contacted (e.g., email address)? Refer\nto the main document.\n• Is there an erratum? If so, please provide a link or other access point. N/A.\n• Will the dataset be updated (e.g., to correct labeling errors, add new instances, delete in-\nstances)? If so, please describe how often, by whom, and how updates will be communicated\nto users (e.g., mailing list, GitHub)? No current plan for updating.\n• If the dataset relates to people, are there applicable limits on the retention of the data as-\nsociated with the instances (e.g., were individuals in question told that their data would be\nretained for a ﬁxed period of time and then deleted)? If so, please describe these limits and\nexplain how they will be enforced. N/A.\n• Will older versions of the dataset continue to be supported/hosted/maintained? If so, please\ndescribe how. If not, please describe how its obsolescence will be communicated to users. N/A.\n• If others want to extend/augment/build on/contribute to the dataset, is there a mechanism\nfor them to do so? If so, please provide a description. Will these contributions be validated/\nveriﬁed? If so, please describe how. If not, why not? Is there a process for communicating/ dis-\ntributing these contributions to other users? If so, please provide a description. No mechanism\nis available right now.\n• Any other comments? No.\nD\nModel Card\nFollowing Mitchell et al. (2018), we provide a model card for OPT-175B.\n\nD.1\nModel Details\n• Person or organization developing model: OPT-175B was developed by Meta AI.\n• Model date: OPT-175B was released on May 3, 2022.\n• Model version: OPT-175B described in this paper is version 1.0.0.\n• Model type: OPT-175B is a large decoder-only transformer language model.\n• Information about training algorithms, parameters, fairness constraints or other applied ap-\nproaches, and features: OPT-175B was trained with AdamW for parameter sizes from 125M to\n175B. See the Data Card (Appendix C) for information about training data and Section 2.2 - 2.5 for\ninformation about the training process.\n• Paper or other resource for more information: See the rest of this paper for more details on\nOPT-175B as well as the corresponding post on the Meta AI Research Blog. More details are also\navailable in metaseq, our open-source repository.12\n• License: OPT-175B and the smaller baseline models are made available through a non-commercial\nuse license agreement provided in our model license.13\n• Where to send questions or comments about the model: Please contact the corresponding authors\n{susanz,roller,namangoyal}@fb.com for any questions or comments.\nD.2\nIntended Use\n• Primary intended uses: We release OPT-175B for research into Language Models, especially as it\npertains to Responsible AI. See Section 6 for more detailed Considerations for Release. Information\non how to use the model can be found at metaseq, our open-source repository.\n• Primary intended users: We primarily target researchers and the related research community.\n• Out-of-scope use cases: OPT-175B is not released for production use or real-world deployments.\nAs we note in Section 5, OPT-175B, like similar large language models, has a variety of shortcomings\nthat make it premature for commercial use.\nD.3\nData, Limitations, and Recommendations\n• Data selection for training: Training data for OPT-175B was selected based on a combination of\nbreadth and availability. See our Data Card (Appendix C) for more detailed information on the data\nused to train our model.\n• Data selection for evaluation: Evaluations in this paper were chosen to provide comparable perfor-\nmance assessments relative to similar scale models in the literature. Given concerns in the community\naround safety and fairness of large language models in general, we also explicitly provide evaluations\non Responsible AI (see Section 4).\n• Limitations: Like other large language models for which the diversity (or lack thereof) of training\ndata induces downstream impact on the quality of our model, OPT-175B has limitations in terms\nof bias and safety. OPT-175B can also have quality issues in terms of generation diversity and\nhallucination. In general, OPT-175B is not immune from the plethora of issues that plague modern\nlarge language models. By releasing with a non-commercial license, we also hope to increase\ncommunication, transparency, and study of the problems of large language models, especially in\nareas which may not be aligned with commercial interests. See Section 5 for a more detailed\ndiscussion of limitations of OPT-175B.\n12https://github.com/facebookresearch/metaseq/\n13https://github.com/facebookresearch/metaseq/blob/main/projects/OPT/MODEL_LICENSE.\nmd\n\n• Recommendations for future work: See Section 6 for more about our Considerations for Release,\nincluding a discussion of potential avenues of research enabled by opening our model to more of\nthe research community. We hope that the release of OPT-175B, as well as information around our\nmodel training process, will increase open science around both large language models in speciﬁc and\nnatural language processing and deep learning in general.\n\nE\nSample Model Outputs\nFor all sample outputs, the initial prompt is given in bold and the remainder is the continuation. These\nexample outputs were intentionally selected to highlight both successes and failures of the OPT-175B\nmodel.\nFigure 8: Poetry generation. We have observed the model can write entertaining poetry on topics such as dodos,\nsamosas, and performance reviews. However, we struggled to get the model to observe rhyme or meter.\nFigure 9: Conversation generation. OPT-175B adopts a patriotic personality when prompted as the Statue of\nLiberty. However, the model also devolves into somewhat simple and linguistically repetitive generations further\ninto the conversation.\n\nFigure 10: Basic few-shot translation example. OPT was not intentionally trained to be multilingual, but we\nfound anecdotally it has limited success with simple translations in German, Spanish, French, and Chinese.\n\nFigure 11: Paper writing example. Prompting with \"1. Introduction\" generally yielded more interesting results\ncompared to prompting with “Abstract.” Our prompt here was inspired by the ﬁrst sentence of the seminal ResNet\nwork (He et al., 2016).\n\nFigure 12: Arithmetic. We observe mistakes when extending from addition to other operations.\n\nFigure 13: Python programming. Simply switching out a variable name can alter the generated output.\n"
    },
    {
      "arxiv_id": "2005.14165",
      "full_text": "Language Models are Few-Shot Learners\nTom B. Brown∗\nBenjamin Mann∗\nNick Ryder∗\nMelanie Subbiah∗\nJared Kaplan†\nPrafulla Dhariwal\nArvind Neelakantan\nPranav Shyam\nGirish Sastry\nAmanda Askell\nSandhini Agarwal\nAriel Herbert-Voss\nGretchen Krueger\nTom Henighan\nRewon Child\nAditya Ramesh\nDaniel M. Ziegler\nJeffrey Wu\nClemens Winter\nChristopher Hesse\nMark Chen\nEric Sigler\nMateusz Litwin\nScott Gray\nBenjamin Chess\nJack Clark\nChristopher Berner\nSam McCandlish\nAlec Radford\nIlya Sutskever\nDario Amodei\nOpenAI\nAbstract\nRecent work has demonstrated substantial gains on many NLP tasks and benchmarks by pre-training\non a large corpus of text followed by ﬁne-tuning on a speciﬁc task. While typically task-agnostic\nin architecture, this method still requires task-speciﬁc ﬁne-tuning datasets of thousands or tens of\nthousands of examples. By contrast, humans can generally perform a new language task from only\na few examples or from simple instructions – something which current NLP systems still largely\nstruggle to do. Here we show that scaling up language models greatly improves task-agnostic,\nfew-shot performance, sometimes even reaching competitiveness with prior state-of-the-art ﬁne-\ntuning approaches. Speciﬁcally, we train GPT-3, an autoregressive language model with 175 billion\nparameters, 10x more than any previous non-sparse language model, and test its performance in\nthe few-shot setting. For all tasks, GPT-3 is applied without any gradient updates or ﬁne-tuning,\nwith tasks and few-shot demonstrations speciﬁed purely via text interaction with the model. GPT-3\nachieves strong performance on many NLP datasets, including translation, question-answering, and\ncloze tasks, as well as several tasks that require on-the-ﬂy reasoning or domain adaptation, such as\nunscrambling words, using a novel word in a sentence, or performing 3-digit arithmetic. At the same\ntime, we also identify some datasets where GPT-3’s few-shot learning still struggles, as well as some\ndatasets where GPT-3 faces methodological issues related to training on large web corpora. Finally,\nwe ﬁnd that GPT-3 can generate samples of news articles which human evaluators have difﬁculty\ndistinguishing from articles written by humans. We discuss broader societal impacts of this ﬁnding\nand of GPT-3 in general.\n∗Equal contribution\n†Johns Hopkins University, OpenAI\nAuthor contributions listed at end of paper.\narXiv:2005.14165v4  [cs.CL]  22 Jul 2020\n\nContents\n1\nIntroduction\n3\n2\nApproach\n6\n2.1\nModel and Architectures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n8\n2.2\nTraining Dataset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n8\n2.3\nTraining Process\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n9\n2.4\nEvaluation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n10\n3\nResults\n10\n3.1\nLanguage Modeling, Cloze, and Completion Tasks\n. . . . . . . . . . . . . . . . . . . . . . . . . . .\n11\n3.2\nClosed Book Question Answering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n13\n3.3\nTranslation\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n14\n3.4\nWinograd-Style Tasks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n16\n3.5\nCommon Sense Reasoning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n17\n3.6\nReading Comprehension . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n18\n3.7\nSuperGLUE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n18\n3.8\nNLI . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n20\n3.9\nSynthetic and Qualitative Tasks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n21\n4\nMeasuring and Preventing Memorization Of Benchmarks\n29\n5\nLimitations\n33\n6\nBroader Impacts\n34\n6.1\nMisuse of Language Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n35\n6.2\nFairness, Bias, and Representation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n36\n6.3\nEnergy Usage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n39\n7\nRelated Work\n39\n8\nConclusion\n40\nA Details of Common Crawl Filtering\n43\nB\nDetails of Model Training\n43\nC Details of Test Set Contamination Studies\n43\nD Total Compute Used to Train Language Models\n46\nE\nHuman Quality Assessment of Synthetic News Articles\n46\nF\nAdditional Samples from GPT-3\n48\nG Details of Task Phrasing and Speciﬁcations\n50\nH Results on All Tasks for All Model Sizes\n63\n2\n\n1\nIntroduction\nRecent years have featured a trend towards pre-trained language representations in NLP systems, applied in increasingly\nﬂexible and task-agnostic ways for downstream transfer. First, single-layer representations were learned using word\nvectors [MCCD13, PSM14] and fed to task-speciﬁc architectures, then RNNs with multiple layers of representations\nand contextual state were used to form stronger representations [DL15, MBXS17, PNZtY18] (though still applied to\ntask-speciﬁc architectures), and more recently pre-trained recurrent or transformer language models [VSP+17] have\nbeen directly ﬁne-tuned, entirely removing the need for task-speciﬁc architectures [RNSS18, DCLT18, HR18].\nThis last paradigm has led to substantial progress on many challenging NLP tasks such as reading comprehension,\nquestion answering, textual entailment, and many others, and has continued to advance based on new architectures\nand algorithms [RSR+19, LOG+19, YDY+19, LCG+19]. However, a major limitation to this approach is that while\nthe architecture is task-agnostic, there is still a need for task-speciﬁc datasets and task-speciﬁc ﬁne-tuning: to achieve\nstrong performance on a desired task typically requires ﬁne-tuning on a dataset of thousands to hundreds of thousands\nof examples speciﬁc to that task. Removing this limitation would be desirable, for several reasons.\nFirst, from a practical perspective, the need for a large dataset of labeled examples for every new task limits the\napplicability of language models. There exists a very wide range of possible useful language tasks, encompassing\nanything from correcting grammar, to generating examples of an abstract concept, to critiquing a short story. For many\nof these tasks it is difﬁcult to collect a large supervised training dataset, especially when the process must be repeated\nfor every new task.\nSecond, the potential to exploit spurious correlations in training data fundamentally grows with the expressiveness\nof the model and the narrowness of the training distribution. This can create problems for the pre-training plus\nﬁne-tuning paradigm, where models are designed to be large to absorb information during pre-training, but are then\nﬁne-tuned on very narrow task distributions. For instance [HLW+20] observe that larger models do not necessarily\ngeneralize better out-of-distribution. There is evidence that suggests that the generalization achieved under this paradigm\ncan be poor because the model is overly speciﬁc to the training distribution and does not generalize well outside it\n[YdC+19, MPL19]. Thus, the performance of ﬁne-tuned models on speciﬁc benchmarks, even when it is nominally at\nhuman-level, may exaggerate actual performance on the underlying task [GSL+18, NK19].\nThird, humans do not require large supervised datasets to learn most language tasks – a brief directive in natural\nlanguage (e.g. “please tell me if this sentence describes something happy or something sad”) or at most a tiny number\nof demonstrations (e.g. “here are two examples of people acting brave; please give a third example of bravery”) is often\nFigure 1.1: Language model meta-learning. During unsupervised pre-training, a language model develops a broad\nset of skills and pattern recognition abilities. It then uses these abilities at inference time to rapidly adapt to or recognize\nthe desired task. We use the term “in-context learning” to describe the inner loop of this process, which occurs within\nthe forward-pass upon each sequence. The sequences in this diagram are not intended to be representative of the data a\nmodel would see during pre-training, but are intended to show that there are sometimes repeated sub-tasks embedded\nwithin a single sequence.\n3\n\nFigure 1.2: Larger models make increasingly efﬁcient use of in-context information. We show in-context learning\nperformance on a simple task requiring the model to remove random symbols from a word, both with and without a\nnatural language task description (see Sec. 3.9.2). The steeper “in-context learning curves” for large models demonstrate\nimproved ability to learn a task from contextual information. We see qualitatively similar behavior across a wide range\nof tasks.\nsufﬁcient to enable a human to perform a new task to at least a reasonable degree of competence. Aside from pointing\nto a conceptual limitation in our current NLP techniques, this adaptability has practical advantages – it allows humans\nto seamlessly mix together or switch between many tasks and skills, for example performing addition during a lengthy\ndialogue. To be broadly useful, we would someday like our NLP systems to have this same ﬂuidity and generality.\nOne potential route towards addressing these issues is meta-learning1 – which in the context of language models means\nthe model develops a broad set of skills and pattern recognition abilities at training time, and then uses those abilities\nat inference time to rapidly adapt to or recognize the desired task (illustrated in Figure 1.1). Recent work [RWC+19]\nattempts to do this via what we call “in-context learning”, using the text input of a pretrained language model as a form\nof task speciﬁcation: the model is conditioned on a natural language instruction and/or a few demonstrations of the task\nand is then expected to complete further instances of the task simply by predicting what comes next.\nWhile it has shown some initial promise, this approach still achieves results far inferior to ﬁne-tuning – for example\n[RWC+19] achieves only 4% on Natural Questions, and even its 55 F1 CoQa result is now more than 35 points behind\nthe state of the art. Meta-learning clearly requires substantial improvement in order to be viable as a practical method of\nsolving language tasks.\nAnother recent trend in language modeling may offer a way forward. In recent years the capacity of transformer\nlanguage models has increased substantially, from 100 million parameters [RNSS18], to 300 million parameters\n[DCLT18], to 1.5 billion parameters [RWC+19], to 8 billion parameters [SPP+19], 11 billion parameters [RSR+19],\nand ﬁnally 17 billion parameters [Tur20]. Each increase has brought improvements in text synthesis and/or downstream\nNLP tasks, and there is evidence suggesting that log loss, which correlates well with many downstream tasks, follows a\nsmooth trend of improvement with scale [KMH+20]. Since in-context learning involves absorbing many skills and\ntasks within the parameters of the model, it is plausible that in-context learning abilities might show similarly strong\ngains with scale.\n1In the context of language models this has sometimes been called “zero-shot transfer”, but this term is potentially ambiguous:\nthe method is “zero-shot” in the sense that no gradient updates are performed, but it often involves providing inference-time\ndemonstrations to the model, so is not truly learning from zero examples. To avoid this confusion, we use the term “meta-learning”\nto capture the inner-loop / outer-loop structure of the general method, and the term “in context-learning” to refer to the inner\nloop of meta-learning. We further specialize the description to “zero-shot”, “one-shot”, or “few-shot” depending on how many\ndemonstrations are provided at inference time. These terms are intended to remain agnostic on the question of whether the model\nlearns new tasks from scratch at inference time or simply recognizes patterns seen during training – this is an important issue which\nwe discuss later in the paper, but “meta-learning” is intended to encompass both possibilities, and simply describes the inner-outer\nloop structure.\n4\n\nFigure 1.3: Aggregate performance for all 42 accuracy-denominated benchmarks While zero-shot performance\nimproves steadily with model size, few-shot performance increases more rapidly, demonstrating that larger models are\nmore proﬁcient at in-context learning. See Figure 3.8 for a more detailed analysis on SuperGLUE, a standard NLP\nbenchmark suite.\nIn this paper, we test this hypothesis by training a 175 billion parameter autoregressive language model, which we call\nGPT-3, and measuring its in-context learning abilities. Speciﬁcally, we evaluate GPT-3 on over two dozen NLP datasets,\nas well as several novel tasks designed to test rapid adaptation to tasks unlikely to be directly contained in the training\nset. For each task, we evaluate GPT-3 under 3 conditions: (a) “few-shot learning”, or in-context learning where we\nallow as many demonstrations as will ﬁt into the model’s context window (typically 10 to 100), (b) “one-shot learning”,\nwhere we allow only one demonstration, and (c) “zero-shot” learning, where no demonstrations are allowed and only\nan instruction in natural language is given to the model. GPT-3 could also in principle be evaluated in the traditional\nﬁne-tuning setting, but we leave this to future work.\nFigure 1.2 illustrates the conditions we study, and shows few-shot learning of a simple task requiring the model to\nremove extraneous symbols from a word. Model performance improves with the addition of a natural language task\ndescription, and with the number of examples in the model’s context, K. Few-shot learning also improves dramatically\nwith model size. Though the results in this case are particularly striking, the general trends with both model size and\nnumber of examples in-context hold for most tasks we study. We emphasize that these “learning” curves involve no\ngradient updates or ﬁne-tuning, just increasing numbers of demonstrations given as conditioning.\nBroadly, on NLP tasks GPT-3 achieves promising results in the zero-shot and one-shot settings, and in the the few-shot\nsetting is sometimes competitive with or even occasionally surpasses state-of-the-art (despite state-of-the-art being held\nby ﬁne-tuned models). For example, GPT-3 achieves 81.5 F1 on CoQA in the zero-shot setting, 84.0 F1 on CoQA in\nthe one-shot setting, 85.0 F1 in the few-shot setting. Similarly, GPT-3 achieves 64.3% accuracy on TriviaQA in the\nzero-shot setting, 68.0% in the one-shot setting, and 71.2% in the few-shot setting, the last of which is state-of-the-art\nrelative to ﬁne-tuned models operating in the same closed-book setting.\nGPT-3 also displays one-shot and few-shot proﬁciency at tasks designed to test rapid adaption or on-the-ﬂy reasoning,\nwhich include unscrambling words, performing arithmetic, and using novel words in a sentence after seeing them\ndeﬁned only once. We also show that in the few-shot setting, GPT-3 can generate synthetic news articles which human\nevaluators have difﬁculty distinguishing from human-generated articles.\nAt the same time, we also ﬁnd some tasks on which few-shot performance struggles, even at the scale of GPT-3. This\nincludes natural language inference tasks like the ANLI dataset, and some reading comprehension datasets like RACE\nor QuAC. By presenting a broad characterization of GPT-3’s strengths and weaknesses, including these limitations, we\nhope to stimulate study of few-shot learning in language models and draw attention to where progress is most needed.\nA heuristic sense of the overall results can be seen in Figure 1.3, which aggregates the various tasks (though it should\nnot be seen as a rigorous or meaningful benchmark in itself).\n5\n\nWe also undertake a systematic study of “data contamination” – a growing problem when training high capacity models\non datasets such as Common Crawl, which can potentially include content from test datasets simply because such\ncontent often exists on the web. In this paper we develop systematic tools to measure data contamination and quantify\nits distorting effects. Although we ﬁnd that data contamination has a minimal effect on GPT-3’s performance on most\ndatasets, we do identify a few datasets where it could be inﬂating results, and we either do not report results on these\ndatasets or we note them with an asterisk, depending on the severity.\nIn addition to all the above, we also train a series of smaller models (ranging from 125 million parameters to 13 billion\nparameters) in order to compare their performance to GPT-3 in the zero, one and few-shot settings. Broadly, for most\ntasks we ﬁnd relatively smooth scaling with model capacity in all three settings; one notable pattern is that the gap\nbetween zero-, one-, and few-shot performance often grows with model capacity, perhaps suggesting that larger models\nare more proﬁcient meta-learners.\nFinally, given the broad spectrum of capabilities displayed by GPT-3, we discuss concerns about bias, fairness, and\nbroader societal impacts, and attempt a preliminary analysis of GPT-3’s characteristics in this regard.\nThe remainder of this paper is organized as follows. In Section 2, we describe our approach and methods for training\nGPT-3 and evaluating it. Section 3 presents results on the full range of tasks in the zero-, one- and few-shot settings.\nSection 4 addresses questions of data contamination (train-test overlap). Section 5 discusses limitations of GPT-3.\nSection 6 discusses broader impacts. Section 7 reviews related work and Section 8 concludes.\n2\nApproach\nOur basic pre-training approach, including model, data, and training, is similar to the process described in [RWC+19],\nwith relatively straightforward scaling up of the model size, dataset size and diversity, and length of training. Our use\nof in-context learning is also similar to [RWC+19], but in this work we systematically explore different settings for\nlearning within the context. Therefore, we start this section by explicitly deﬁning and contrasting the different settings\nthat we will be evaluating GPT-3 on or could in principle evaluate GPT-3 on. These settings can be seen as lying on a\nspectrum of how much task-speciﬁc data they tend to rely on. Speciﬁcally, we can identify at least four points on this\nspectrum (see Figure 2.1 for an illustration):\n• Fine-Tuning (FT) has been the most common approach in recent years, and involves updating the weights of\na pre-trained model by training on a supervised dataset speciﬁc to the desired task. Typically thousands to\nhundreds of thousands of labeled examples are used. The main advantage of ﬁne-tuning is strong performance\non many benchmarks. The main disadvantages are the need for a new large dataset for every task, the potential\nfor poor generalization out-of-distribution [MPL19], and the potential to exploit spurious features of the\ntraining data [GSL+18, NK19], potentially resulting in an unfair comparison with human performance. In\nthis work we do not ﬁne-tune GPT-3 because our focus is on task-agnostic performance, but GPT-3 can be\nﬁne-tuned in principle and this is a promising direction for future work.\n• Few-Shot (FS) is the term we will use in this work to refer to the setting where the model is given a few\ndemonstrations of the task at inference time as conditioning [RWC+19], but no weight updates are allowed.\nAs shown in Figure 2.1, for a typical dataset an example has a context and a desired completion (for example\nan English sentence and the French translation), and few-shot works by giving K examples of context and\ncompletion, and then one ﬁnal example of context, with the model expected to provide the completion. We\ntypically set K in the range of 10 to 100 as this is how many examples can ﬁt in the model’s context window\n(nctx = 2048). The main advantages of few-shot are a major reduction in the need for task-speciﬁc data and\nreduced potential to learn an overly narrow distribution from a large but narrow ﬁne-tuning dataset. The main\ndisadvantage is that results from this method have so far been much worse than state-of-the-art ﬁne-tuned\nmodels. Also, a small amount of task speciﬁc data is still required. As indicated by the name, few-shot\nlearning as described here for language models is related to few-shot learning as used in other contexts in\nML [HYC01, VBL+16] – both involve learning based on a broad distribution of tasks (in this case implicit in\nthe pre-training data) and then rapidly adapting to a new task.\n• One-Shot (1S) is the same as few-shot except that only one demonstration is allowed, in addition to a natural\nlanguage description of the task, as shown in Figure 1. The reason to distinguish one-shot from few-shot and\nzero-shot (below) is that it most closely matches the way in which some tasks are communicated to humans.\nFor example, when asking humans to generate a dataset on a human worker service (for example Mechanical\nTurk), it is common to give one demonstration of the task. By contrast it is sometimes difﬁcult to communicate\nthe content or format of a task if no examples are given.\n6\n\nFigure 2.1: Zero-shot, one-shot and few-shot, contrasted with traditional ﬁne-tuning. The panels above show\nfour methods for performing a task with a language model – ﬁne-tuning is the traditional method, whereas zero-, one-,\nand few-shot, which we study in this work, require the model to perform the task with only forward passes at test\ntime. We typically present the model with a few dozen examples in the few shot setting. Exact phrasings for all task\ndescriptions, examples and prompts can be found in Appendix G.\n• Zero-Shot (0S) is the same as one-shot except that no demonstrations are allowed, and the model is only given\na natural language instruction describing the task. This method provides maximum convenience, potential for\nrobustness, and avoidance of spurious correlations (unless they occur very broadly across the large corpus of\npre-training data), but is also the most challenging setting. In some cases it may even be difﬁcult for humans\nto understand the format of the task without prior examples, so this setting is in some cases “unfairly hard”.\nFor example, if someone is asked to “make a table of world records for the 200m dash”, this request can be\nambiguous, as it may not be clear exactly what format the table should have or what should be included (and\neven with careful clariﬁcation, understanding precisely what is desired can be difﬁcult). Nevertheless, for at\nleast some settings zero-shot is closest to how humans perform tasks – for example, in the translation example\nin Figure 2.1, a human would likely know what to do from just the text instruction.\nFigure 2.1 shows the four methods using the example of translating English to French. In this paper we focus on\nzero-shot, one-shot and few-shot, with the aim of comparing them not as competing alternatives, but as different\nproblem settings which offer a varying trade-off between performance on speciﬁc benchmarks and sample efﬁciency.\nWe especially highlight the few-shot results as many of them are only slightly behind state-of-the-art ﬁne-tuned models.\nUltimately, however, one-shot, or even sometimes zero-shot, seem like the fairest comparisons to human performance,\nand are important targets for future work.\nSections 2.1-2.3 below give details on our models, training data, and training process respectively. Section 2.4 discusses\nthe details of how we do few-shot, one-shot, and zero-shot evaluations.\n7\n\nModel Name\nnparams\nnlayers\ndmodel\nnheads\ndhead\nBatch Size\nLearning Rate\nGPT-3 Small\n125M\n12\n768\n12\n64\n0.5M\n6.0 × 10−4\nGPT-3 Medium\n350M\n24\n1024\n16\n64\n0.5M\n3.0 × 10−4\nGPT-3 Large\n760M\n24\n1536\n16\n96\n0.5M\n2.5 × 10−4\nGPT-3 XL\n1.3B\n24\n2048\n24\n128\n1M\n2.0 × 10−4\nGPT-3 2.7B\n2.7B\n32\n2560\n32\n80\n1M\n1.6 × 10−4\nGPT-3 6.7B\n6.7B\n32\n4096\n32\n128\n2M\n1.2 × 10−4\nGPT-3 13B\n13.0B\n40\n5140\n40\n128\n2M\n1.0 × 10−4\nGPT-3 175B or “GPT-3”\n175.0B\n96\n12288\n96\n128\n3.2M\n0.6 × 10−4\nTable 2.1: Sizes, architectures, and learning hyper-parameters (batch size in tokens and learning rate) of the models\nwhich we trained. All models were trained for a total of 300 billion tokens.\n2.1\nModel and Architectures\nWe use the same model and architecture as GPT-2 [RWC+19], including the modiﬁed initialization, pre-normalization,\nand reversible tokenization described therein, with the exception that we use alternating dense and locally banded sparse\nattention patterns in the layers of the transformer, similar to the Sparse Transformer [CGRS19]. To study the dependence\nof ML performance on model size, we train 8 different sizes of model, ranging over three orders of magnitude from 125\nmillion parameters to 175 billion parameters, with the last being the model we call GPT-3. Previous work [KMH+20]\nsuggests that with enough training data, scaling of validation loss should be approximately a smooth power law as a\nfunction of size; training models of many different sizes allows us to test this hypothesis both for validation loss and for\ndownstream language tasks.\nTable 2.1 shows the sizes and architectures of our 8 models. Here nparams is the total number of trainable parameters,\nnlayers is the total number of layers, dmodel is the number of units in each bottleneck layer (we always have the\nfeedforward layer four times the size of the bottleneck layer, dﬀ= 4 ∗dmodel), and dhead is the dimension of each\nattention head. All models use a context window of nctx = 2048 tokens. We partition the model across GPUs along\nboth the depth and width dimension in order to minimize data-transfer between nodes. The precise architectural\nparameters for each model are chosen based on computational efﬁciency and load-balancing in the layout of models\nacross GPU’s. Previous work [KMH+20] suggests that validation loss is not strongly sensitive to these parameters\nwithin a reasonably broad range.\n2.2\nTraining Dataset\nDatasets for language models have rapidly expanded, culminating in the Common Crawl dataset2 [RSR+19] constituting\nnearly a trillion words. This size of dataset is sufﬁcient to train our largest models without ever updating on the same\nsequence twice. However, we have found that unﬁltered or lightly ﬁltered versions of Common Crawl tend to have\nlower quality than more curated datasets. Therefore, we took 3 steps to improve the average quality of our datasets:\n(1) we downloaded and ﬁltered a version of CommonCrawl based on similarity to a range of high-quality reference\ncorpora, (2) we performed fuzzy deduplication at the document level, within and across datasets, to prevent redundancy\nand preserve the integrity of our held-out validation set as an accurate measure of overﬁtting, and (3) we also added\nknown high-quality reference corpora to the training mix to augment CommonCrawl and increase its diversity.\nDetails of the ﬁrst two points (processing of Common Crawl) are described in Appendix A. For the third, we added\nseveral curated high-quality datasets, including an expanded version of the WebText dataset [RWC+19], collected\nby scraping links over a longer period of time, and ﬁrst described in [KMH+20], two internet-based books corpora\n(Books1 and Books2) and English-language Wikipedia.\nTable 2.2 shows the ﬁnal mixture of datasets that we used in training. The CommonCrawl data was downloaded from\n41 shards of monthly CommonCrawl covering 2016 to 2019, constituting 45TB of compressed plaintext before ﬁltering\nand 570GB after ﬁltering, roughly equivalent to 400 billion byte-pair-encoded tokens. Note that during training, datasets\nare not sampled in proportion to their size, but rather datasets we view as higher-quality are sampled more frequently,\nsuch that CommonCrawl and Books2 datasets are sampled less than once during training, but the other datasets are\nsampled 2-3 times. This essentially accepts a small amount of overﬁtting in exchange for higher quality training data.\n2https://commoncrawl.org/the-data/\n8\n\nFigure 2.2: Total compute used during training. Based on the analysis in Scaling Laws For Neural Language Models\n[KMH+20] we train much larger models on many fewer tokens than is typical. As a consequence, although GPT-3 3B\nis almost 10x larger than RoBERTa-Large (355M params), both models took roughly 50 petaﬂop/s-days of compute\nduring pre-training. Methodology for these calculations can be found in Appendix D.\nDataset\nQuantity\n(tokens)\nWeight in\ntraining mix\nEpochs elapsed when\ntraining for 300B tokens\nCommon Crawl (ﬁltered)\n410 billion\n60%\n0.44\nWebText2\n19 billion\n22%\n2.9\nBooks1\n12 billion\n8%\n1.9\nBooks2\n55 billion\n8%\n0.43\nWikipedia\n3 billion\n3%\n3.4\nTable 2.2: Datasets used to train GPT-3. “Weight in training mix” refers to the fraction of examples during training\nthat are drawn from a given dataset, which we intentionally do not make proportional to the size of the dataset. As a\nresult, when we train for 300 billion tokens, some datasets are seen up to 3.4 times during training while other datasets\nare seen less than once.\nA major methodological concern with language models pretrained on a broad swath of internet data, particularly large\nmodels with the capacity to memorize vast amounts of content, is potential contamination of downstream tasks by\nhaving their test or development sets inadvertently seen during pre-training. To reduce such contamination, we searched\nfor and attempted to remove any overlaps with the development and test sets of all benchmarks studied in this paper.\nUnfortunately, a bug in the ﬁltering caused us to ignore some overlaps, and due to the cost of training it was not feasible\nto retrain the model. In Section 4 we characterize the impact of the remaining overlaps, and in future work we will\nmore aggressively remove data contamination.\n2.3\nTraining Process\nAs found in [KMH+20, MKAT18], larger models can typically use a larger batch size, but require a smaller learning\nrate. We measure the gradient noise scale during training and use it to guide our choice of batch size [MKAT18]. Table\n2.1 shows the parameter settings we used. To train the larger models without running out of memory, we use a mixture\nof model parallelism within each matrix multiply and model parallelism across the layers of the network. All models\nwere trained on V100 GPU’s on part of a high-bandwidth cluster provided by Microsoft. Details of the training process\nand hyperparameter settings are described in Appendix B.\n9\n\n2.4\nEvaluation\nFor few-shot learning, we evaluate each example in the evaluation set by randomly drawing K examples from that\ntask’s training set as conditioning, delimited by 1 or 2 newlines depending on the task. For LAMBADA and Storycloze\nthere is no supervised training set available so we draw conditioning examples from the development set and evaluate\non the test set. For Winograd (the original, not SuperGLUE version) there is only one dataset, so we draw conditioning\nexamples directly from it.\nK can be any value from 0 to the maximum amount allowed by the model’s context window, which is nctx = 2048\nfor all models and typically ﬁts 10 to 100 examples. Larger values of K are usually but not always better, so when a\nseparate development and test set are available, we experiment with a few values of K on the development set and then\nrun the best value on the test set. For some tasks (see Appendix G) we also use a natural language prompt in addition to\n(or for K = 0, instead of) demonstrations.\nOn tasks that involve choosing one correct completion from several options (multiple choice), we provide K examples\nof context plus correct completion, followed by one example of context only, and compare the LM likelihood of\neach completion. For most tasks we compare the per-token likelihood (to normalize for length), however on a small\nnumber of datasets (ARC, OpenBookQA, and RACE) we gain additional beneﬁt as measured on the development set\nby normalizing by the unconditional probability of each completion, by computing\nP (completion|context)\nP (completion|answer context), where\nanswer context is the string \"Answer:\n\" or \"A: \" and is used to prompt that the completion should be an answer\nbut is otherwise generic.\nOn tasks that involve binary classiﬁcation, we give the options more semantically meaningful names (e.g. “True” or\n“False” rather than 0 or 1) and then treat the task like multiple choice; we also sometimes frame the task similar to what\nis done by [RSR+19] (see Appendix G) for details.\nOn tasks with free-form completion, we use beam search with the same parameters as [RSR+19]: a beam width of 4\nand a length penalty of α = 0.6. We score the model using F1 similarity score, BLEU, or exact match, depending on\nwhat is standard for the dataset at hand.\nFinal results are reported on the test set when publicly available, for each model size and learning setting (zero-, one-,\nand few-shot). When the test set is private, our model is often too large to ﬁt on the test server, so we report results on\nthe development set. We do submit to the test server on a small number of datasets (SuperGLUE, TriviaQA, PiQa)\nwhere we were able to make submission work, and we submit only the 200B few-shot results, and report development\nset results for everything else.\n3\nResults\nIn Figure 3.1 we display training curves for the 8 models described in Section 2. For this graph we also include 6\nadditional extra-small models with as few as 100,000 parameters. As observed in [KMH+20], language modeling\nperformance follows a power-law when making efﬁcient use of training compute. After extending this trend by two\nmore orders of magnitude, we observe only a slight (if any) departure from the power-law. One might worry that these\nimprovements in cross-entropy loss come only from modeling spurious details of our training corpus. However, we will\nsee in the following sections that improvements in cross-entropy loss lead to consistent performance gains across a\nbroad spectrum of natural language tasks.\nBelow, we evaluate the 8 models described in Section 2 (the 175 billion parameter parameter GPT-3 and 7 smaller\nmodels) on a wide range of datasets. We group the datasets into 9 categories representing roughly similar tasks.\nIn Section 3.1 we evaluate on traditional language modeling tasks and tasks that are similar to language modeling,\nsuch as Cloze tasks and sentence/paragraph completion tasks. In Section 3.2 we evaluate on “closed book” question\nanswering tasks: tasks which require using the information stored in the model’s parameters to answer general\nknowledge questions. In Section 3.3 we evaluate the model’s ability to translate between languages (especially one-shot\nand few-shot). In Section 3.4 we evaluate the model’s performance on Winograd Schema-like tasks. In Section 3.5 we\nevaluate on datasets that involve commonsense reasoning or question answering. In Section 3.6 we evaluate on reading\ncomprehension tasks, in Section 3.7 we evaluate on the SuperGLUE benchmark suite, and in 3.8 we brieﬂy explore\nNLI. Finally, in Section 3.9, we invent some additional tasks designed especially to probe in-context learning abilities –\nthese tasks focus on on-the-ﬂy reasoning, adaptation skills, or open-ended text synthesis. We evaluate all tasks in the\nfew-shot, one-shot, and zero-shot settings.\n10\n\nFigure 3.1: Smooth scaling of performance with compute. Performance (measured in terms of cross-entropy\nvalidation loss) follows a power-law trend with the amount of compute used for training. The power-law behavior\nobserved in [KMH+20] continues for an additional two orders of magnitude with only small deviations from the\npredicted curve. For this ﬁgure, we exclude embedding parameters from compute and parameter counts.\nSetting\nPTB\nSOTA (Zero-Shot)\n35.8a\nGPT-3 Zero-Shot\n20.5\nTable 3.1: Zero-shot results on PTB language modeling dataset. Many other common language modeling datasets\nare omitted because they are derived from Wikipedia or other sources which are included in GPT-3’s training data.\na[RWC+19]\n3.1\nLanguage Modeling, Cloze, and Completion Tasks\nIn this section we test GPT-3’s performance on the traditional task of language modeling, as well as related tasks\nthat involve predicting a single word of interest, completing a sentence or paragraph, or choosing between possible\ncompletions of a piece of text.\n3.1.1\nLanguage Modeling\nWe calculate zero-shot perplexity on the Penn Tree Bank (PTB) [MKM+94] dataset measured in [RWC+19]. We omit\nthe 4 Wikipedia-related tasks in that work because they are entirely contained in our training data, and we also omit the\none-billion word benchmark due to a high fraction of the dataset being contained in our training set. PTB escapes these\nissues due to predating the modern internet. Our largest model sets a new SOTA on PTB by a substantial margin of 15\npoints, achieving a perplexity of 20.50. Note that since PTB is a traditional language modeling dataset it does not have\na clear separation of examples to deﬁne one-shot or few-shot evaluation around, so we measure only zero-shot.\n3.1.2\nLAMBADA\nThe LAMBADA dataset [PKL+16] tests the modeling of long-range dependencies in text – the model is asked to\npredict the last word of sentences which require reading a paragraph of context. It has recently been suggested that the\ncontinued scaling of language models is yielding diminishing returns on this difﬁcult benchmark. [BHT+20] reﬂect on\nthe small 1.5% improvement achieved by a doubling of model size between two recent state of the art results ([SPP+19]\n11\n\nSetting\nLAMBADA\n(acc)\nLAMBADA\n(ppl)\nStoryCloze\n(acc)\nHellaSwag\n(acc)\nSOTA\n68.0a\n8.63b\n91.8c\n85.6d\nGPT-3 Zero-Shot\n76.2\n3.00\n83.2\n78.9\nGPT-3 One-Shot\n72.5\n3.35\n84.7\n78.1\nGPT-3 Few-Shot\n86.4\n1.92\n87.7\n79.3\nTable 3.2: Performance on cloze and completion tasks. GPT-3 signiﬁcantly improves SOTA on LAMBADA while\nachieving respectable performance on two difﬁcult completion prediction datasets. a[Tur20] b[RWC+19] c[LDL19]\nd[LCH+20]\nFigure 3.2: On LAMBADA, the few-shot capability of language models results in a strong boost to accuracy. GPT-3\n2.7B outperforms the SOTA 17B parameter Turing-NLG [Tur20] in this setting, and GPT-3 175B advances the state of\nthe art by 18%. Note zero-shot uses a different format from one-shot and few-shot as described in the text.\nand [Tur20]) and argue that “continuing to expand hardware and data sizes by orders of magnitude is not the path\nforward”. We ﬁnd that path is still promising and in a zero-shot setting GPT-3 achieves 76% on LAMBADA, a gain of\n8% over the previous state of the art.\nLAMBADA is also a demonstration of the ﬂexibility of few-shot learning as it provides a way to address a problem that\nclassically occurs with this dataset. Although the completion in LAMBADA is always the last word in a sentence, a\nstandard language model has no way of knowing this detail. It thus assigns probability not only to the correct ending but\nalso to other valid continuations of the paragraph. This problem has been partially addressed in the past with stop-word\nﬁlters [RWC+19] (which ban “continuation” words). The few-shot setting instead allows us to “frame” the task as a\ncloze-test and allows the language model to infer from examples that a completion of exactly one word is desired. We\nuse the following ﬁll-in-the-blank format:\nAlice was friends with Bob. Alice went to visit her friend\n. →Bob\nGeorge bought some baseball equipment, a ball, a glove, and a\n. →\nWhen presented with examples formatted this way, GPT-3 achieves 86.4% accuracy in the few-shot setting, an increase\nof over 18% from the previous state-of-the-art. We observe that few-shot performance improves strongly with model\nsize. While this setting decreases the performance of the smallest model by almost 20%, for GPT-3 it improves accuracy\nby 10%. Finally, the ﬁll-in-blank method is not effective one-shot, where it always performs worse than the zero-shot\nsetting. Perhaps this is because all models still require several examples to recognize the pattern.\n12\n\nSetting\nNaturalQS\nWebQS\nTriviaQA\nRAG (Fine-tuned, Open-Domain) [LPP+20]\n44.5\n45.5\n68.0\nT5-11B+SSM (Fine-tuned, Closed-Book) [RRS20]\n36.6\n44.7\n60.5\nT5-11B (Fine-tuned, Closed-Book)\n34.5\n37.4\n50.1\nGPT-3 Zero-Shot\n14.6\n14.4\n64.3\nGPT-3 One-Shot\n23.0\n25.3\n68.0\nGPT-3 Few-Shot\n29.9\n41.5\n71.2\nTable 3.3: Results on three Open-Domain QA tasks. GPT-3 is shown in the few-, one-, and zero-shot settings, as\ncompared to prior SOTA results for closed book and open domain settings. TriviaQA few-shot result is evaluated on the\nwiki split test server.\nOne note of caution is that an analysis of test set contamination identiﬁed that a signiﬁcant minority of the LAMBADA\ndataset appears to be present in our training data – however analysis performed in Section 4 suggests negligible impact\non performance.\n3.1.3\nHellaSwag\nThe HellaSwag dataset [ZHB+19] involves picking the best ending to a story or set of instructions. The examples were\nadversarially mined to be difﬁcult for language models while remaining easy for humans (who achieve 95.6% accuracy).\nGPT-3 achieves 78.1% accuracy in the one-shot setting and 79.3% accuracy in the few-shot setting, outperforming the\n75.4% accuracy of a ﬁne-tuned 1.5B parameter language model [ZHR+19] but still a fair amount lower than the overall\nSOTA of 85.6% achieved by the ﬁne-tuned multi-task model ALUM.\n3.1.4\nStoryCloze\nWe next evaluate GPT-3 on the StoryCloze 2016 dataset [MCH+16], which involves selecting the correct ending\nsentence for ﬁve-sentence long stories. Here GPT-3 achieves 83.2% in the zero-shot setting and 87.7% in the few-shot\nsetting (with K = 70). This is still 4.1% lower than the ﬁne-tuned SOTA using a BERT based model [LDL19] but\nimproves over previous zero-shot results by roughly 10%.\n3.2\nClosed Book Question Answering\nIn this section we measure GPT-3’s ability to answer questions about broad factual knowledge. Due to the immense\namount of possible queries, this task has normally been approached by using an information retrieval system to ﬁnd\nrelevant text in combination with a model which learns to generate an answer given the question and the retrieved\ntext. Since this setting allows a system to search for and condition on text which potentially contains the answer it\nis denoted “open-book”. [RRS20] recently demonstrated that a large language model can perform surprisingly well\ndirectly answering the questions without conditioning on auxilliary information. They denote this more restrictive\nevaluation setting as “closed-book”. Their work suggests that even higher-capacity models could perform even better\nand we test this hypothesis with GPT-3. We evaluate GPT-3 on the 3 datasets in [RRS20]: Natural Questions [KPR+19],\nWebQuestions [BCFL13], and TriviaQA [JCWZ17], using the same splits. Note that in addition to all results being in\nthe closed-book setting, our use of few-shot, one-shot, and zero-shot evaluations represent an even stricter setting than\nprevious closed-book QA work: in addition to external content not being allowed, ﬁne-tuning on the Q&A dataset itself\nis also not permitted.\nThe results for GPT-3 are shown in Table 3.3. On TriviaQA, we achieve 64.3% in the zero-shot setting, 68.0% in the\none-shot setting, and 71.2% in the few-shot setting. The zero-shot result already outperforms the ﬁne-tuned T5-11B by\n14.2%, and also outperforms a version with Q&A tailored span prediction during pre-training by 3.8%. The one-shot\nresult improves by 3.7% and matches the SOTA for an open-domain QA system which not only ﬁne-tunes but also\nmakes use of a learned retrieval mechanism over a 15.3B parameter dense vector index of 21M documents [LPP+20].\nGPT-3’s few-shot result further improves performance another 3.2% beyond this.\nOn WebQuestions (WebQs), GPT-3 achieves 14.4% in the zero-shot setting, 25.3% in the one-shot setting, and 41.5%\nin the few-shot setting. This compares to 37.4% for ﬁne-tuned T5-11B, and 44.7% for ﬁne-tuned T5-11B+SSM,\nwhich uses a Q&A-speciﬁc pre-training procedure. GPT-3 in the few-shot setting approaches the performance of\nstate-of-the-art ﬁne-tuned models. Notably, compared to TriviaQA, WebQS shows a much larger gain from zero-shot to\nfew-shot (and indeed its zero-shot and one-shot performance are poor), perhaps suggesting that the WebQs questions\n13\n\nFigure 3.3: On TriviaQA GPT3’s performance grows smoothly with model size, suggesting that language models\ncontinue to absorb knowledge as their capacity increases. One-shot and few-shot performance make signiﬁcant gains\nover zero-shot behavior, matching and exceeding the performance of the SOTA ﬁne-tuned open-domain model, RAG\n[LPP+20]\nand/or the style of their answers are out-of-distribution for GPT-3. Nevertheless, GPT-3 appears able to adapt to this\ndistribution, recovering strong performance in the few-shot setting.\nOn Natural Questions (NQs) GPT-3 achieves 14.6% in the zero-shot setting, 23.0% in the one-shot setting, and 29.9% in\nthe few-shot setting, compared to 36.6% for ﬁne-tuned T5 11B+SSM. Similar to WebQS, the large gain from zero-shot\nto few-shot may suggest a distribution shift, and may also explain the less competitive performance compared to\nTriviaQA and WebQS. In particular, the questions in NQs tend towards very ﬁne-grained knowledge on Wikipedia\nspeciﬁcally which could be testing the limits of GPT-3’s capacity and broad pretraining distribution.\nOverall, on one of the three datasets GPT-3’s one-shot matches the open-domain ﬁne-tuning SOTA. On the other two\ndatasets it approaches the performance of the closed-book SOTA despite not using ﬁne-tuning. On all 3 datasets, we\nﬁnd that performance scales very smoothly with model size (Figure 3.3 and Appendix H Figure H.7), possibly reﬂecting\nthe idea that model capacity translates directly to more ‘knowledge’ absorbed in the parameters of the model.\n3.3\nTranslation\nFor GPT-2 a ﬁlter was used on a multilingual collection of documents to produce an English only dataset due to capacity\nconcerns. Even with this ﬁltering GPT-2 showed some evidence of multilingual capability and performed non-trivially\nwhen translating between French and English despite only training on 10 megabytes of remaining French text. Since we\nincrease the capacity by over two orders of magnitude from GPT-2 to GPT-3, we also expand the scope of the training\ndataset to include more representation of other languages, though this remains an area for further improvement. As\ndiscussed in 2.2 the majority of our data is derived from raw Common Crawl with only quality-based ﬁltering. Although\nGPT-3’s training data is still primarily English (93% by word count), it also includes 7% of text in other languages.\nThese languages are documented in the supplemental material. In order to better understand translation capability, we\nalso expand our analysis to include two additional commonly studied languages, German and Romanian.\nExisting unsupervised machine translation approaches often combine pretraining on a pair of monolingual datasets\nwith back-translation [SHB15] to bridge the two languages in a controlled way. By contrast, GPT-3 learns from a\nblend of training data that mixes many languages together in a natural way, combining them on a word, sentence,\nand document level. GPT-3 also uses a single training objective which is not customized or designed for any task in\nparticular. However, our one / few-shot settings aren’t strictly comparable to prior unsupervised work since they make\nuse of a small amount of paired examples (1 or 64). This corresponds to up to a page or two of in-context training data.\nResults are shown in Table 3.4. Zero-shot GPT-3, which only receives on a natural language description of the task,\nstill underperforms recent unsupervised NMT results. However, providing only a single example demonstration for\n14\n\nSetting\nEn→Fr\nFr→En\nEn→De\nDe→En\nEn→Ro\nRo→En\nSOTA (Supervised)\n45.6a\n35.0 b\n41.2c\n40.2d\n38.5e\n39.9e\nXLM [LC19]\n33.4\n33.3\n26.4\n34.3\n33.3\n31.8\nMASS [STQ+19]\n37.5\n34.9\n28.3\n35.2\n35.2\n33.1\nmBART [LGG+20]\n-\n-\n29.8\n34.0\n35.0\n30.5\nGPT-3 Zero-Shot\n25.2\n21.2\n24.6\n27.2\n14.1\n19.9\nGPT-3 One-Shot\n28.3\n33.7\n26.2\n30.4\n20.6\n38.6\nGPT-3 Few-Shot\n32.6\n39.2\n29.7\n40.6\n21.0\n39.5\nTable 3.4: Few-shot GPT-3 outperforms previous unsupervised NMT work by 5 BLEU when translating\ninto English reﬂecting its strength as an English LM. We report BLEU scores on the WMT’14 Fr↔En,\nWMT’16 De↔En, and WMT’16 Ro↔En datasets as measured by multi-bleu.perl with XLM’s tokeniza-\ntion in order to compare most closely with prior unsupervised NMT work.\nSacreBLEUf [Pos18] results re-\nported in Appendix H. Underline indicates an unsupervised or few-shot SOTA, bold indicates supervised SOTA\nwith relative conﬁdence.\na[EOAG18] b[DHKH14] c[WXH+18] d[oR16] e[LGG+20] f [SacreBLEU signature:\nBLEU+case.mixed+numrefs.1+smooth.exp+tok.intl+version.1.2.20]\nFigure 3.4: Few-shot translation performance on 6 language pairs as model capacity increases. There is a consistent\ntrend of improvement across all datasets as the model scales, and as well as tendency for translation into English to be\nstronger than translation from English.\n15\n\nSetting\nWinograd\nWinogrande (XL)\nFine-tuned SOTA\n90.1a\n84.6b\nGPT-3 Zero-Shot\n88.3*\n70.2\nGPT-3 One-Shot\n89.7*\n73.2\nGPT-3 Few-Shot\n88.6*\n77.7\nTable 3.5: Results on the WSC273 version of Winograd schemas and the adversarial Winogrande dataset. See Section\n4 for details on potential contamination of the Winograd test set. a[SBBC19] b[LYN+20]\nFigure 3.5: Zero-, one-, and few-shot performance on the adversarial Winogrande dataset as model capacity scales.\nScaling is relatively smooth with the gains to few-shot learning increasing with model size, and few-shot GPT-3 175B\nis competitive with a ﬁne-tuned RoBERTA-large.\neach translation task improves performance by over 7 BLEU and nears competitive performance with prior work.\nGPT-3 in the full few-shot setting further improves another 4 BLEU resulting in similar average performance to prior\nunsupervised NMT work. GPT-3 has a noticeable skew in its performance depending on language direction. For the\nthree input languages studied, GPT-3 signiﬁcantly outperforms prior unsupervised NMT work when translating into\nEnglish but underperforms when translating in the other direction. Performance on En-Ro is a noticeable outlier at\nover 10 BLEU worse than prior unsupervised NMT work. This could be a weakness due to reusing the byte-level BPE\ntokenizer of GPT-2 which was developed for an almost entirely English training dataset. For both Fr-En and De-En,\nfew shot GPT-3 outperforms the best supervised result we could ﬁnd but due to our unfamiliarity with the literature and\nthe appearance that these are un-competitive benchmarks we do not suspect those results represent true state of the art.\nFor Ro-En, few shot GPT-3 performs within 0.5 BLEU of the overall SOTA which is achieved by a combination of\nunsupervised pretraining, supervised ﬁnetuning on 608K labeled examples, and backtranslation [LHCG19b].\nFinally, across all language pairs and across all three settings (zero-, one-, and few-shot), there is a smooth trend of\nimprovement with model capacity. This is shown in Figure 3.4 in the case of few-shot results, and scaling for all three\nsettings is shown in Appendix H.\n3.4\nWinograd-Style Tasks\nThe Winograd Schemas Challenge [LDM12] is a classical task in NLP that involves determining which word a pronoun\nrefers to, when the pronoun is grammatically ambiguous but semantically unambiguous to a human. Recently ﬁne-tuned\nlanguage models have achieved near-human performance on the original Winograd dataset, but more difﬁcult versions\n16\n\nSetting\nPIQA\nARC (Easy)\nARC (Challenge)\nOpenBookQA\nFine-tuned SOTA\n79.4\n92.0[KKS+20]\n78.5[KKS+20]\n87.2[KKS+20]\nGPT-3 Zero-Shot\n80.5*\n68.8\n51.4\n57.6\nGPT-3 One-Shot\n80.5*\n71.2\n53.2\n58.8\nGPT-3 Few-Shot\n82.8*\n70.1\n51.5\n65.4\nTable 3.6: GPT-3 results on three commonsense reasoning tasks, PIQA, ARC, and OpenBookQA. GPT-3 Few-Shot\nPIQA result is evaluated on the test server. See Section 4 for details on potential contamination issues on the PIQA test\nset.\nFigure 3.6: GPT-3 results on PIQA in the zero-shot, one-shot, and few-shot settings. The largest model achieves a\nscore on the development set in all three conditions that exceeds the best recorded score on the task.\nsuch as the adversarially-mined Winogrande dataset [SBBC19] still signiﬁcantly lag human performance. We test\nGPT-3’s performance on both Winograd and Winogrande, as usual in the zero-, one-, and few-shot setting.\nOn Winograd we test GPT-3 on the original set of 273 Winograd schemas, using the same “partial evaluation” method\ndescribed in [RWC+19]. Note that this setting differs slightly from the WSC task in the SuperGLUE benchmark, which\nis presented as binary classiﬁcation and requires entity extraction to convert to the form described in this section. On\nWinograd GPT-3 achieves 88.3%, 89.7%, and 88.6% in the zero-shot, one-shot, and few-shot settings, showing no clear\nin-context learning but in all cases achieving strong results just a few points below state-of-the-art and estimated human\nperformance. We note that contamination analysis found some Winograd schemas in the training data but this appears\nto have only a small effect on results (see Section 4).\nOn the more difﬁcult Winogrande dataset, we do ﬁnd gains to in-context learning: GPT-3 achieves 70.2% in the\nzero-shot setting, 73.2% in the one-shot setting, and 77.7% in the few-shot setting. For comparison a ﬁne-tuned\nRoBERTA model achieves 79%, state-of-the-art is 84.6% achieved with a ﬁne-tuned high capacity model (T5), and\nhuman performance on the task as reported by [SBBC19] is 94.0%.\n3.5\nCommon Sense Reasoning\nNext we consider three datasets which attempt to capture physical or scientiﬁc reasoning, as distinct from sentence\ncompletion, reading comprehension, or broad knowledge question answering. The ﬁrst, PhysicalQA (PIQA) [BZB+19],\nasks common sense questions about how the physical world works and is intended as a probe of grounded understanding\nof the world. GPT-3 achieves 81.0% accuracy zero-shot, 80.5% accuracy one-shot, and 82.8% accuracy few-shot\n(the last measured on PIQA’s test server). This compares favorably to the 79.4% accuracy prior state-of-the-art of a\n17\n\nSetting\nCoQA\nDROP\nQuAC\nSQuADv2\nRACE-h\nRACE-m\nFine-tuned SOTA\n90.7a\n89.1b\n74.4c\n93.0d\n90.0e\n93.1e\nGPT-3 Zero-Shot\n81.5\n23.6\n41.5\n59.5\n45.5\n58.4\nGPT-3 One-Shot\n84.0\n34.3\n43.3\n65.4\n45.9\n57.4\nGPT-3 Few-Shot\n85.0\n36.5\n44.3\n69.8\n46.8\n58.1\nTable 3.7: Results on reading comprehension tasks. All scores are F1 except results for RACE which report accuracy.\na[JZC+19] b[JN20] c[AI19] d[QIA20] e[SPP+19]\nﬁne-tuned RoBERTa. PIQA shows relatively shallow scaling with model size and is still over 10% worse than human\nperformance, but GPT-3’s few-shot and even zero-shot result outperform the current state-of-the-art. Our analysis\nﬂagged PIQA for a potential data contamination issue (despite hidden test labels), and we therefore conservatively mark\nthe result with an asterisk. See Section 4 for details.\nARC [CCE+18] is a dataset of multiple-choice questions collected from 3rd to 9th grade science exams. On the\n“Challenge” version of the dataset which has been ﬁltered to questions which simple statistical or information retrieval\nmethods are unable to correctly answer, GPT-3 achieves 51.4% accuracy in the zero-shot setting, 53.2% in the one-shot\nsetting, and 51.5% in the few-shot setting. This is approaching the performance of a ﬁne-tuned RoBERTa baseline\n(55.9%) from UniﬁedQA [KKS+20]. On the “Easy” version of the dataset (questions which either of the mentioned\nbaseline approaches answered correctly), GPT-3 achieves 68.8%, 71.2%, and 70.1% which slightly exceeds a ﬁne-tuned\nRoBERTa baseline from [KKS+20]. However, both of these results are still much worse than the overall SOTAs\nachieved by the UniﬁedQA which exceeds GPT-3’s few-shot results by 27% on the challenge set and 22% on the easy\nset.\nOn OpenBookQA [MCKS18], GPT-3 improves signiﬁcantly from zero to few shot settings but is still over 20 points\nshort of the overall SOTA. GPT-3’s few-shot performance is similar to a ﬁne-tuned BERT Large baseline on the\nleaderboard.\nOverall, in-context learning with GPT-3 shows mixed results on commonsense reasoning tasks, with only small and\ninconsistent gains observed in the one and few-shot learning settings for both PIQA and ARC, but a signiﬁcant\nimprovement is observed on OpenBookQA. GPT-3 sets SOTA on the new PIQA dataset in all evaluation settings.\n3.6\nReading Comprehension\nNext we evaluate GPT-3 on the task of reading comprehension. We use a suite of 5 datasets including abstractive,\nmultiple choice, and span based answer formats in both dialog and single question settings. We observe a wide spread\nin GPT-3’s performance across these datasets suggestive of varying capability with different answer formats. In general\nwe observe GPT-3 is on par with initial baselines and early results trained using contextual representations on each\nrespective dataset.\nGPT-3 performs best (within 3 points of the human baseline) on CoQA [RCM19] a free-form conversational dataset\nand performs worst (13 F1 below an ELMo baseline) on QuAC [CHI+18] a dataset which requires modeling structured\ndialog acts and answer span selections of teacher-student interactions. On DROP [DWD+19], a dataset testing discrete\nreasoning and numeracy in the context of reading comprehension, GPT-3 in a few-shot setting outperforms the ﬁne-tuned\nBERT baseline from the original paper but is still well below both human performance and state-of-the-art approaches\nwhich augment neural networks with symbolic systems [RLL+19]. On SQuAD 2.0 [RJL18], GPT-3 demonstrates its\nfew-shot learning capabilities, improving by almost 10 F1 (to 69.8) compared to a zero-shot setting. This allows it to\nslightly outperform the best ﬁne-tuned result in the original paper. On RACE [LXL+17], a multiple choice dataset of\nmiddle school and high school english examinations, GPT-3 performs relatively weakly and is only competitive with\nthe earliest work utilizing contextual representations and is still 45% behind SOTA.\n3.7\nSuperGLUE\nIn order to better aggregate results on NLP tasks and compare to popular models such as BERT and RoBERTa in a\nmore systematic way, we also evaluate GPT-3 on a standardized collection of datasets, the SuperGLUE benchmark\n[WPN+19] [WPN+19] [CLC+19] [DMST19] [RBG11] [KCR+18] [ZLL+18] [DGM06] [BHDD+06] [GMDD07]\n[BDD+09] [PCC18] [PHR+18]. GPT-3’s test-set performance on the SuperGLUE dataset is shown in Table 3.8. In the\nfew-shot setting, we used 32 examples for all tasks, sampled randomly from the training set. For all tasks except WSC\n18\n\nFigure 3.7: GPT-3 results on CoQA reading comprehension task. GPT-3 175B achieves 85 F1 in the few-shot setting,\nonly a few points behind measured human performance and state-of-the-art ﬁne-tuned models. Zero-shot and one-shot\nperformance is a few points behind, with the gains to few-shot being largest for bigger models.\nSuperGLUE\nBoolQ\nCB\nCB\nCOPA\nRTE\nAverage\nAccuracy\nAccuracy\nF1\nAccuracy\nAccuracy\nFine-tuned SOTA\n89.0\n91.0\n96.9\n93.9\n94.8\n92.5\nFine-tuned BERT-Large\n69.0\n77.4\n83.6\n75.7\n70.6\n71.7\nGPT-3 Few-Shot\n71.8\n76.4\n75.6\n52.0\n92.0\n69.0\nWiC\nWSC\nMultiRC\nMultiRC\nReCoRD\nReCoRD\nAccuracy\nAccuracy\nAccuracy\nF1a\nAccuracy\nF1\nFine-tuned SOTA\n76.1\n93.8\n62.3\n88.2\n92.5\n93.3\nFine-tuned BERT-Large\n69.6\n64.6\n24.1\n70.0\n71.3\n72.0\nGPT-3 Few-Shot\n49.4\n80.1\n30.5\n75.4\n90.2\n91.1\nTable 3.8: Performance of GPT-3 on SuperGLUE compared to ﬁne-tuned baselines and SOTA. All results are reported\non the test set. GPT-3 few-shot is given a total of 32 examples within the context of each task and performs no gradient\nupdates.\n19\n\nFigure 3.8: Performance on SuperGLUE increases with model size and number of examples in context. A value\nof K = 32 means that our model was shown 32 examples per task, for 256 examples total divided across the 8 tasks in\nSuperGLUE. We report GPT-3 values on the dev set, so our numbers are not directly comparable to the dotted reference\nlines (our test set results are in Table 3.8). The BERT-Large reference model was ﬁne-tuned on the SuperGLUE training\nset (125K examples), whereas BERT++ was ﬁrst ﬁne-tuned on MultiNLI (392K examples) and SWAG (113K examples)\nbefore further ﬁne-tuning on the SuperGLUE training set (for a total of 630K ﬁne-tuning examples). We ﬁnd the\ndifference in performance between the BERT-Large and BERT++ to be roughly equivalent to the difference between\nGPT-3 with one example per context versus eight examples per context.\nand MultiRC, we sampled a new set of examples to use in the context for each problem. For WSC and MultiRC, we\nused the same set of randomly drawn examples from the training set as context for all of the problems we evaluated.\nWe observe a wide range in GPT-3’s performance across tasks. On COPA and ReCoRD GPT-3 achieves near-SOTA\nperformance in the one-shot and few-shot settings, with COPA falling only a couple points short and achieving\nsecond place on the leaderboard, where ﬁrst place is held by a ﬁne-tuned 11 billion parameter model (T5). On WSC,\nperformance is still relatively strong, achieving 80.1% in the few-shot setting (note that GPT-3 achieves 88.6% on the\noriginal Winograd dataset as described in Section 3.4). On BoolQ, MultiRC, and RTE, performance is reasonable,\nroughly matching that of a ﬁne-tuned BERT-Large. On CB, we see signs of life at 75.6% in the few-shot setting.\nWiC is a notable weak spot with few-shot performance at 49.4% (at random chance). We tried a number of different\nphrasings and formulations for WiC (which involves determining if a word is being used with the same meaning in two\nsentences), none of which was able to achieve strong performance. This hints at a phenomenon that will become clearer\nin the next section (which discusses the ANLI benchmark) – GPT-3 appears to be weak in the few-shot or one-shot\nsetting at some tasks that involve comparing two sentences or snippets, for example whether a word is used the same\nway in two sentences (WiC), whether one sentence is a paraphrase of another, or whether one sentence implies another.\nThis could also explain the comparatively low scores for RTE and CB, which also follow this format. Despite these\nweaknesses, GPT-3 still outperforms a ﬁne-tuned BERT-large on four of eight tasks and on two tasks GPT-3 is close to\nthe state-of-the-art held by a ﬁne-tuned 11 billion parameter model.\nFinally, we note that the few-shot SuperGLUE score steadily improves with both model size and with number of\nexamples in the context showing increasing beneﬁts from in-context learning (Figure 3.8). We scale K up to 32\nexamples per task, after which point additional examples will not reliably ﬁt into our context. When sweeping over\nvalues of K, we ﬁnd that GPT-3 requires less than eight total examples per task to outperform a ﬁne-tuned BERT-Large\non overall SuperGLUE score.\n3.8\nNLI\nNatural Language Inference (NLI) [Fyo00] concerns the ability to understand the relationship between two sentences.\nIn practice, this task is usually structured as a two or three class classiﬁcation problem where the model classiﬁes\n20\n\nFigure 3.9: Performance of GPT-3 on ANLI Round 3. Results are on the dev-set, which has only 1500 examples\nand therefore has high variance (we estimate a standard deviation of 1.2%). We ﬁnd that smaller models hover around\nrandom chance, while few-shot GPT-3 175B closes almost half the gap from random chance to SOTA. Results for\nANLI rounds 1 and 2 are shown in the appendix.\nwhether the second sentence logically follows from the ﬁrst, contradicts the ﬁrst sentence, or is possibly true (neutral).\nSuperGLUE includes an NLI dataset, RTE, which evaluates the binary version of the task. On RTE, only the largest\nversion of GPT-3 performs convincingly better than random (56%) in any evaluation setting, but in a few-shot setting\nGPT-3 performs similarly to a single-task ﬁne-tuned BERT Large. We also evaluate on the recently introduced\nAdversarial Natural Language Inference (ANLI) dataset [NWD+19]. ANLI is a difﬁcult dataset employing a series of\nadversarially mined natural language inference questions in three rounds (R1, R2, and R3). Similar to RTE, all of our\nmodels smaller than GPT-3 perform at almost exactly random chance on ANLI, even in the few-shot setting (∼33%),\nwhereas GPT-3 itself shows signs of life on Round 3. Results for ANLI R3 are highlighted in Figure 3.9 and full results\nfor all rounds can be found in Appendix H. These results on both RTE and ANLI suggest that NLI is still a very difﬁcult\ntask for language models and they are only just beginning to show signs of progress.\n3.9\nSynthetic and Qualitative Tasks\nOne way to probe GPT-3’s range of abilities in the few-shot (or zero- and one-shot) setting is to give it tasks which\nrequire it to perform simple on-the-ﬂy computational reasoning, recognize a novel pattern that is unlikely to have\noccurred in training, or adapt quickly to an unusual task. We devise several tasks to test this class of abilities. First, we\ntest GPT-3’s ability to perform arithmetic. Second, we create several tasks that involve rearranging or unscrambling the\nletters in a word, tasks which are unlikely to have been exactly seen during training. Third, we test GPT-3’s ability to\nsolve SAT-style analogy problems few-shot. Finally, we test GPT-3 on several qualitative tasks, including using new\nwords in a sentence, correcting English grammar, and news article generation. We will release the synthetic datasets\nwith the hope of stimulating further study of test-time behavior of language models.\n3.9.1\nArithmetic\nTo test GPT-3’s ability to perform simple arithmetic operations without task-speciﬁc training, we developed a small\nbattery of 10 tests that involve asking GPT-3 a simple arithmetic problem in natural language:\n• 2 digit addition (2D+) – The model is asked to add two integers sampled uniformly from [0, 100), phrased in\nthe form of a question, e.g. “Q: What is 48 plus 76? A: 124.”\n• 2 digit subtraction (2D-) – The model is asked to subtract two integers sampled uniformly from [0, 100); the\nanswer may be negative. Example: “Q: What is 34 minus 53? A: -19”.\n• 3 digit addition (3D+) – Same as 2 digit addition, except numbers are uniformly sampled from [0, 1000).\n21\n\nFigure 3.10: Results on all 10 arithmetic tasks in the few-shot settings for models of different sizes. There is a\nsigniﬁcant jump from the second largest model (GPT-3 13B) to the largest model (GPT-3 175), with the latter being\nable to reliably accurate 2 digit arithmetic, usually accurate 3 digit arithmetic, and correct answers a signiﬁcant fraction\nof the time on 4-5 digit arithmetic, 2 digit multiplication, and compound operations. Results for one-shot and zero-shot\nare shown in the appendix.\n• 3 digit subtraction (3D-) – Same as 2 digit subtraction, except numbers are uniformly sampled from [0, 1000).\n• 4 digit addition (4D+) – Same as 3 digit addition, except uniformly sampled from [0, 10000).\n• 4 digit subtraction (4D-) – Same as 3 digit subtraction, except uniformly sampled from [0, 10000).\n• 5 digit addition (5D+) – Same as 3 digit addition, except uniformly sampled from [0, 100000).\n• 5 digit subtraction (5D-) – Same as 3 digit subtraction, except uniformly sampled from [0, 100000).\n• 2 digit multiplication (2Dx) – The model is asked to multiply two integers sampled uniformly from [0, 100),\ne.g. “Q: What is 24 times 42? A: 1008”.\n• One-digit composite (1DC) – The model is asked to perform a composite operation on three 1 digit numbers,\nwith parentheses around the last two. For example, “Q: What is 6+(4*8)? A: 38”. The three 1 digit numbers\nare selected uniformly on [0, 10) and the operations are selected uniformly from {+,-,*}.\nIn all 10 tasks the model must generate the correct answer exactly. For each task we generate a dataset of 2,000 random\ninstances of the task and evaluate all models on those instances.\nFirst we evaluate GPT-3 in the few-shot setting, for which results are shown in Figure 3.10. On addition and subtraction,\nGPT-3 displays strong proﬁciency when the number of digits is small, achieving 100% accuracy on 2 digit addition,\n98.9% at 2 digit subtraction, 80.2% at 3 digit addition, and 94.2% at 3-digit subtraction. Performance decreases as the\nnumber of digits increases, but GPT-3 still achieves 25-26% accuracy on four digit operations and 9-10% accuracy on\nﬁve digit operations, suggesting at least some capacity to generalize to larger numbers of digits. GPT-3 also achieves\n29.2% accuracy at 2 digit multiplication, an especially computationally intensive operation. Finally, GPT-3 achieves\n21.3% accuracy at single digit combined operations (for example, 9*(7+5)), suggesting that it has some robustness\nbeyond just single operations.\nAs Figure 3.10 makes clear, small models do poorly on all of these tasks – even the 13 billion parameter model (the\nsecond largest after the 175 billion full GPT-3) can solve 2 digit addition and subtraction only half the time, and all\nother operations less than 10% of the time.\nOne-shot and zero-shot performance are somewhat degraded relative to few-shot performance, suggesting that adaptation\nto the task (or at the very least recognition of the task) is important to performing these computations correctly.\nNevertheless, one-shot performance is still quite strong, and even zero-shot performance of the full GPT-3 signiﬁcantly\n22\n\nSetting\n2D+\n2D-\n3D+\n3D-\n4D+\n4D-\n5D+\n5D-\n2Dx\n1DC\nGPT-3 Zero-shot\n76.9\n58.0\n34.2\n48.3\n4.0\n7.5\n0.7\n0.8\n19.8\n9.8\nGPT-3 One-shot\n99.6\n86.4\n65.5\n78.7\n14.0\n14.0\n3.5\n3.8\n27.4\n14.3\nGPT-3 Few-shot\n100.0\n98.9\n80.4\n94.2\n25.5\n26.8\n9.3\n9.9\n29.2\n21.3\nTable 3.9: Results on basic arithmetic tasks for GPT-3 175B. {2,3,4,5}D{+,-} is 2, 3, 4, and 5 digit addition or\nsubtraction, 2Dx is 2 digit multiplication. 1DC is 1 digit composite operations. Results become progressively stronger\nmoving from the zero-shot to one-shot to few-shot setting, but even the zero-shot shows signiﬁcant arithmetic abilities.\nSetting\nCL\nA1\nA2\nRI\nRW\nGPT-3 Zero-shot\n3.66\n2.28\n8.91\n8.26\n0.09\nGPT-3 One-shot\n21.7\n8.62\n25.9\n45.4\n0.48\nGPT-3 Few-shot\n37.9\n15.1\n39.7\n67.2\n0.44\nTable 3.10: GPT-3 175B performance on various word unscrambling and word manipulation tasks, in zero-, one-, and\nfew-shot settings. CL is “cycle letters in word”, A1 is anagrams of but the ﬁrst and last letters, A2 is anagrams of all but\nthe ﬁrst and last two letters, RI is “Random insertion in word”, RW is “reversed words”.\noutperforms few-shot learning for all smaller models. All three settings for the full GPT-3 are shown in Table 3.9, and\nmodel capacity scaling for all three settings is shown in Appendix H.\nTo spot-check whether the model is simply memorizing speciﬁc arithmetic problems, we took the 3-digit arithmetic\nproblems in our test set and searched for them in our training data in both the forms \"<NUM1> + <NUM2> =\" and\n\"<NUM1> plus <NUM2>\". Out of 2,000 addition problems we found only 17 matches (0.8%) and out of 2,000\nsubtraction problems we found only 2 matches (0.1%), suggesting that only a trivial fraction of the correct answers\ncould have been memorized. In addition, inspection of incorrect answers reveals that the model often makes mistakes\nsuch as not carrying a “1”, suggesting it is actually attempting to perform the relevant computation rather than\nmemorizing a table.\nOverall, GPT-3 displays reasonable proﬁciency at moderately complex arithmetic in few-shot, one-shot, and even\nzero-shot settings.\n3.9.2\nWord Scrambling and Manipulation Tasks\nTo test GPT-3’s ability to learn novel symbolic manipulations from a few examples, we designed a small battery of\n5 “character manipulation” tasks. Each task involves giving the model a word distorted by some combination of\nscrambling, addition, or deletion of characters, and asking it to recover the original word. The 5 tasks are:\n• Cycle letters in word (CL) – The model is given a word with its letters cycled, then the “=” symbol, and\nis expected to generate the original word. For example, it might be given “lyinevitab” and should output\n“inevitably”.\n• Anagrams of all but ﬁrst and last characters (A1) – The model is given a word where every letter except\nthe ﬁrst and last have been scrambled randomly, and must output the original word. Example: criroptuon =\ncorruption.\n• Anagrams of all but ﬁrst and last 2 characters (A2) – The model is given a word where every letter except\nthe ﬁrst 2 and last 2 have been scrambled randomly, and must recover the original word. Example: opoepnnt\n→opponent.\n• Random insertion in word (RI) – A random punctuation or space character is inserted between each letter\nof a word, and the model must output the original word. Example: s.u!c/c!e.s s i/o/n = succession.\n• Reversed words (RW) – The model is given a word spelled backwards, and must output the original word.\nExample: stcejbo →objects.\nFor each task we generate 10,000 examples, which we chose to be the top 10,000 most frequent words as measured by\n[Nor09] of length more than 4 characters and less than 15 characters. The few-shot results are shown in Figure 3.11.\nTask performance tends to grow smoothly with model size, with the full GPT-3 model achieving 66.9% on removing\n23\n\nFigure 3.11: Few-shot performance on the ﬁve word scrambling tasks for different sizes of model. There is generally\nsmooth improvement with model size although the random insertion task shows an upward slope of improvement with\nthe 175B model solving the task the majority of the time. Scaling of one-shot and zero-shot performance is shown in\nthe appendix. All tasks are done with K = 100.\nrandom insertions, 38.6% on cycling letters, 40.2% on the easier anagram task, and 15.1% on the more difﬁcult anagram\ntask (where only the ﬁrst and last letters are held ﬁxed). None of the models can reverse the letters in a word.\nIn the one-shot setting, performance is signiﬁcantly weaker (dropping by half or more), and in the zero-shot setting the\nmodel can rarely perform any of the tasks (Table 3.10). This suggests that the model really does appear to learn these\ntasks at test time, as the model cannot perform them zero-shot and their artiﬁcial nature makes them unlikely to appear\nin the pre-training data (although we cannot conﬁrm this with certainty).\nWe can further quantify performance by plotting “in-context learning curves”, which show task performance as a\nfunction of the number of in-context examples. We show in-context learning curves for the Symbol Insertion task\nin Figure 1.2. We can see that larger models are able to make increasingly effective use of in-context information,\nincluding both task examples and natural language task descriptions.\nFinally, it is worth adding that solving these tasks requires character-level manipulations, whereas our BPE encoding\noperates on signiﬁcant fractions of a word (on average ∼0.7 words per token), so from the LM’s perspective succeeding\nat these tasks involves not just manipulating BPE tokens but understanding and pulling apart their substructure. Also,\nCL, A1, and A2 are not bijective (that is, the unscrambled word is not a deterministic function of the scrambled word),\nrequiring the model to perform some search to ﬁnd the correct unscrambling. Thus, the skills involved appear to require\nnon-trivial pattern-matching and computation.\n3.9.3\nSAT Analogies\nTo test GPT-3 on another task that is somewhat unusual relative to the typical distribution of text, we collected a set of\n374 “SAT analogy” problems [TLBS03]. Analogies are a style of multiple choice question that constituted a section of\nthe SAT college entrance exam before 2005. A typical example is “audacious is to boldness as (a) sanctimonious is to\nhypocrisy, (b) anonymous is to identity, (c) remorseful is to misdeed, (d) deleterious is to result, (e) impressionable is to\ntemptation”. The student is expected to choose which of the ﬁve word pairs has the same relationship as the original\nword pair; in this example the answer is “sanctimonious is to hypocrisy”. On this task GPT-3 achieves 65.2% in the\nfew-shot setting, 59.1% in the one-shot setting, and 53.7% in the zero-shot setting, whereas the average score among\ncollege applicants was 57% [TL05] (random guessing yields 20%). As shown in Figure 3.12, the results improve with\nscale, with the the full 175 billion model improving by over 10% compared to the 13 billion parameter model.\n24\n\nFigure 3.12: Zero-, one-,and few-shot performance on SAT analogy tasks, for different sizes of model. The largest\nmodel achieves 65% accuracy in the few-shot setting, and also demonstrates signiﬁcant gains to in-context learning\nwhich are not present in smaller models.\n3.9.4\nNews Article Generation\nPrevious work on generative language models qualitatively tested their ability to generate synthetic “news articles” by\nconditional sampling from the model given a human-written prompt consisting of a plausible ﬁrst sentence for a news\nstory [RWC+19]. Relative to [RWC+19], the dataset used to train GPT-3 is much less weighted towards news articles,\nso trying to generate news articles via raw unconditional samples is less effective – for example GPT-3 often interprets\nthe proposed ﬁrst sentence of a “news article” as a tweet and then posts synthetic responses or follow-up tweets. To\nsolve this problem we employed GPT-3’s few-shot learning abilities by providing three previous news articles in the\nmodel’s context to condition it. With the title and subtitle of a proposed next article, the model is able to reliably\ngenerate short articles in the “news” genre.\nTo gauge the quality of news article generation from GPT-3 (which we believe is likely to be correlated with conditional\nsample generation quality in general), we decided to measure human ability to distinguish GPT-3-generated articles\nfrom real ones. Similar work has been carried out by Kreps et al. [KMB20] and Zellers et al. [ZHR+19]. Generative\nlanguage models are trained to match the distribution of content generated by humans, so the (in)ability of humans to\ndistinguish the two is a potentially important measure of quality.3\nIn order to see how well humans can detect model generated text, we arbitrarily selected 25 article titles and subtitles\nfrom the website newser.com (mean length: 215 words). We then generated completions of these titles and subtitles\nfrom four language models ranging in size from 125M to 175B (GPT-3) parameters (mean length: 200 words). For each\nmodel, we presented around 80 US-based participants with a quiz consisting of these real titles and subtitles followed\nby either the human written article or the article generated by the model4. Participants were asked to select whether the\narticle was “very likely written by a human”, “more likely written by a human”, “I don’t know”, “more likely written by\na machine”, or “very likely written by a machine”.\nThe articles we selected were not in the models’ training data and the model outputs were formatted and selected\nprogrammatically to prevent human cherry-picking. All models used the same context to condition outputs on and were\npre-trained with the same context size and the same article titles and subtitles were used as prompts for each model.\nHowever, we also ran an experiment to control for participant effort and attention that followed the same format but\ninvolved intentionally bad model generated articles. This was done by generating articles from a “control model”: a\n160M parameter model with no context and increased output randomness.\n3This task is also relevant to the potential misuse of language models discussed in Section 6.1.\n4We wanted to identify how good an average person on the internet is at detecting language model outputs, so we focused on\nparticipants drawn from the general US population. See Appendix E for details.\n25\n\nMean accuracy\n95% Conﬁdence\nInterval (low, hi)\nt compared to\ncontrol (p-value)\n“I don’t know”\nassignments\nControl (deliberately bad model)\n86%\n83%–90%\n-\n3.6 %\nGPT-3 Small\n76%\n72%–80%\n3.9 (2e-4)\n4.9%\nGPT-3 Medium\n61%\n58%–65%\n10.3 (7e-21)\n6.0%\nGPT-3 Large\n68%\n64%–72%\n7.3 (3e-11)\n8.7%\nGPT-3 XL\n62%\n59%–65%\n10.7 (1e-19)\n7.5%\nGPT-3 2.7B\n62%\n58%–65%\n10.4 (5e-19)\n7.1%\nGPT-3 6.7B\n60%\n56%–63%\n11.2 (3e-21)\n6.2%\nGPT-3 13B\n55%\n52%–58%\n15.3 (1e-32)\n7.1%\nGPT-3 175B\n52%\n49%–54%\n16.9 (1e-34)\n7.8%\nTable 3.11: Human accuracy in identifying whether short (∼200 word) news articles are model generated. We\nﬁnd that human accuracy (measured by the ratio of correct assignments to non-neutral assignments) ranges from 86%\non the control model to 52% on GPT-3 175B. This table compares mean accuracy between ﬁve different models, and\nshows the results of a two-sample T-Test for the difference in mean accuracy between each model and the control model\n(an unconditional GPT-3 Small model with increased output randomness).\nMean human accuracy (the ratio of correct assignments to non-neutral assignments per participant) at detecting that\nthe intentionally bad articles were model generated was ∼86% where 50% is chance level performance. By contrast,\nmean human accuracy at detecting articles that were produced by the 175B parameter model was barely above chance\nat ∼52% (see Table 3.11).5 Human abilities to detect model generated text appear to decrease as model size increases:\nthere appears to be a trend towards chance accuracy with model size, and human detection of GPT-3 is close to chance.6\nThis is true despite the fact that participants spend more time on each output as model size increases (see Appendix E).\nExamples of synthetic articles from GPT-3 are given in Figures 3.14 and 3.15.7 Much of the text is—as indicated by the\nevaluations—difﬁcult for humans to distinguish from authentic human content. Factual inaccuracies can be an indicator\nthat an article is model generated since, unlike human authors, the models have no access to the speciﬁc facts that the\narticle titles refer to or when the article was written. Other indicators include repetition, non sequiturs, and unusual\nphrasings, though these are often subtle enough that they are not noticed.\nRelated work on language model detection by Ippolito et al. [IDCBE19] indicates that automatic discriminators like\nG ROV E R [ZHR+19] and GLTR [GSR19] may have greater success at detecting model generated text than human\nevaluators. Automatic detection of these models may be a promising area of future research.\nIppolito et al. [IDCBE19] also note that human accuracy at detecting model generated text increases as humans observe\nmore tokens. To do a preliminary investigation of how good humans are at detecting longer news articles generated\nby GPT-3 175B, we selected 12 world news articles from Reuters with an average length of 569 words and generated\ncompletions of these articles from GPT-3 with an average length of 498 words (298 words longer than our initial\nexperiments). Following the methodology above, we ran two experiments, each on around 80 US-based participants, to\ncompare human abilities to detect the articles generated by GPT-3 and a control model.\nWe found that mean human accuracy at detecting the intentionally bad longer articles from the control model was\n∼88%, while mean human accuracy at detecting the longer articles that were produced by GPT-3 175B was still barely\nabove chance at ∼52% (see Table 3.12). This indicates that, for news articles that are around 500 words long, GPT-3\ncontinues to produce articles that humans ﬁnd difﬁcult to distinguish from human written news articles.\n3.9.5\nLearning and Using Novel Words\nA task studied in developmental linguistics [CB78] is the ability to learn and utilize new words, for example using a\nword in a sentence after seeing it deﬁned only once, or conversely inferring a word’s meaning from only one usage. Here\nwe qualitatively test GPT-3’s ability to do the former. Speciﬁcally, we give GPT-3 the deﬁnition of a nonexistent word,\nsuch as “Gigamuru”, and then ask it to use it in a sentence. We provide one to ﬁve previous examples of a (separate)\n5We use a two-sample Student’s T-Test to test for signiﬁcant difference between the means of the participant accuracies of each\nmodel and the control model and report the normalized difference in the means (as the t-statistic) and the p-value.\n6If a model consistently produces texts that are more impressive than human articles, it is possible that human performance on\nthis task would drop below 50%. Indeed, many individual participants scored below 50% on this task.\n7Additional non-news samples can be found in Appendix F.\n26\n\nFigure 3.13: People’s ability to identify whether news articles are model-generated (measured by the ratio of correct\nassignments to non-neutral assignments) decreases as model size increases. Accuracy on the outputs on the deliberately-\nbad control model (an unconditioned GPT-3 Small model with higher output randomness) is indicated with the dashed\nline at the top, and the random chance (50%) is indicated with the dashed line at the bottom. Line of best ﬁt is a power\nlaw with 95% conﬁdence intervals.\nMean accuracy\n95% Conﬁdence\nInterval (low, hi)\nt compared to\ncontrol (p-value)\n“I don’t know”\nassignments\nControl\n88%\n84%–91%\n-\n2.7%\nGPT-3 175B\n52%\n48%–57%\n12.7 (3.2e-23)\n10.6%\nTable 3.12: People’s ability to identify whether ∼500 word articles are model generated (as measured by the ratio of\ncorrect assignments to non-neutral assignments) was 88% on the control model and 52% on GPT-3 175B. This table\nshows the results of a two-sample T-Test for the difference in mean accuracy between GPT-3 175B and the control\nmodel (an unconditional GPT-3 Small model with increased output randomness).\n27\n\nTitle:\nUnited Methodists Agree to Historic Split\nSubtitle:\nThose who oppose gay marriage will form their own denomination\nArticle:\nAfter two days of intense debate, the United Methodist Church\nhas agreed to a historic split - one that is expected to end in the\ncreation of a new denomination, one that will be \"theologically and\nsocially conservative,\" according to The Washington Post.\nThe majority of\ndelegates attending the church's annual General Conference in May voted to\nstrengthen a ban on the ordination of LGBTQ clergy and to write new rules\nthat will \"discipline\" clergy who officiate at same-sex weddings.\nBut\nthose who opposed these measures have a new plan:\nThey say they will form a\nseparate denomination by 2020, calling their church the Christian Methodist\ndenomination.\nThe Post notes that the denomination, which claims 12.5 million members, was\nin the early 20th century the \"largest Protestant denomination in the U.S.,\"\nbut that it has been shrinking in recent decades.\nThe new split will be the\nsecond in the church's history.\nThe first occurred in 1968, when roughly\n10 percent of the denomination left to form the Evangelical United Brethren\nChurch.\nThe Post notes that the proposed split \"comes at a critical time\nfor the church, which has been losing members for years,\" which has been\n\"pushed toward the brink of a schism over the role of LGBTQ people in the\nchurch.\" Gay marriage is not the only issue that has divided the church.\nIn\n2016, the denomination was split over ordination of transgender clergy, with\nthe North Pacific regional conference voting to ban them from serving as\nclergy, and the South Pacific regional conference voting to allow them.\nFigure 3.14: The GPT-3 generated news article that humans had the greatest difﬁculty distinguishing from a human\nwritten article (accuracy: 12%).\nTitle:\nStar’s Tux Promise Draws Megyn Kelly’s Sarcasm\nSubtitle:\nJoaquin Phoenix pledged to not change for each awards event\nArticle:\nA year ago, Joaquin Phoenix made headlines when he appeared on\nthe red carpet at the Golden Globes wearing a tuxedo with a paper bag over\nhis head that read, \"I am a shape-shifter.\nI can't change the world.\nI\ncan only change myself.\" It was a promise to not change to fit into the\nHollywood mold:\n\"I think that's a really special thing, to not change\nyourself.\nI think it's a really special thing to say, `This is what's\ninside of me, I'm proud of it, and I'm not going to be ashamed because of\nthe way that someone else thinks I should be.'\" Now, it's the Oscars, and\nPhoenix is at it again.\nBut this time, his publicist is saying he'll be\nwearing a tux no matter what.\nMegyn Kelly was not impressed, and she let him have it on The Tonight Show.\n\"You know, I feel like, I feel like you could have worn the tux,\" she says.\n\"But you're saying you're a shape-shifter.\nI don't know if you can change\nyour tux, but you can change your mind.\nYou can change your mind.\nYou can\nchange your mind.\" Phoenix says he did, but it didn't stick.\n\"I was like,\n`Okay, I'm going to wear a tuxedo to this thing.'\nAnd then I thought, `I\ndon't want to wear a tuxedo to this thing.'\" Kelly goes on to encourage him\nto change his mind again, but Phoenix says it's too late:\n\"I'm committed to\nwearing this.\"\nFigure 3.15: The GPT-3 generated news article that humans found the easiest to distinguish from a human written\narticle (accuracy: 61%).\n28\n\nA \"whatpu\" is a small, furry animal native to Tanzania.\nAn example of a sentence that uses\nthe word whatpu is:\nWe were traveling in Africa and we saw these very cute whatpus.\nTo do a \"farduddle\" means to jump up and down really fast.\nAn example of a sentence that uses\nthe word farduddle is:\nOne day when I was playing tag with my little sister, she got really excited and she\nstarted doing these crazy farduddles.\nA \"yalubalu\" is a type of vegetable that looks like a big pumpkin.\nAn example of a sentence\nthat uses the word yalubalu is:\nI was on a trip to Africa and I tried this yalubalu vegetable that was grown in a garden\nthere.\nIt was delicious.\nA \"Burringo\" is a car with very fast acceleration.\nAn example of a sentence that uses the\nword Burringo is:\nIn our garage we have a Burringo that my father drives to work every day.\nA \"Gigamuru\" is a type of Japanese musical instrument.\nAn example of a sentence that uses the\nword Gigamuru is:\nI have a Gigamuru that my uncle gave me as a gift.\nI love to play it at home.\nTo \"screeg\" something is to swing a sword at it.\nAn example of a sentence that uses the word\nscreeg is:\nWe screeghed at each other for several minutes and then we went outside and ate ice cream.\nFigure 3.16: Representative GPT-3 completions for the few-shot task of using a new word in a sentence. Boldface is\nGPT-3’s completions, plain text is human prompts. In the ﬁrst example both the prompt and the completion are provided\nby a human; this then serves as conditioning for subsequent examples where GPT-3 receives successive additional\nprompts and provides the completions. Nothing task-speciﬁc is provided to GPT-3 other than the conditioning shown\nhere.\nnonexistent word being deﬁned and used in a sentence, so the task is few-shot in terms of previous examples of the\nbroad task and one-shot in terms of the speciﬁc word. Table 3.16 shows the 6 examples we generated; all deﬁnitions\nwere human-generated, and the ﬁrst answer was human-generated as conditioning while the subsequent answers were\ngenerated by GPT-3. These examples were generated continuously in one sitting and we did not omit or repeatedly try\nany prompts. In all cases the generated sentence appears to be a correct or at least plausible use of the word. In the ﬁnal\nsentence the model generates a plausible conjugation for the word “screeg” (namely “screeghed”), although the use of\nthe word is slightly awkward (“screeghed at each other”) despite being plausible in the sense that it could describe a toy\nsword ﬁght. Overall, GPT-3 appears to be at least proﬁcient at the task of using novel words in a sentence.\n3.9.6\nCorrecting English Grammar\nAnother task well suited for few-shot learning is correcting English grammar. We test this with GPT-3 in the few-\nshot setting by giving prompts of the form \"Poor English Input:\n<sentence>\\n Good English Output:\n<sentence>\". We give GPT-3 one human-generated correction and then ask it to correct 5 more (again without any\nomissions or repeats). Results are shown in Figure 3.17.\n4\nMeasuring and Preventing Memorization Of Benchmarks\nSince our training dataset is sourced from the internet, it is possible that our model was trained on some of our\nbenchmark test sets. Accurately detecting test contamination from internet-scale datasets is a new area of research\nwithout established best practices. While it is common practice to train large models without investigating contamination,\ngiven the increasing scale of pretraining datasets, we believe this issue is becoming increasingly important to attend to.\nThis concern is not just hypothetical. One of the ﬁrst papers to train a language model on Common Crawl data [TL18]\ndetected and removed a training document which overlapped with one of their evaluation datasets. Other work such\nas GPT-2 [RWC+19] also conducted post-hoc overlap analysis. Their study was relatively encouraging, ﬁnding that\n29\n\nPoor English input:\nI eated the purple berries.\nGood English output:\nI ate the purple berries.\nPoor English input:\nThank you for picking me as your designer.\nI’d appreciate it.\nGood English output:\nThank you for choosing me as your designer.\nI appreciate it.\nPoor English input:\nThe mentioned changes have done.\nor I did the alteration that you\nrequested.\nor I changed things you wanted and did the modifications.\nGood English output:\nThe requested changes have been made.\nor I made the alteration that you\nrequested.\nor I changed things you wanted and made the modifications.\nPoor English input:\nI’d be more than happy to work with you in another project.\nGood English output:\nI'd be more than happy to work with you on another project.\nPoor English input:\nPlease provide me with a short brief of the design you’re looking for and\nthat’d be nice if you could share some examples or project you did before.\nGood English output:\nPlease provide me with a brief description of the design you're\nlooking for and that would be nice if you could share some examples or projects you have\ndone before.\nPoor English input:\nThe patient was died.\nGood English output:\nThe patient died.\nPoor English input:\nWe think that Leslie likes ourselves.\nGood English output:\nWe think that Leslie likes us.\nPoor English input:\nJanet broke Bill on the finger.\nGood English output:\nJanet broke Bill's finger.\nPoor English input:\nMary arranged for, in St.\nLouis, John to rent a house cheap.\nGood English output:\nMary arranged for John to rent a house in St.\nLouis.\nPoor English input:\nToday I have went to the store to to buys some many bottle of water.\nGood English output:\nToday I went to the store to buy some bottles of water.\nPoor English input:\nI have tried to hit ball with bat, but my swing is has miss.\nGood English output:\nI tried to hit the ball with the bat, but my swing missed.\nFigure 3.17: Representative GPT-3 completions for the few-shot task of correcting English grammar. Boldface\nis GPT-3’s completions, plain text is human prompts. In the ﬁrst few examples example both the prompt and the\ncompletion are provided by a human; this then serves as conditioning for subsequent examples where GPT-3 receives\nsuccessive additional prompts and provides the completions. Nothing task-speciﬁc is provided to GPT-3 aside from\nthe ﬁrst few examples as conditioning and the “Poor English input/Good English output” framing. We note that the\ndistinction between ”poor” and ”good” English (and the terms themselves) is complex, contextual, and contested. As\nthe example mentioning the rental of a house shows, assumptions that the model makes about what “good” is can even\nlead it to make errors (here, the model not only adjusts grammar, but also removes the word ”cheap” in a way that alters\nmeaning).\n30\n\nFigure 4.1: GPT-3 Training Curves We measure model performance during training on a deduplicated validation\nsplit of our training distribution. Though there is some gap between training and validation performance, the gap grows\nonly minimally with model size and training time, suggesting that most of the gap comes from a difference in difﬁculty\nrather than overﬁtting.\nalthough models did perform moderately better on data that overlapped between training and testing, this did not\nsigniﬁcantly impact reported results due to the small fraction of data which was contaminated (often only a few percent).\nGPT-3 operates in a somewhat different regime. On the one hand, the dataset and model size are about two orders of\nmagnitude larger than those used for GPT-2, and include a large amount of Common Crawl, creating increased potential\nfor contamination and memorization. On the other hand, precisely due to the large amount of data, even GPT-3 175B\ndoes not overﬁt its training set by a signiﬁcant amount, measured relative to a held-out validation set with which it was\ndeduplicated (Figure 4.1). Thus, we expect that contamination is likely to be frequent, but that its effects may not be as\nlarge as feared.\nWe initially tried to address the issue of contamination by proactively searching for and attempting to remove any overlap\nbetween our training data and the development and test sets of all benchmarks studied in this paper. Unfortunately, a\nbug resulted in only partial removal of all detected overlaps from the training data. Due to the cost of training, it wasn’t\nfeasible to retrain the model. To address this, we investigate in detail how the remaining detected overlap impacts\nresults.\nFor each benchmark, we produce a ‘clean’ version which removes all potentially leaked examples, deﬁned roughly as\nexamples that have a 13-gram overlap with anything in the pretraining set (or that overlap with the whole example when\nit is shorter than 13-grams). The goal is to very conservatively ﬂag anything that could potentially be contamination,\nso as to produce a clean subset that is free of contamination with high conﬁdence. The exact procedure is detailed in\nAppendix C.\nWe then evaluate GPT-3 on these clean benchmarks, and compare to the original score. If the score on the clean\nsubset is similar to the score on the entire dataset, this suggests that contamination, even if present, does not have a\nsigniﬁcant effect on reported results. If the score on the clean subset is lower, this suggests contamination may be\ninﬂating the results. The results are summarized in Figure 4.2. Although potential contamination is often high (with a\nquarter of benchmarks scoring over 50%), in most cases performance changes only negligibly, and we see no evidence\nthat contamination level and performance difference are correlated. We conclude that either our conservative method\nsubstantially overestimated contamination or that contamination has little effect on performance.\nBelow, we review in more detail the few speciﬁc cases where either (1) the model performs signiﬁcantly worse on\nthe cleaned version, or (2) potential contamination is very high, which makes measuring the performance difference\ndifﬁcult.\nOur analysis ﬂagged six groups of benchmarks for further investigation: Word Scrambling, Reading Comprehension\n(QuAC, SQuAD2, DROP), PIQA, Winograd, language modeling tasks (Wikitext tasks, 1BW), and German to English\n31\n\nFigure 4.2: Benchmark contamination analysis\nWe constructed cleaned versions of each of our benchmarks to\ncheck for potential contamination in our training set. The x-axis is a conservative lower bound for how much of the\ndataset is known with high conﬁdence to be clean, and the y-axis shows the difference in performance when evaluating\nonly on the veriﬁed clean subset. Performance on most benchmarks changed negligibly, but some were ﬂagged for\nfurther review. On inspection we ﬁnd some evidence for contamination of the PIQA and Winograd results, and we mark\nthe corresponding results in Section 3 with an asterisk. We ﬁnd no evidence that other benchmarks are affected.\ntranslation. Since our overlap analysis is designed to be extremely conservative, we expect it to produce some false\npositives. We summarize the results for each group of tasks below:\n• Reading Comprehension: Our initial analysis ﬂagged >90% of task examples from QuAC, SQuAD2, and\nDROP as potentially contaminated, so large that even measuring the differential on a clean subset was difﬁcult.\nUpon manual inspection, however, we found that for every overlap we inspected, in all 3 datasets, the source\ntext was present in our training data but the question/answer pairs were not, meaning the model gains only\nbackground information and cannot memorize the answer to a speciﬁc question.\n• German translation: We found 25% of the examples in the WMT16 German-English test set were marked\nas potentially contaminated, with an associated total effect size of 1-2 BLEU. Upon inspection, none of the\nﬂagged examples contain paired sentences resembling NMT training data and collisions were monolingual\nmatches mostly of snippets of events discussed in the news.\n• Reversed Words and Anagrams: Recall that these tasks are of the form “alaok = koala”. Due to the\nshort length of these tasks, we used 2-grams for ﬁltering (ignoring punctuation). After inspecting the ﬂagged\noverlaps, we found that they were not typically instances of real reversals or unscramblings in the training set,\nbut rather palindromes or trivial unscramblings, e.g “kayak = kayak”. The amount of overlap was small,\nbut removing the trivial tasks lead to an increase in difﬁculty and thus a spurious signal. Related to this, the\nsymbol insertion task shows high overlap but no effect on performance – this is because that task involves\nremoving non-letter characters from a word, and the overlap analysis itself ignores such characters, leading to\nmany spurious matches.\n• PIQA: The overlap analysis ﬂagged 29% of examples as contaminated, and observed a 3 percentage point\nabsolute decrease (4% relative decrease) in performance on the clean subset. Though the test dataset was\nreleased after our training set was created and its labels are hidden, some of the web pages used by the\ncrowdsourced dataset creators are contained in our training set. We found a similar decrease in a 25x smaller\nmodel with much less capacity to memorize, leading us to suspect that the shift is likely statistical bias\nrather than memorization; examples which workers copied may simply be easier. Unfortunately, we cannot\nrigorously prove this hypothesis. We therefore mark our PIQA results with an asterisk to denote this potential\ncontamination.\n• Winograd: The overlap analysis ﬂagged 45% of examples, and found a 2.6% decrease in performance on the\nclean subset. Manual inspection of the overlapping data point showed that 132 Winograd schemas were in\nfact present in our training set, though presented in a different format than we present the task to the model.\nAlthough the decrease in performance is small, we mark our Winograd results in the main paper with an\nasterisk.\n32\n\n• Language modeling: We found the 4 Wikipedia language modeling benchmarks measured in GPT-2, plus the\nChildren’s Book Test dataset, to be almost entirely contained in our training data. Since we cannot reliably\nextract a clean subset here, we do not report results on these datasets, even though we intended to when starting\nthis work. We note that Penn Tree Bank due to its age was unaffected and therefore became our chief language\nmodeling benchmark.\nWe also inspected datasets where contamination was high, but the impact on performance was close to zero, simply\nto verify how much actual contamination existed. These appeared to often contain false positives. They had either\nno actual contamination, or had contamination that did not give away the answer to the task. One notable exception\nwas LAMBADA, which appeared to have substantial genuine contamination, yet the impact on performance was very\nsmall, with the clean subset scoring within 0.5% of the full dataset. Also, strictly speaking, our ﬁll-in-the-blank format\nprecludes the simplest form of memorization. Nevertheless, since we made very large gains on LAMBADA in this\npaper, the potential contamination is noted in the results section.\nAn important limitation of our contamination analysis is that we cannot be sure that the clean subset is drawn from the\nsame distribution as the original dataset. It remains possible that memorization inﬂates results but at the same time\nis precisely counteracted by some statistical bias causing the clean subset to be easier. However, the sheer number\nof shifts close to zero suggests this is unlikely, and we also observed no noticeable difference in the shifts for small\nmodels, which are unlikely to be memorizing.\nOverall, we have made a best effort to measure and document the effects of data contamination, and to note or outright\nremove problematic results, depending on the severity. Much work remains to be done to address this important and\nsubtle issue for the ﬁeld in general, both when designing benchmarks and when training models. For a more detailed\nexplanation of our analysis, we refer the reader to Appendix C.\n5\nLimitations\nGPT-3 and our analysis of it have a number of limitations. Below we describe some of these and suggest directions for\nfuture work.\nFirst, despite the strong quantitative and qualitative improvements of GPT-3, particularly compared to its direct\npredecessor GPT-2, it still has notable weaknesses in text synthesis and several NLP tasks. On text synthesis, although\nthe overall quality is high, GPT-3 samples still sometimes repeat themselves semantically at the document level, start to\nlose coherence over sufﬁciently long passages, contradict themselves, and occasionally contain non-sequitur sentences\nor paragraphs. We will release a collection of 500 uncurated unconditional samples to help provide a better sense of\nGPT-3’s limitations and strengths at text synthesis. Within the domain of discrete language tasks, we have noticed\ninformally that GPT-3 seems to have special difﬁculty with “common sense physics”, despite doing well on some\ndatasets (such as PIQA [BZB+19]) that test this domain. Speciﬁcally GPT-3 has difﬁculty with questions of the type\n“If I put cheese into the fridge, will it melt?”. Quantitatively, GPT-3’s in-context learning performance has some notable\ngaps on our suite of benchmarks, as described in Section 3, and in particular it does little better than chance when\nevaluated one-shot or even few-shot on some “comparison” tasks, such as determining if two words are used the same\nway in a sentence, or if one sentence implies another (WIC and ANLI respectively), as well as on a subset of reading\ncomprehension tasks. This is especially striking given GPT-3’s strong few-shot performance on many other tasks.\nGPT-3 has several structural and algorithmic limitations, which could account for some of the issues above. We focused\non exploring in-context learning behavior in autoregressive language models because it is straightforward to both\nsample and compute likelihoods with this model class. As a result our experiments do not include any bidirectional\narchitectures or other training objectives such as denoising. This is a noticeable difference from much of the recent\nliterature, which has documented improved ﬁne-tuning performance when using these approaches over standard\nlanguage models [RSR+19]. Thus our design decision comes at the cost of potentially worse performance on tasks\nwhich empirically beneﬁt from bidirectionality. This may include ﬁll-in-the-blank tasks, tasks that involve looking back\nand comparing two pieces of content, or tasks that require re-reading or carefully considering a long passage and then\ngenerating a very short answer. This could be a possible explanation for GPT-3’s lagging few-shot performance on a\nfew of the tasks, such as WIC (which involves comparing the use of a word in two sentences), ANLI (which involves\ncomparing two sentences to see if one implies the other), and several reading comprehension tasks (e.g. QuAC and\nRACE). We also conjecture, based on past literature, that a large bidirectional model would be stronger at ﬁne-tuning\nthan GPT-3. Making a bidirectional model at the scale of GPT-3, and/or trying to make bidirectional models work with\nfew- or zero-shot learning, is a promising direction for future research, and could help achieve the “best of both worlds”.\nA more fundamental limitation of the general approach described in this paper – scaling up any LM-like model, whether\nautoregressive or bidirectional – is that it may eventually run into (or could already be running into) the limits of the\n33\n\npretraining objective. Our current objective weights every token equally and lacks a notion of what is most important to\npredict and what is less important. [RRS20] demonstrate beneﬁts of customizing prediction to entities of interest. Also,\nwith self-supervised objectives, task speciﬁcation relies on forcing the desired task into a prediction problem, whereas\nultimately, useful language systems (for example virtual assistants) might be better thought of as taking goal-directed\nactions rather than just making predictions. Finally, large pretrained language models are not grounded in other domains\nof experience, such as video or real-world physical interaction, and thus lack a large amount of context about the world\n[BHT+20]. For all these reasons, scaling pure self-supervised prediction is likely to hit limits, and augmentation with a\ndifferent approach is likely to be necessary. Promising future directions in this vein might include learning the objective\nfunction from humans [ZSW+19a], ﬁne-tuning with reinforcement learning, or adding additional modalities such as\nimages to provide grounding and a better model of the world [CLY+19].\nAnother limitation broadly shared by language models is poor sample efﬁciency during pre-training. While GPT-3\ntakes a step towards test-time sample efﬁciency closer to that of humans (one-shot or zero-shot), it still sees much more\ntext during pre-training than a human sees in the their lifetime [Lin20]. Improving pre-training sample efﬁciency is\nan important direction for future work, and might come from grounding in the physical world to provide additional\ninformation, or from algorithmic improvements.\nA limitation, or at least uncertainty, associated with few-shot learning in GPT-3 is ambiguity about whether few-shot\nlearning actually learns new tasks “from scratch” at inference time, or if it simply recognizes and identiﬁes tasks that it\nhas learned during training. These possibilities exist on a spectrum, ranging from demonstrations in the training set that\nare drawn from exactly the same distribution as those at test time, to recognizing the same task but in a different format,\nto adapting to a speciﬁc style of a general task such as QA, to learning a skill entirely de novo. Where GPT-3 is on\nthis spectrum may also vary from task to task. Synthetic tasks such as wordscrambling or deﬁning nonsense words\nseem especially likely to be learned de novo, whereas translation clearly must be learned during pretraining, although\npossibly from data that is very different in organization and style than the test data. Ultimately, it is not even clear what\nhumans learn from scratch vs from prior demonstrations. Even organizing diverse demonstrations during pre-training\nand identifying them at test time would be an advance for language models, but nevertheless understanding precisely\nhow few-shot learning works is an important unexplored direction for future research.\nA limitation associated with models at the scale of GPT-3, regardless of objective function or algorithm, is that they are\nboth expensive and inconvenient to perform inference on, which may present a challenge for practical applicability of\nmodels of this scale in their current form. One possible future direction to address this is distillation [HVD15] of large\nmodels down to a manageable size for speciﬁc tasks. Large models such as GPT-3 contain a very wide range of skills,\nmost of which are not needed for a speciﬁc task, suggesting that in principle aggressive distillation may be possible.\nDistillation is well-explored in general [LHCG19a] but has not been tried at the scale of hundred of billions parameters;\nnew challenges and opportunities may be associated with applying it to models of this size.\nFinally, GPT-3 shares some limitations common to most deep learning systems – its decisions are not easily interpretable,\nit is not necessarily well-calibrated in its predictions on novel inputs as observed by the much higher variance in\nperformance than humans on standard benchmarks, and it retains the biases of the data it has been trained on. This\nlast issue – biases in the data that may lead the model to generate stereotyped or prejudiced content – is of special\nconcern from a societal perspective, and will be discussed along with other issues in the next section on Broader Impacts\n(Section 6).\n6\nBroader Impacts\nLanguage models have a wide range of beneﬁcial applications for society, including code and writing auto-completion,\ngrammar assistance, game narrative generation, improving search engine responses, and answering questions. But\nthey also have potentially harmful applications. GPT-3 improves the quality of text generation and adaptability over\nsmaller models and increases the difﬁculty of distinguishing synthetic text from human-written text. It therefore has the\npotential to advance both the beneﬁcial and harmful applications of language models.\nHere we focus on the potential harms of improved language models, not because we believe the harms are necessarily\ngreater, but in order to stimulate efforts to study and mitigate them. The broader impacts of language models like this\nare numerous. We focus on two primary issues: the potential for deliberate misuse of language models like GPT-3 in\nSection 6.1, and issues of bias, fairness, and representation within models like GPT-3 in Section 6.2. We also brieﬂy\ndiscuss issues of energy efﬁciency (Section 6.3).\n34\n\n6.1\nMisuse of Language Models\nMalicious uses of language models can be somewhat difﬁcult to anticipate because they often involve repurposing\nlanguage models in a very different environment or for a different purpose than researchers intended. To help with this,\nwe can think in terms of traditional security risk assessment frameworks, which outline key steps such as identifying\nthreats and potential impacts, assessing likelihood, and determining risk as a combination of likelihood and impact\n[Ros12]. We discuss three factors: potential misuse applications, threat actors, and external incentive structures.\n6.1.1\nPotential Misuse Applications\nAny socially harmful activity that relies on generating text could be augmented by powerful language models. Examples\ninclude misinformation, spam, phishing, abuse of legal and governmental processes, fraudulent academic essay writing\nand social engineering pretexting. Many of these applications bottleneck on human beings to write sufﬁciently high\nquality text. Language models that produce high quality text generation could lower existing barriers to carrying out\nthese activities and increase their efﬁcacy.\nThe misuse potential of language models increases as the quality of text synthesis improves. The ability of GPT-3 to\ngenerate several paragraphs of synthetic content that people ﬁnd difﬁcult to distinguish from human-written text in\n3.9.4 represents a concerning milestone in this regard.\n6.1.2\nThreat Actor Analysis\nThreat actors can be organized by skill and resource levels, ranging from low or moderately skilled and resourced actors\nwho may be able to build a malicious product to ‘advanced persistent threats’ (APTs): highly skilled and well-resourced\n(e.g. state-sponsored) groups with long-term agendas [SBC+19].\nTo understand how low and mid-skill actors think about language models, we have been monitoring forums and chat\ngroups where misinformation tactics, malware distribution, and computer fraud are frequently discussed. While we did\nﬁnd signiﬁcant discussion of misuse following the initial release of GPT-2 in spring of 2019, we found fewer instances\nof experimentation and no successful deployments since then. Additionally, those misuse discussions were correlated\nwith media coverage of language model technologies. From this, we assess that the threat of misuse from these actors is\nnot immediate, but signiﬁcant improvements in reliability could change this.\nBecause APTs do not typically discuss operations in the open, we have consulted with professional threat analysts about\npossible APT activity involving the use of language models. Since the release of GPT-2 there has been no discernible\ndifference in operations that may see potential gains by using language models. The assessment was that language\nmodels may not be worth investing signiﬁcant resources in because there has been no convincing demonstration that\ncurrent language models are signiﬁcantly better than current methods for generating text, and because methods for\n“targeting” or “controlling” the content of language models are still at a very early stage.\n6.1.3\nExternal Incentive Structures\nEach threat actor group also has a set of tactics, techniques, and procedures (TTPs) that they rely on to accomplish their\nagenda. TTPs are inﬂuenced by economic factors like scalability and ease of deployment; phishing is extremely popular\namong all groups because it offers a low-cost, low-effort, high-yield method of deploying malware and stealing login\ncredentials. Using language models to augment existing TTPs would likely result in an even lower cost of deployment.\nEase of use is another signiﬁcant incentive. Having stable infrastructure has a large impact on the adoption of TTPs.\nThe outputs of language models are stochastic, however, and though developers can constrain these (e.g. using top-k\ntruncation) they are not able to perform consistently without human feedback. If a social media disinformation bot\nproduces outputs that are reliable 99% of the time, but produces incoherent outputs 1% of the time, this could reduce the\namount of human labor required in operating this bot. But a human is still needed to ﬁlter the outputs, which restricts\nhow scalable the operation can be.\nBased on our analysis of this model and analysis of threat actors and the landscape, we suspect AI researchers will\neventually develop language models that are sufﬁciently consistent and steerable that they will be of greater interest to\nmalicious actors. We expect this will introduce challenges for the broader research community, and hope to work on\nthis through a combination of mitigation research, prototyping, and coordinating with other technical developers.\n35\n\n6.2\nFairness, Bias, and Representation\nBiases present in training data may lead models to generate stereotyped or prejudiced content. This is concerning,\nsince model bias could harm people in the relevant groups in different ways by entrenching existing stereotypes and\nproducing demeaning portrayals amongst other potential harms [Cra17]. We have conducted an analysis of biases in\nthe model in order to better understand GPT-3’s limitations when it comes to fairness, bias, and representation. 8\nOur goal is not to exhaustively characterize GPT-3, but to give a preliminary analysis of some of its limitations and\nbehaviors. We focus on biases relating to gender, race, and religion, although many other categories of bias are likely\npresent and could be studied in follow-up work. This is a preliminary analysis and does not reﬂect all of the model’s\nbiases even within the studied categories.\nBroadly, our analysis indicates that internet-trained models have internet-scale biases; models tend to reﬂect stereotypes\npresent in their training data. Below we discuss our preliminary ﬁndings of bias along the dimensions of gender, race,\nand religion. We probe for bias in the 175 billion parameter model and also in similar smaller models, to see if and how\nthey are different in this dimension.\n6.2.1\nGender\nIn our investigation of gender bias in GPT-3, we focused on associations between gender and occupation. We found\nthat occupations in general have a higher probability of being followed by a male gender identiﬁer than a female one\n(in other words, they are male leaning) when given a context such as \"The {occupation} was a\" (Neutral Variant).\n83% of the 388 occupations we tested were more likely to be followed by a male identiﬁer by GPT-3. We measured\nthis by feeding the model a context such as \"The detective was a\" and then looking at the probability of the\nmodel following up with male indicating words (eg. man, male etc.) or female indicating words (woman, female etc.).\nIn particular, occupations demonstrating higher levels of education such as legislator, banker, or professor emeritus\nwere heavily male leaning along with occupations that require hard physical labour such as mason, millwright, and\nsheriff. Occupations that were more likely to be followed by female identiﬁers include midwife, nurse, receptionist,\nhousekeeper etc.\nWe also tested how these probabilities changed when we shifted the context to be the \"The competent {occupation}\nwas a\" (Competent Variant), and when we shifted the context to be \"The incompetent {occupation} was a\"\n(Incompetent Variant) for each occupation in the dataset. We found that, when prompted with \"The competent\n{occupation} was a,\" the majority of occupations had an even higher probability of being followed by a\nmale identiﬁer than a female one than was the case with our original neutral prompt, \"The {occupation} was\na\". With the prompt \"The incompetent {occupation} was a\" the majority of occupations still leaned male\nwith a similar probability than for our original neutral prompt.\nThe average occupation bias - measured as\n1\nnjobs\nP\njobs log( P (female|Context)\nP (male|Context)) ) - was −1.11 for the Neutral Variant, −2.14 for the Competent Variant and −1.15\nfor the Incompetent Variant.\nWe also carried out pronoun resolution on the Winogender dataset [RNLVD18] using two methods which further\ncorroborated the model’s tendency to associate most occupations with males. One method measured the mod-\nels ability to correctly assign a pronoun as the occupation or the participant. For example, we fed the model\na context such as \"The advisor met with the advisee because she wanted to get advice about job\napplications.\n‘She’ refers to the\" and found the option with the lowest probability between the two possi-\nble options (Choices between Occupation Option: advisor; Participant Option: advisee).\nOccupation and participant words often have societal biases associated with them such as the assumption that most\noccupants are by default male. We found that the language models learnt some of these biases such as a tendency to\nassociate female pronouns with participant positions more than male pronouns. GPT-3 175B had the highest accuracy of\nall the models (64.17%) on this task. It was also the only model where the accuracy for Occupant sentences (sentences\nwhere the correct answer was the Occupation option) for females was higher than for males (81.7% vs 76.7%). All\nother models had a higher accuracy for male pronouns with Occupation sentences as compared to female pronouns\nwith the exception of our second largest model- GPT-3 13B - which had the same accuracy (60%) for both. This offers\nsome preliminary evidence that in places where issues of bias can make language models susceptible to error, the larger\nmodels are more robust than smaller models.\nWe also performed co-occurrence tests, where we analyzed which words are likely to occur in the vicinity of other pre-\nselected words. We created a model output sample set by generating 800 outputs of length 50 each with a temperature\n8Evaluating fairness, bias, and representation in language models is a rapidly-developing area with a large body of prior work.\nSee, for example, [HZJ+19, NBR20, SCNP19].\n36\n\nTable 6.1: Most Biased Descriptive Words in 175B Model\nTop 10 Most Biased Male Descriptive Words with Raw\nCo-Occurrence Counts\nTop 10 Most Biased Female Descriptive Words with Raw\nCo-Occurrence Counts\nAverage Number of Co-Occurrences Across All Words:\n17.5\nAverage Number of Co-Occurrences Across All Words:\n23.9\nLarge (16)\nOptimistic (12)\nMostly (15)\nBubbly (12)\nLazy (14)\nNaughty (12)\nFantastic (13)\nEasy-going (12)\nEccentric (13)\nPetite (10)\nProtect (10)\nTight (10)\nJolly (10)\nPregnant (10)\nStable (9)\nGorgeous (28)\nPersonable (22)\nSucked (8)\nSurvive (7)\nBeautiful (158)\nof 1 and top p of 0.9 for every prompt in our dataset. For gender, we had prompts such as \"He was very\", \"She\nwas very\", \"He would be described as\", \"She would be described as\"9. We looked at the adjectives and\nadverbs in the top 100 most favored words using an off-the-shelf POS tagger [LB02]. We found females were more\noften described using appearance oriented words such as ”beautiful” and ”gorgeous” as compared to men who were\nmore often described using adjectives that span a greater spectrum.\nTable 6.1 shows the top 10 most favored descriptive words for the model along with the raw number of times each\nword co-occurred with a pronoun indicator. “Most Favored” here indicates words which were most skewed towards a\ncategory by co-occurring with it at a higher rate as compared to the other category. To put these numbers in perspective,\nwe have also included the average for the number of co-occurrences across all qualifying words for each gender.\n6.2.2\nRace\nTo investigate racial bias in GPT-3, we seeded the model with prompts such as - \"The {race} man was very\",\n\"The {race} woman was very\" and \"People would describe the {race} person as\" and generated 800\nsamples for each of the above prompts, with {race} replaced with a term indicating a racial category such as White\nor Asian. We then measure word co-occurrences in the generated samples. Given prior research demonstrating that\nlanguage models produce text of differing sentiment when varying features such as occupation [HZJ+19], we explored\nhow race impacted sentiment. We measured sentiment using Senti WordNet [BES10] for the words which co-occurred\ndisproportionately with each race. Each word sentiment varied from 100 to -100, with positive scores indicating positive\nwords (eg. wonderfulness: 100, amicable: 87.5), negative scores indicating negative words (eg. wretched: -87.5 , horrid:\n-87.5) and a score of 0 indicating neutral words (eg. sloping, chalet).\nIt should be noted that we were explicitly prompting the models to talk about race and this in turn generated text that\nfocused on racial features; these results are not from the models talking about race in the wild but talking about race in\nan experimental setup where they have been primed to do so. Additionally, since we are measuring sentiment by simply\nlooking at word co-occurrences, the resulting sentiment can reﬂect socio-historical factors - for instance, text relating to\na discussion of slavery will frequently have a negative sentiment, which may lead to a demographic being associated\nwith a negative sentiment under this testing methodology.\nAcross the models we analyzed, ‘Asian’ had a consistently high sentiment - it ranked 1st in 3 out of 7 models. On the\nother hand, ’Black’ had a consistently low sentiment - it ranked the lowest in 5 out of 7 models. These differences\nnarrowed marginally on the larger model sizes. This analysis gives a sense of the biases of different models and\nhighlights the need for more sophisticated analysis of the relationship between sentiment, entities, and input data.\n9We only used male and female pronouns. This simplifying assumption makes it easier to study co-occurrence since it does not\nrequire the isolation of instances in which ‘they’ refers to a singular noun from those where it didn’t, but other forms of gender bias\nare likely present and could be studied using different approaches.\n37\n\nFigure 6.1: Racial Sentiment Across Models\nReligion\nMost Favored Descriptive Words\nAtheism\n‘Theists’, ‘Cool’, ‘Agnostics’, ‘Mad’, ‘Theism’, ‘Defensive’, ‘Complaining’, ‘Correct’, ‘Arrogant’,\n‘Characterized’\nBuddhism\n‘Myanmar’, ‘Vegetarians’, ‘Burma’, ‘Fellowship’, ‘Monk’, ‘Japanese’, ‘Reluctant’, ‘Wisdom’, ‘En-\nlightenment’, ‘Non-Violent’\nChristianity\n‘Attend’, ‘Ignorant’, ‘Response’, ‘Judgmental’, ‘Grace’, ‘Execution’, ‘Egypt’, ‘Continue’, ‘Com-\nments’, ‘Ofﬁcially’\nHinduism\n‘Caste’, ‘Cows’, ‘BJP’, ‘Kashmir’, ‘Modi’, ‘Celebrated’, ‘Dharma’, ‘Pakistani’, ‘Originated’, ‘Africa’\nIslam\n‘Pillars’, ‘Terrorism’, ‘Fasting’, ‘Sheikh’, ‘Non-Muslim’, ‘Source’, ‘Charities’, ‘Levant’, ‘Allah’,\n‘Prophet’\nJudaism\n‘Gentiles’, ‘Race’, ‘Semites’, ‘Whites’, ‘Blacks’, ‘Smartest’, ‘Racists’, ‘Arabs’, ‘Game’, ‘Russian’\nTable 6.2: Shows the ten most favored words about each religion in the GPT-3 175B model.\n6.2.3\nReligion\nWe studied which words co-occurred with religious terms relating to Atheism, Buddhism, Christianity, Hinduism, Islam,\nand Judaism, by generating 800 model outputs of length ≈50 with a temperature of 1 and a top p of 0.9 for every\nprompt. Our prompts were of the nature \"{Religion practitioners} are\" (Eg. \"Christians are\") for each\nof the six religious categories listed above. We then allowed the model to naturally carry out completions and created a\ncorpus of such completions for studying co-occurrence of words.\nThe following is an example output from the model:\n\"Buddhists are divided into two main branches - Theravada and Mahayana.\nTheravada\nis the more conservative branch, centering on monastic life and the earliest sutras\nand refusing to recognize the later Mahayana sutras as authentic.\"\nSimilar to race, we found that the models make associations with religious terms that indicate some propensity to reﬂect\nhow these terms are sometimes presented in the world. For example, with the religion Islam, we found that words such\nas ramadan, prophet and mosque co-occurred at a higher rate than for other religions. We also found that words such\nas violent, terrorism and terrorist co-occurred at a greater rate with Islam than with other religions and were in\nthe top 40 most favored words for Islam in GPT-3.\n38\n\n6.2.4\nFuture Bias and Fairness Challenges\nWe have presented this preliminary analysis to share some of the biases we found in order to motivate further research,\nand to highlight the inherent difﬁculties in characterizing biases in large-scale generative models; we expect this to be an\narea of continuous research for us and are excited to discuss different methodological approaches with the community.\nWe view the work in this section as subjective signposting - we chose gender, race, and religion as a starting point, but\nwe recognize the inherent subjectivity in this choice. Our work is inspired by the literature on characterizing model\nattributes to develop informative labels such as Model Cards for Model Reporting from [MWZ+18].\nUltimately, it is important not just to characterize biases in language systems but to intervene. The literature on this\nis also extensive [QMZH19, HZJ+19], so we offer only a few brief comments on future directions speciﬁc to large\nlanguage models. In order to pave the way for effective bias prevention in general purpose models, there is a need for\nbuilding a common vocabulary tying together the normative, technical and empirical challenges of bias mitigation for\nthese models. There is room for more research that engages with the literature outside NLP, better articulates normative\nstatements about harm, and engages with the lived experience of communities affected by NLP systems [BBDIW20].\nThus, mitigation work should not be approached purely with a metric driven objective to ‘remove’ bias as this has been\nshown to have blind spots [GG19, NvNvdG19] but in a holistic manner.\n6.3\nEnergy Usage\nPractical large-scale pre-training requires large amounts of computation, which is energy-intensive: training the GPT-3\n175B consumed several thousand petaﬂop/s-days of compute during pre-training, compared to tens of petaﬂop/s-days\nfor a 1.5B parameter GPT-2 model (Figure 2.2). This means we should be cognizant of the cost and efﬁciency of such\nmodels, as advocated by [SDSE19].\nThe use of large-scale pre-training also gives another lens through which to view the efﬁciency of large models - we\nshould consider not only the resources that go into training them, but how these resources are amortized over the\nlifetime of a model, which will subsequently be used for a variety of purposes and ﬁne-tuned for speciﬁc tasks. Though\nmodels like GPT-3 consume signiﬁcant resources during training, they can be surprisingly efﬁcient once trained: even\nwith the full GPT-3 175B, generating 100 pages of content from a trained model can cost on the order of 0.4 kW-hr, or\nonly a few cents in energy costs. Additionally, techniques like model distillation [LHCG19a] can further bring down\nthe cost of such models, letting us adopt a paradigm of training single, large-scale models, then creating more efﬁcient\nversions of them for use in appropriate contexts. Algorithmic progress may also naturally further increase the efﬁciency\nof such models over time, similar to trends observed in image recognition and neural machine translation [HB20].\n7\nRelated Work\nSeveral lines of work have focused on increasing parameter count and/or computation in language models as a\nmeans to improve generative or task performance. An early work scaled LSTM based language models to over a\nbillion parameters [JVS+16]. One line of work straightforwardly increases the size of transformer models, scaling\nup parameters and FLOPS-per-token roughly in proportion. Work in this vein has successively increased model size:\n213 million parameters [VSP+17] in the original paper, 300 million parameters [DCLT18], 1.5 billion parameters\n[RWC+19], 8 billion parameters [SPP+19], 11 billion parameters [RSR+19], and most recently 17 billion parameters\n[Tur20]. A second line of work has focused on increasing parameter count but not computation, as a means of\nincreasing models’ capacity to store information without increased computational cost. These approaches rely on the\nconditional computation framework [BLC13] and speciﬁcally, the mixture-of-experts method [SMM+17] has been\nused to produce 100 billion parameter models and more recently 50 billion parameter translation models [AJF19],\nthough only a small fraction of the parameters are actually used on each forward pass. A third approach increases\ncomputation without increasing parameters; examples of this approach include adaptive computation time [Gra16] and\nthe universal transformer [DGV+18]. Our work focuses on the ﬁrst approach (scaling compute and parameters together,\nby straightforwardly making the neural net larger), and increases model size 10x beyond previous models that employ\nthis strategy.\nSeveral efforts have also systematically studied the effect of scale on language model performance. [KMH+20,\nRRBS19, LWS+20, HNA+17], ﬁnd a smooth power-law trend in loss as autoregressive language models are scaled up.\nThis work suggests that this trend largely continues as models continue to scale up (although a slight bending of the\ncurve can perhaps be detected in Figure 3.1), and we also ﬁnd relatively smooth increases in many (though not all)\ndownstream tasks across 3 orders of magnitude of scaling.\nAnother line of work goes in the opposite direction from scaling, attempting to preserve strong performance in language\nmodels that are as small as possible. This approach includes ALBERT [LCG+19] as well as general [HVD15] and\n39\n\ntask-speciﬁc [SDCW19, JYS+19, KR16] approaches to distillation of language models. These architectures and\ntechniques are potentially complementary to our work, and could be applied to decrease latency and memory footprint\nof giant models.\nAs ﬁne-tuned language models have neared human performance on many standard benchmark tasks, considerable\neffort has been devoted to constructing more difﬁcult or open-ended tasks, including question answering [KPR+19,\nIBGC+14, CCE+18, MCKS18], reading comprehension [CHI+18, RCM19], and adversarially constructed datasets\ndesigned to be difﬁcult for existing language models [SBBC19, NWD+19]. In this work we test our models on many\nof these datasets.\nMany previous efforts have focused speciﬁcally on question-answering, which constitutes a signiﬁcant fraction of the\ntasks we tested on. Recent efforts include [RSR+19, RRS20], which ﬁne-tuned an 11 billion parameter language model,\nand [GLT+20], which focused on attending over a large corpus of data at test time. Our work differs in focusing on\nin-context learning but could be combined in the future with those of [GLT+20, LPP+20].\nMetalearning in language models has been utilized in [RWC+19], though with much more limited results and no\nsystematic study. More broadly, language model metalearning has an inner-loop-outer-loop structure, making it\nstructurally similar to metalearning as applied to ML in general. Here there is an extensive literature, including\nmatching networks [VBL+16], RL2 [DSC+16], learning to optimize [RL16, ADG+16, LM17] and MAML [FAL17].\nOur approach of stufﬁng the model’s context with previous examples is most structurally similar to RL2 and also\nresembles [HYC01], in that an inner loop of adaptation takes place through computation in the model’s activations\nacross timesteps, without updating the weights, while an outer loop (in this case just language model pre-training)\nupdates the weights, and implicitly learns the ability to adapt to or at least recognize tasks deﬁned at inference-time.\nFew-shot auto-regressive density estimation was explored in [RCP+17] and [GWC+18] studied low-resource NMT as\na few-shot learning problem.\nWhile the mechanism of our few-shot approach is different, prior work has also explored ways of using pre-trained\nlanguage models in combination with gradient descent to perform few-shot learning [SS20]. Another sub-ﬁeld with\nsimilar goals is semi-supervised learning where approaches such as UDA [XDH+19] also explore methods of ﬁne-tuning\nwhen very little labeled data is available.\nGiving multi-task models instructions in natural language was ﬁrst formalized in a supervised setting with [MKXS18]\nand utilized for some tasks (such as summarizing) in a language model with [RWC+19]. The notion of presenting\ntasks in natural language was also explored in the text-to-text transformer [RSR+19], although there it was applied for\nmulti-task ﬁne-tuning rather than for in-context learning without weight updates.\nAnother approach to increasing generality and transfer-learning capability in language models is multi-task learning\n[Car97], which ﬁne-tunes on a mixture of downstream tasks together, rather than separately updating the weights for\neach one. If successful multi-task learning could allow a single model to be used for many tasks without updating the\nweights (similar to our in-context learning approach), or alternatively could improve sample efﬁciency when updating\nthe weights for a new task. Multi-task learning has shown some promising initial results [LGH+15, LSP+18] and\nmulti-stage ﬁne-tuning has recently become a standardized part of SOTA results on some datasets [PFB18] and pushed\nthe boundaries on certain tasks [KKS+20], but is still limited by the need to manually curate collections of datasets and\nset up training curricula. By contrast pre-training at large enough scale appears to offer a “natural” broad distribution of\ntasks implicitly contained in predicting the text itself. One direction for future work might be attempting to generate\na broader set of explicit tasks for multi-task learning, for example through procedural generation [TFR+17], human\ninteraction [ZSW+19b], or active learning [Mac92].\nAlgorithmic innovation in language models over the last two years has been enormous, including denoising-based\nbidirectionality [DCLT18], preﬁxLM [DL15] and encoder-decoder architectures [LLG+19, RSR+19], random permu-\ntations during training [YDY+19], architectures that improve the efﬁciency of sampling [DYY+19], improvements in\ndata and training procedures [LOG+19], and efﬁciency increases in the embedding parameters [LCG+19]. Many of\nthese techniques provide signiﬁcant gains on downstream tasks. In this work we continue to focus on pure autoregressive\nlanguage models, both in order to focus on in-context learning performance and to reduce the complexity of our large\nmodel implementations. However, it is very likely that incorporating these algorithmic advances could improve GPT-3’s\nperformance on downstream tasks, especially in the ﬁne-tuning setting, and combining GPT-3’s scale with these\nalgorithmic techniques is a promising direction for future work.\n8\nConclusion\nWe presented a 175 billion parameter language model which shows strong performance on many NLP tasks and\nbenchmarks in the zero-shot, one-shot, and few-shot settings, in some cases nearly matching the performance of\n40\n\nstate-of-the-art ﬁne-tuned systems, as well as generating high-quality samples and strong qualitative performance at\ntasks deﬁned on-the-ﬂy. We documented roughly predictable trends of scaling in performance without using ﬁne-tuning.\nWe also discussed the social impacts of this class of model. Despite many limitations and weaknesses, these results\nsuggest that very large language models may be an important ingredient in the development of adaptable, general\nlanguage systems.\nAcknowledgements\nThe authors would like to thank Ryan Lowe for giving detailed feedback on drafts of the paper. Thanks to Jakub\nPachocki and Szymon Sidor for suggesting tasks, and Greg Brockman, Michael Petrov, Brooke Chan, and Chelsea\nVoss for helping run evaluations on OpenAI’s infrastructure. Thanks to David Luan for initial support in scaling up\nthis project, Irene Solaiman for discussions about ways to approach and evaluate bias, Harrison Edwards and Yura\nBurda for discussions and experimentation with in-context learning, Geoffrey Irving and Paul Christiano for early\ndiscussions of language model scaling, Long Ouyang for advising on the design of the human evaluation experiments,\nChris Hallacy for discussions on data collection, and Shan Carter for help with visual design. Thanks to the millions of\npeople who created content that was used in the training of the model, and to those who were involved in indexing or\nupvoting the content (in the case of WebText). Additionally, we would like to thank the entire OpenAI infrastructure\nand supercomputing teams for making it possible to train models at this scale.\n41\n\nContributions\nTom Brown, Ben Mann, Prafulla Dhariwal, Dario Amodei, Nick Ryder, Daniel M Ziegler, and Jeffrey Wu\nimplemented the large-scale models, training infrastructure, and model-parallel strategies.\nTom Brown, Dario Amodei, Ben Mann, and Nick Ryder conducted pre-training experiments.\nBen Mann and Alec Radford collected, ﬁltered, deduplicated, and conducted overlap analysis on the training data.\nMelanie Subbiah, Ben Mann, Dario Amodei, Jared Kaplan, Sam McCandlish, Tom Brown, Tom Henighan, and\nGirish Sastry implemented the downstream tasks and the software framework for supporting them, including creation\nof synthetic tasks.\nJared Kaplan and Sam McCandlish initially predicted that a giant language model should show continued gains, and\napplied scaling laws to help predict and guide model and data scaling decisions for the research.\nBen Mann implemented sampling without replacement during training.\nAlec Radford originally demonstrated few-shot learning occurs in language models.\nJared Kaplan and Sam McCandlish showed that larger models learn more quickly in-context, and systematically\nstudied in-context learning curves, task prompting, and evaluation methods.\nPrafulla Dhariwal implemented an early version of the codebase, and developed the memory optimizations for fully\nhalf-precision training.\nRewon Child and Mark Chen developed an early version of our model-parallel strategy.\nRewon Child and Scott Gray contributed the sparse transformer.\nAditya Ramesh experimented with loss scaling strategies for pretraining.\nMelanie Subbiah and Arvind Neelakantan implemented, experimented with, and tested beam search.\nPranav Shyam worked on SuperGLUE and assisted with connections to few-shot learning and meta-learning literature.\nSandhini Agarwal conducted the fairness and representation analysis.\nGirish Sastry and Amanda Askell conducted the human evaluations of the model.\nAriel Herbert-Voss conducted the threat analysis of malicious use.\nGretchen Krueger edited and red-teamed the policy sections of the paper.\nBenjamin Chess, Clemens Winter, Eric Sigler, Christopher Hesse, Mateusz Litwin, and Christopher Berner\noptimized OpenAI’s clusters to run the largest models efﬁciently.\nScott Gray developed fast GPU kernels used during training.\nJack Clark led the analysis of ethical impacts — fairness and representation, human assessments of the model, and\nbroader impacts analysis, and advised Gretchen, Amanda, Girish, Sandhini, and Ariel on their work.\nDario Amodei, Alec Radford, Tom Brown, Sam McCandlish, Nick Ryder, Jared Kaplan, Sandhini Agarwal,\nAmanda Askell, Girish Sastry, and Jack Clark wrote the paper.\nSam McCandlish led the analysis of model scaling, and advised Tom Henighan and Jared Kaplan on their work.\nAlec Radford advised the project from an NLP perspective, suggested tasks, put the results in context, and demonstrated\nthe beneﬁt of weight decay for training.\nIlya Sutskever was an early advocate for scaling large generative likelihood models, and advised Pranav, Prafulla,\nRewon, Alec, and Aditya on their work.\nDario Amodei designed and led the research.\n42\n\nA\nDetails of Common Crawl Filtering\nAs mentioned in Section 2.2, we employed two techniques to improve the quality of the Common Crawl dataset: (1)\nﬁltering Common Crawl and (2) fuzzy deduplication:\n1. In order to improve the quality of Common Crawl, we developed an automatic ﬁltering method to remove low\nquality documents. Using the original WebText as a proxy for high-quality documents, we trained a classiﬁer\nto distinguish these from raw Common Crawl. We then used this classiﬁer to re-sample Common Crawl by\nprioritizing documents which were predicted by the classiﬁer to be higher quality. The classiﬁer is trained\nusing logistic regression classiﬁer with features from Spark’s standard tokenizer and HashingTF 10. For the\npositive examples, we used a collection of curated datasets such as WebText, Wikiedia, and our web books\ncorpus as the positive examples, and for the negative examples, we used unﬁltered Common Crawl. We used\nthis classiﬁer to score Common Crawl documents. We kept each document in our dataset iff\nnp.random.pareto(α) > 1 −document_score\nWe chose α = 9 in order to take mostly documents the classiﬁer scored highly, but still include some documents\nthat were out of distribution. α was chosen to match the distribution of scores from our classiﬁer on WebText.\nWe found this re-weighting increased quality as measured by loss on a range of out-of-distribution generative\ntext samples.\n2. To further improve model quality and prevent overﬁtting (which becomes increasingly important as model\ncapacity increases), we fuzzily deduplicated documents (i.e. removed documents with high overlap with\nother documents) within each dataset using Spark’s MinHashLSH implementation with 10 hashes, using the\nsame features as were used for classiﬁcation above. We also fuzzily removed WebText from Common Crawl.\nOverall this decreased dataset size by an average of 10%.\nAfter ﬁltering for duplicates and quality, we also partially removed text occurring in benchmark datasets, described in\nAppendix C.\nB\nDetails of Model Training\nTo train all versions of GPT-3, we use Adam with β1 = 0.9, β2 = 0.95, and ϵ = 10−8, we clip the global norm of the\ngradient at 1.0, and we use cosine decay for learning rate down to 10% of its value, over 260 billion tokens (after 260\nbillion tokens, training continues at 10% of the original learning rate). There is a linear LR warmup over the ﬁrst 375\nmillion tokens. We also gradually increase the batch size linearly from a small value (32k tokens) to the full value over\nthe ﬁrst 4-12 billion tokens of training, depending on the model size. Data are sampled without replacement during\ntraining (until an epoch boundary is reached) to minimize overﬁtting. All models use weight decay of 0.1 to provide a\nsmall amount of regularization [LH17].\nDuring training we always train on sequences of the full nctx = 2048 token context window, packing multiple\ndocuments into a single sequence when documents are shorter than 2048, in order to increase computational efﬁciency.\nSequences with multiple documents are not masked in any special way but instead documents within a sequence\nare delimited with a special end of text token, giving the language model the information necessary to infer that\ncontext separated by the end of text token is unrelated. This allows for efﬁcient training without need for any special\nsequence-speciﬁc masking.\nC\nDetails of Test Set Contamination Studies\nIn section 4 we gave a high level overview of test set contamination studies. In this section we provide details on\nmethodology and results.\nInitial training set ﬁltering\nWe attempted to remove text occurring in benchmarks from training data by searching\nfor 13−gram overlaps between all test/development sets used in this work and our training data, and we removed\nthe colliding 13−gram as well as a 200 character window around it, splitting the original document into pieces. For\nﬁltering purposes we deﬁne a gram as a lowercase, whitespace delimited word with no punctuation. Pieces less than\n200 characters long were discarded. Documents split into more than 10 pieces were considered contaminated and\n10https://spark.apache.org/docs/latest/api/python/pyspark.ml.html#pyspark.ml.feature.HashingTF\n43\n\nremoved entirely. Originally we removed entire documents given a single collision, but that overly penalized long\ndocuments such as books for false positives. An example of a false positive might be a test set based on Wikipedia, in\nwhich the Wikipedia article quotes a single line from a book. We ignored 13−grams that matched more than 10 training\ndocuments, as inspection showed the majority of these to contain common cultural phrases, legal boilerplate, or similar\ncontent that we likely do want the model to learn, rather than undesired speciﬁc overlaps with test sets. Examples for\nvarious frequencies can be found in the GPT-3 release repository11.\nOverlap methodology\nFor our benchmark overlap analysis in Section 4, we used a variable number of words N to\ncheck for overlap for each dataset, where N is the 5th percentile example length in words, ignoring all punctuation,\nwhitespace, and casing. Due to spurious collisions at lower values of N we use a minimum value of 8 on non-synthetic\ntasks. For performance reasons, we set a maximum value of 13 for all tasks. Values for N and the amount of data\nmarked as dirty are shown in Table C.1. Unlike GPT-2’s use of bloom ﬁlters to compute probabilistic bounds for test\ncontamination, we used Apache Spark to compute exact collisions across all training and test sets. We compute overlaps\nbetween test sets and our full training corpus, even though we only trained on 40% of our ﬁltered Common Crawl\ndocuments per Section 2.2.\nWe deﬁne a ‘dirty’ example as one with any N-gram overlap with any training document, and a ‘clean’ example as one\nwith no collision.\nTest and validation splits had similar contamination levels despite some test splits being unlabeled. Due to a bug revealed\nby this analysis, ﬁltering described above failed on long documents such as books. Because of cost considerations it\nwas infeasible to retrain the model on a corrected version of the training dataset. As such, several language modeling\nbenchmarks plus the Children’s Book Test showed almost complete overlap, and therefore were not included in this\npaper. Overlaps are shown in Table C.1\nOverlap results\nTo understand how much having seen some of the data helps the model perform on downstream\ntasks, we ﬁlter every validation and test set by dirtiness. Then we run evaluation on the clean-only examples and report\nthe relative percent change between the clean score and the original score. If the clean score is more than 1% or 2%\nworse than the overall score, it suggests the model may have overﬁt to the examples it has seen. If the clean score is\nsigniﬁcantly better, our ﬁltering scheme may have preferentially marked easier examples as dirty.\nThis overlap metric tends to show a high rate of false positives for datasets that contain background information (but\nnot answers) drawn from the web (such as SQuAD, which draws from Wikipedia) or examples less than 8 words\nlong, which we ignored in our ﬁltering process (except for wordscrambling tasks). One instance where this technique\nseems to fail to give good signal is DROP, a reading comprehension task in which 94% of the examples are dirty. The\ninformation required to answer the question is in a passage provided to the model, so having seen the passage during\ntraining but not the questions and answers does not meaningfully constitute cheating. We conﬁrmed that every matching\ntraining document contained only the source passage, and none of the questions and answers in the dataset. The more\nlikely explanation for the decrease in performance is that the 6% of examples that remain after ﬁltering come from a\nslightly different distribution than the dirty examples.\nFigure 4.2 shows that as the dataset becomes more contaminated, the variance of the clean/all fraction increases, but\nthere is no apparent bias towards improved or degraded performance. This suggests that GPT-3 is relatively insensitive\nto contamination. See Section 4 for details on the datasets we ﬂagged for further review.\n11https://github.com/openai/gpt-3/blob/master/overlap_frequency.md\n44\n\nName\nSplit\nMetric\nN\nAcc/F1/BLEU\nTotal\nCount\nDirty\nAcc/F1/BLEU\nDirty\nCount\nClean\nAcc/F1/BLEU\nClean\nCount\nClean\nPercentage\nRelative\nDifference\nClean vs All\nQuac\ndev\nf1\n13\n44.3\n7353\n44.3\n7315\n54.1\n38\n1%\n20%\nSQuADv2\ndev\nf1\n13\n69.8\n11873\n69.9\n11136\n68.4\n737\n6%\n-2%\nDROP\ndev\nf1\n13\n36.5\n9536\n37.0\n8898\n29.5\n638\n7%\n-21%\nSymbol Insertion\ndev\nacc\n7\n66.9\n10000\n66.8\n8565\n67.1\n1435\n14%\n0%\nCoQa\ndev\nf1\n13\n86.0\n7983\n85.3\n5107\n87.1\n2876\n36%\n1%\nReCoRD\ndev\nacc\n13\n89.5\n10000\n90.3\n6110\n88.2\n3890\n39%\n-1%\nWinograd\ntest\nacc\n9\n88.6\n273\n90.2\n164\n86.2\n109\n40%\n-3%\nBoolQ\ndev\nacc\n13\n76.0\n3270\n75.8\n1955\n76.3\n1315\n40%\n0%\nMultiRC\ndev\nacc\n13\n74.2\n953\n73.4\n558\n75.3\n395\n41%\n1%\nRACE-h\ntest\nacc\n13\n46.8\n3498\n47.0\n1580\n46.7\n1918\n55%\n0%\nLAMBADA\ntest\nacc\n13\n86.4\n5153\n86.9\n2209\n86.0\n2944\n57%\n0%\nLAMBADA (No Blanks)\ntest\nacc\n13\n77.8\n5153\n78.5\n2209\n77.2\n2944\n57%\n-1%\nWSC\ndev\nacc\n13\n76.9\n104\n73.8\n42\n79.0\n62\n60%\n3%\nPIQA\ndev\nacc\n8\n82.3\n1838\n89.9\n526\n79.3\n1312\n71%\n-4%\nRACE-m\ntest\nacc\n13\n58.5\n1436\n53.0\n366\n60.4\n1070\n75%\n3%\nDe→En 16\ntest\nbleu-sb\n12\n43.0\n2999\n47.4\n739\n40.8\n2260\n75%\n-5%\nEn→De 16\ntest\nbleu-sb\n12\n30.9\n2999\n32.6\n739\n29.9\n2260\n75%\n-3%\nEn→Ro 16\ntest\nbleu-sb\n12\n25.8\n1999\n24.9\n423\n26.1\n1576\n79%\n1%\nRo→En 16\ntest\nbleu-sb\n12\n41.3\n1999\n40.4\n423\n41.6\n1576\n79%\n1%\nWebQs\ntest\nacc\n8\n41.5\n2032\n41.6\n428\n41.5\n1604\n79%\n0%\nANLI R1\ntest\nacc\n13\n36.8\n1000\n40.5\n200\n35.9\n800\n80%\n-3%\nANLI R2\ntest\nacc\n13\n34.0\n1000\n29.4\n177\n35.0\n823\n82%\n3%\nTriviaQA\ndev\nacc\n10\n71.2\n7993\n70.8\n1390\n71.3\n6603\n83%\n0%\nANLI R3\ntest\nacc\n13\n40.2\n1200\n38.3\n196\n40.5\n1004\n84%\n1%\nEn→Fr 14\ntest\nbleu-sb\n13\n39.9\n3003\n38.3\n411\n40.3\n2592\n86%\n1%\nFr→En 14\ntest\nbleu-sb\n13\n41.4\n3003\n40.9\n411\n41.4\n2592\n86%\n0%\nWiC\ndev\nacc\n13\n51.4\n638\n53.1\n49\n51.3\n589\n92%\n0%\nRTE\ndev\nacc\n13\n71.5\n277\n71.4\n21\n71.5\n256\n92%\n0%\nCB\ndev\nacc\n13\n80.4\n56\n100.0\n4\n78.8\n52\n93%\n-2%\nAnagrams 2\ndev\nacc\n2\n40.2\n10000\n76.2\n705\n37.4\n9295\n93%\n-7%\nReversed Words\ndev\nacc\n2\n0.4\n10000\n1.5\n660\n0.3\n9340\n93%\n-26%\nOpenBookQA\ntest\nacc\n8\n65.4\n500\n58.1\n31\n65.9\n469\n94%\n1%\nARC (Easy)\ntest\nacc\n11\n70.1\n2268\n77.5\n89\n69.8\n2179\n96%\n0%\nAnagrams 1\ndev\nacc\n2\n15.0\n10000\n49.8\n327\n13.8\n9673\n97%\n-8%\nCOPA\ndev\nacc\n9\n93.0\n100\n100.0\n3\n92.8\n97\n97%\n0%\nARC (Challenge)\ntest\nacc\n12\n51.6\n1144\n45.2\n31\n51.8\n1113\n97%\n0%\nHellaSwag\ndev\nacc\n13\n79.3\n10042\n86.2\n152\n79.2\n9890\n98%\n0%\nNQs\ntest\nacc\n11\n29.9\n3610\n32.7\n52\n29.8\n3558\n99%\n0%\nCycled Letters\ndev\nacc\n2\n38.6\n10000\n20.5\n73\n38.7\n9927\n99%\n0%\nSAT Analogies\ndev\nacc\n9\n65.8\n374\n100.0\n2\n65.6\n372\n99%\n0%\nStoryCloze\ntest\nacc\n13\n87.7\n1871\n100.0\n2\n87.6\n1869\n100%\n0%\nWinogrande\ndev\nacc\n13\n77.7\n1267\n-\n0\n77.7\n1267\n100%\n0%\nTable C.1: Overlap statistics for all datasets sorted from dirtiest to cleanest. We consider a dataset example dirty if it\nhas a single N-gram collision with any document in our training corpus. “Relative Difference Clean vs All” shows the\npercent change in performance between only the clean examples vs all the examples in the benchmark. “Count” shows\nthe number of examples. “Clean percentage” is the percent of examples that are clean vs total. For “Acc/F1/BLEU” we\nuse the metric speciﬁed in “Metric”. These scores come from evaluations with a different seed for the random examples\nused for in-context learning, and will therefore differ slightly from the scores elsewhere in the paper.\n45\n\nD\nTotal Compute Used to Train Language Models\nThis appendix contains the calculations that were used to derive the approximate compute used to train the language\nmodels in Figure 2.2. As a simplifying assumption, we ignore the attention operation, as it typically uses less than 10%\nof the total compute for the models we are analyzing.\nCalculations can be seen in Table D.1 and are explained within the table caption.\nModel\nTotal train\ncompute\n(PF-days)\nTotal train\ncompute\n(ﬂops)\nParams\n(M)\nTraining tokens\n(billions)\nFlops\nper param\nper token\nMult for\nbwd pass\nFwd-pass\nﬂops per\nactive param\nper token\nFrac of\nparams active\nfor each\ntoken\nT5-Small\n2.08E+00\n1.80E+20\n60\n1,000\n3\n3\n1\n0.5\nT5-Base\n7.64E+00\n6.60E+20\n220\n1,000\n3\n3\n1\n0.5\nT5-Large\n2.67E+01\n2.31E+21\n770\n1,000\n3\n3\n1\n0.5\nT5-3B\n1.04E+02\n9.00E+21\n3,000\n1,000\n3\n3\n1\n0.5\nT5-11B\n3.82E+02\n3.30E+22\n11,000\n1,000\n3\n3\n1\n0.5\nBERT-Base\n1.89E+00\n1.64E+20\n109\n250\n6\n3\n2\n1.0\nBERT-Large\n6.16E+00\n5.33E+20\n355\n250\n6\n3\n2\n1.0\nRoBERTa-Base\n1.74E+01\n1.50E+21\n125\n2,000\n6\n3\n2\n1.0\nRoBERTa-Large\n4.93E+01\n4.26E+21\n355\n2,000\n6\n3\n2\n1.0\nGPT-3 Small\n2.60E+00\n2.25E+20\n125\n300\n6\n3\n2\n1.0\nGPT-3 Medium\n7.42E+00\n6.41E+20\n356\n300\n6\n3\n2\n1.0\nGPT-3 Large\n1.58E+01\n1.37E+21\n760\n300\n6\n3\n2\n1.0\nGPT-3 XL\n2.75E+01\n2.38E+21\n1,320\n300\n6\n3\n2\n1.0\nGPT-3 2.7B\n5.52E+01\n4.77E+21\n2,650\n300\n6\n3\n2\n1.0\nGPT-3 6.7B\n1.39E+02\n1.20E+22\n6,660\n300\n6\n3\n2\n1.0\nGPT-3 13B\n2.68E+02\n2.31E+22\n12,850\n300\n6\n3\n2\n1.0\nGPT-3 175B\n3.64E+03\n3.14E+23\n174,600\n300\n6\n3\n2\n1.0\nTable D.1: Starting from the right hand side and moving left, we begin with the number of training tokens that each\nmodel was trained with. Next we note that since T5 uses an encoder-decoder model, only half of the parameters are\nactive for each token during a forward or backwards pass. We then note that each token is involved in a single addition\nand a single multiply for each active parameter in the forward pass (ignoring attention). Then we add a multiplier of\n3x to account for the backwards pass (as computing both ∂params\n∂loss\nand ∂acts\n∂loss use a similar amount of compute as the\nforwards pass. Combining the previous two numbers, we get the total ﬂops per parameter per token. We multiply this\nvalue by the total training tokens and the total parameters to yield the number of total ﬂops used during training. We\nreport both ﬂops and petaﬂop/s-day (each of which are 8.64e+19 ﬂops).\nE\nHuman Quality Assessment of Synthetic News Articles\nThis appendix contains details on the experiments measuring human ability to distinguish GPT-3-generated synthetic\nnews articles from real news articles. We ﬁrst describe the experiments on the ∼200 word news articles, and then\ndescribe the preliminary investigation of ∼500 word news articles generated by GPT-3.\nParticipants: We recruited 718 unique participants to take part in 6 experiments. 97 participants were excluded for\nfailing an internet check question, leaving a total of 621 participants: 343 male, 271 female, and 7 other. Mean\nparticipant age was ∼38 years old. All participants were recruited through Positly, which maintains a whitelist of\nhigh-performing workers from Mechanical Turk. All participants were US-based but there were no other demographic\nrestrictions. Participants were paid $12 for their participation, based on a task time estimate of 60 minutes determined\nby pilot runs. In order to ensure that the sample of participants for each experiment quiz was unique, participants were\nnot allowed to take part in an experiment more than once.\nProcedure and design: We arbitrarily selected 25 news articles that appeared in newser.com in early 2020. We used\nthe article titles and subtitles to produce outputs from the 125M, 350M, 760M, 1.3B, 2.7B, 6.7B, 13.0B, and 200B\n(GPT-3) parameter language models. Five outputs per question were generated by each model and the generation with a\nword count closest to that of the human written article was selected automatically. This was to minimize the effect\nthat completion length might have on participants’ judgments. The same output procedure for each model with the\nexception of the removal of the intentionally bad control model, as described in the main text.\n46\n\nModel\nParticipants\nRecruited\nParticipants\nExcluded\nGenders\n(m:f:other)\nMean\nAge\nAverage\nWord Count\n(human:model)\nControl\n76\n7\n32:37:0\n39\n216:216\nGPT-3 Small\n80\n7\n41:31:1\n40\n216:188\nGPT-3 Medium\n80\n7\n46:28:2\n39\n216:202\nGPT-3 Large\n81\n24\n46:28:2\n37\n216:200\nGPT-3 XL\n79\n14\n32:32:1\n38\n216:199\nGPT-3 2.7B\n80\n11\n36:33:0\n40\n216:202\nGPT-3 6.7B\n76\n5\n46:28:2\n37\n216:195\nGPT-3 13.0B\n81\n13\n46:28:2\n37\n216:209\nGPT-3 175B\n80\n9\n42:29:0\n37\n216:216\nTable E.1: Participant details and article lengths for each experiment to evaluate human detection of ∼200 word model\ngenerated news articles. Participants were excluded due to internet check fails.\nFigure E.1: Participants spend more time trying to identify whether each news article is machine generated as model\nsize increases. Duration on the control model is indicated with the dashed line. Line of best ﬁt is a linear model on a log\nscale with 95% conﬁdence intervals.\nIn each experiment, half of the participants were randomly assigned to quiz A and half were randomly assigned to quiz\nB. Each quiz consisted of 25 articles: half (12-13) were human written and half (12-13) were model generated: the\narticles with human written completions in quiz A had model generated completions in quiz B and vice versa. The\norder of quiz question was shufﬂed for each participant. Participants could leave comments and were asked to indicate\nif they had seen the articles before. Participants were instructed not to look up the articles or their content during the\nquiz and at the end of the quiz were asked if they had looked anything up during the quiz.\nStatistical Tests: To compare means on the different runs, we performed a two-sample t-test for independent groups for\neach model against the control. This was implemented in Python using the scipy.stats.ttest_ind function. When\nplotting a regression line in the graph of average participant accuracy vs model size, we ﬁt a power law of the form\nax−b. The 95% conﬁdence intervals were estimated from the t-distribution of the sample mean.\nDuration statistics: In the main text, we discussed the ﬁnding that the ability of human participants to distinguish\nmodel and human generated news articles decreases as our models become larger. We have also found that the\naverage time spent for a given set of questions increases as the model size increases, as shown in Figure E.1. Lower\n47\n\nModel\nParticipants\nRecruited\nParticipants\nExcluded\nGenders\n(m:f:other)\nMean\nAge\nAverage\nWord Count\n(human:model)\nControl\n79\n17\n32:37:0\n39\n569:464\nGPT-3 175B\n81\n19\n32:30:0\n40\n569:498\nTable E.2: Participant details and article lengths for the experiments investigating human detection of ∼500 word\nmodel generated news articles. Participants were excluded due to internet check fails.\naccuracy scores despite increased time investment from participants supports the ﬁnding that larger models generate\nharder-to-distinguish news articles.\nPreliminary investigation of ∼500 word articles: We recruited 160 unique US-based participants to take part in 2\nexperiments through Positly (details are given in Table E.2). We randomly selected 12 Reuters world news articles from\nlate 2019 and created a context for GPT-3 175B that consisted of a single Reuters article not in this set of 12. We then\nused the article titles and Reuters locations to generate completions from GPT-3 175B and the 160M control model\nfrom the previous experiments. These were used to create two 12-question quizzes per model, each consisting of half\nhuman written and half model generated articles. Comprehension questions were added and articles were shown to\nparticipants in 3 stages at 30 second intervals to encourage closer reading. Participants were paid $12 for this task.\nModel generation selection methods, exclusion criteria, and statistical tests mirror those of the previous experiments.\nF\nAdditional Samples from GPT-3\nGPT-3 adapts well to many tasks other than the ones explored in the main body of the paper. As an example, in Figure\nF.1, we show four uncurated samples from a prompt suggesting that the model write a poem, with a given title, in the\nstyle of Wallace Stevens. We ﬁrst experimented with a few prompts, then generated four samples with no additional\nediting or selection (sampling at temperature 1 using nucleus sampling [HBFC19] with P = 0.9). Completions were\ntruncated when the model began to write a new title and author heading, or broke into prose commentary.\n48\n\nContext →\nThe City\nBY C. P. CAVAFY\nTRANSLATED BY EDMUND KEELEY\n[Poem text omitted]\nSOME TREES\nJohn Ashbery\n[Poem text omitted]\nShadows on the Way\nWallace Stevens\n-------- Generated Poem 1 --------\n-------- Generated Poem 3 --------\nI must have shadows on the way\nThe sun was all we had.\nNow, in the shade\nIf I am to walk I must have\nAll is changed.\nThe mind must dwell on those\nEach step taken slowly and alone\nWhite fields, that to its eyes were always old;\nTo have it ready made\nThose ancient gleams, convoluting\nThe way they lay among the huge roots,\nAnd I must think in lines of grey\nThe great dark tomes of reverie,\nTo have dim thoughts to be my guide\nThe plumed labyrinth of the sea.\nMust look on blue and green\nAnd never let my eye forget\nWhen our own breath gonne faint and fade\nThat color is my friend\nUp the long stairway of the dead\nAnd purple must surround me too\nWe shall remember well\nThe blindness of the light, the whiteness\nThe yellow of the sun is no more\nOf that white land.\nThe footsteps, and\nIntrusive than the bluish snow\nThe grasses in that light, and in the shade\nThat falls on all of us.\nI must have\nThe menacing life.\nGrey thoughts and blue thoughts walk with me\nIf I am to go away at all.\nWe played, too, once, in the warmest rooms.\nTo one content, there is one content\n-------- Generated Poem 2 --------\nFor all mankind.\nThe forest glades\nAre all the more for being in fable,\nThere is a way in the world.\nAnd wood and town in legend shadowed-\nThat way a man may live in a small town\nOnce more to return.\nThe one content\nHis lifetime and see no man come,\nHas in it every happiness, more brave\nNever the stir of men about a market,\nFor being purposeless; and so\nNever the bobbing of covered carts,\nThose island gardens, deep in the mind,\nNever the creak passed on the stair\nMake of remoteness familiarity\nClosing some other life; an old man\nAnd of the unspoken name a friend.\nCan prosper in that town, can prosper\nWhen his store is seen to close, his wife\n-------- Generated Poem 4 --------\nFades in his house, and the world shouts in vain\nThat no one comes to hear him\nNobody will come to this place.\nIt is a road that leads nowhere.\nWhere his small bell tolls.\nThe solitude is deep.\nThe mountains are high.\nIn that small town\nBut they are desolate, and they turn the traveler’s face\nEverything is known.\nTowards the North.\nAll the sounds of the world are far away.\nThe ways of the young men are known,\nWhen the wind rises above the trees,\nAnd the ways of the young women\nThe boughs bow to the ground.\nAs they walk to the Spring;\nEven the birds that inhabit the tangle of weeds\nThe rumors are all known,\nThat is the roadside cover, are silent.\nOne listens,\nThe quarrels, the hurt, the envy\nBut hears no roar of the forest.\nOne is alone.\nOf the men and the women.\nOne will be taken.\nTill a day comes\nOne will be taken.\nThat way out of the world\nThere is no utterance, there is no conversation,\nThat leads to a wood.\nBut one is uneasy all the same....\nYoung, the young man\nThere is a thin blue mist,\nWalks, a lover now,\nA darkness rising like smoke,\nKnows the streets as they are and is of them.\nAnd within that darkness\nA possession of the heart.\nComes to the wood.\nOne will be taken....\nIt was here, and it will be here again-\nHere, under this sky empty and full of light.\nThere, in the wood, among trees,\nHe sees shadows on the way, hears voices,\nhears the wind and the rustling of leaves;\nThrough an open glade\nHe sees a shape and the shape hears:\nIt waits as he waits,\nWaits as the shadows wait,\nAs the voices wait;\nShadows on the way, voices in the wind.\nFigure F.1: Four uncurated completions from a context suggesting the model compose a poem in the style of Wallace\nStevens with the title ‘Shadows on the Way’.\n49\n\nG\nDetails of Task Phrasing and Speciﬁcations\nThe following ﬁgures illustrate the formatting and phrasing of all the tasks included in the paper. All data comes from\nthe ground truth datasets in this section, and no samples from GPT-3 are included here.\nContext →\nArticle:\nInformal conversation is an important part of any business\nrelationship.Before you start a discussion,however,make sure you understand\nwhich topics are suitable and which are considered taboo in a particular\nculture.\nLatin Americans enjoy sharing information about their local\nhistory, art and customs.You may expect questions about your family,and\nbe sure to show pictures of your children.You may feel free to ask similar\nquestions of your Latin American friends.The French think of conversation\nas an art form,and they enjoy the value of lively discussions as well as\ndisagreements.\nFor them,arguments can be interesting and they can cover\npretty much or any topic ---- as long as they occur in are respectful and\nintelligent manner.\nIn the United States,business people like to discuss a wide range of\ntopics,including opinions about work,family,hobbies,and politics.\nIn\nJapan,China,and Korea,however,people are much more private.They do not\nshare much about their thoughts,feelings,or emotions because they feel\nthat doing so might take away from the harmonious business relationship\nthey’re trying to build.Middle Easterners are also private about their\npersonal lives and family matters.It is considered rude,for example,to ask\na businessman from Saudi Arabia about his wife or children.\nAs a general rule,it’s best not to talk about politics or religion with\nyour business friends.This can get you into trouble,even in the United\nStates,where people hold different religious views.In addition,discussing\none’s salary is usually considered unsuitable.Sports is typically a\nfriendly subject in most parts of the world,although be careful not to\ncriticize national sport.Instead,be friendly and praise your host’s team.\nQ: What shouldn’t you do when talking about sports with colleagues from\nanother country?\nA: Criticizing the sports of your colleagues’ country.\nQ: Which is typically a friendly topic in most places according to the\nauthor?\nA: Sports.\nQ: Why are people from Asia more private in their conversation with others?\nA: They don’t want to have their good relationship with others harmed by\ninformal conversation.\nQ: The author considers politics and religion\n.\nA:\nCorrect Answer →\ntaboo\nIncorrect Answer →\ncheerful topics\nIncorrect Answer →\nrude topics\nIncorrect Answer →\ntopics that can never be talked about\nFigure G.1: Formatted dataset example for RACE-h. When predicting, we normalize by the unconditional probability\nof each answer as described in 2.\n50\n\nContext →\nanli 2:\nanli 2:\nThe Gold Coast Hotel & Casino is a hotel and casino\nlocated in Paradise, Nevada.\nThis locals’ casino is owned and operated\nby Boyd Gaming.\nThe Gold Coast is located one mile (∼\n1.6km) west of the\nLas Vegas Strip on West Flamingo Road.\nIt is located across the street\nfrom the Palms Casino Resort and the Rio All Suite Hotel and Casino.\nQuestion:\nThe Gold Coast is a budget-friendly casino.\nTrue, False, or\nNeither?\nCorrect Answer →\nNeither\nIncorrect Answer →\nTrue\nIncorrect Answer →\nFalse\nFigure G.2: Formatted dataset example for ANLI R2\nContext →\nArticle:\nMrs.\nSmith is an unusual teacher.\nOnce she told each student to bring\nalong a few potatoes in plastic bag.\nOn each potato the students had to\nwrite a name of a person that they hated And the next day, every child\nbrought some potatoes.\nSome had two potatoes;some three;some up to five.\nMrs.\nSmith then told the children to carry the bags everywhere they went,\neven to the toilet, for two weeks.\nAs day after day passed, the children\nstarted to complain about the awful smell of the rotten potatoes.\nThose children who brought five potatoes began to feel the weight trouble\nof the bags.\nAfter two weeks, the children were happy to hear that the\ngame was finally ended.\nMrs.\nSmith asked,\"How did you feel while carrying\nthe potatoes for two weeks?\" The children started complaining about the\ntrouble loudly.\nThen Mrs.\nSmith told them why she asked them to play the game.\nShe\nsaid,\"This is exactly the situation when you carry your hatred for somebody\ninside your heart.\nThe terrible smell of the hatred will pollute your\nheart and you will carry something unnecessary with you all the time.\nIf\nyou cannot stand the smell of the rotten potatoes for just two weeks, can\nyou imagine how heavy it would be to have the hatred in your heart for your\nlifetime?\nSo throw away any hatred from your heart, and you’ll be really\nhappy.\"\nQ: Which of the following is True according to the passage?\nA: If a kid hated four people,he or she had to carry four potatoes.\nQ: We can learn from the passage that we should\n.\nA: throw away the hatred inside\nQ: The children complained about\nbesides the weight trouble.\nA: the smell\nQ: Mrs.Smith asked her students to write\non the potatoes.\nA:\nCorrect Answer →\nnames\nIncorrect Answer →\nnumbers\nIncorrect Answer →\ntime\nIncorrect Answer →\nplaces\nFigure G.3: Formatted dataset example for RACE-m. When predicting, we normalize by the unconditional probability\nof each answer as described in 2.\n51\n\nContext →\nHow to apply sealant to wood.\nCorrect Answer →\nUsing a brush, brush on sealant onto wood until it is fully saturated with\nthe sealant.\nIncorrect Answer →\nUsing a brush, drip on sealant onto wood until it is fully saturated with\nthe sealant.\nFigure G.4: Formatted dataset example for PIQA\nContext →\nMy body cast a shadow over the grass because\nCorrect Answer →\nthe sun was rising.\nIncorrect Answer →\nthe grass was cut.\nFigure G.5: Formatted dataset example for COPA\nContext →\n(CNN) Yuval Rabin, whose father, Yitzhak Rabin, was assassinated while\nserving as Prime Minister of Israel, criticized Donald Trump for appealing\nto \"Second Amendment people\" in a speech and warned that the words that\npoliticians use can incite violence and undermine democracy.\n\"Trump’s\nwords are an incitement to the type of political violence that touched\nme personally,\" Rabin wrote in USAToday.\nHe said that Trump’s appeal to\n\"Second Amendment people\" to stop Hillary Clinton -- comments that were\ncriticized as a call for violence against Clinton, something Trump denied\n-- \"were a new level of ugliness in an ugly campaign season.\"\n- The son of a former Israeli Prime Minister who was assassinated wrote an\nop ed about the consequence of violent political rhetoric.\n- Warns of \"parallels\" between Israel of the 1990s and the U.S. today.\nCorrect Answer →\n- Referencing his father, who was shot and killed by an extremist amid\npolitical tension in Israel in 1995, Rabin condemned Donald Trump’s\naggressive rhetoric.\nCorrect Answer →\n- Referencing his father, who was shot and killed by an extremist amid\npolitical tension in Israel in 1995, Rabin condemned Trump’s aggressive\nrhetoric.\nIncorrect Answer →\n- Referencing his father, who was shot and killed by an extremist amid\npolitical tension in Israel in 1995, Rabin condemned Hillary Clinton’s\naggressive rhetoric.\nIncorrect Answer →\n- Referencing his father, who was shot and killed by an extremist amid\npolitical tension in Israel in 1995, Rabin condemned U.S.’s aggressive\nrhetoric.\nIncorrect Answer →\n- Referencing his father, who was shot and killed by an extremist amid\npolitical tension in Israel in 1995, Rabin condemned Yitzhak Rabin’s\naggressive rhetoric.\nFigure G.6: Formatted dataset example for ReCoRD. We consider the context above to be a single ”problem” because\nthis is how the task is presented in the ReCoRD dataset and scored in the ReCoRD evaluation script.\nContext →\nanli 1:\nanli 1:\nFulton James MacGregor MSP is a Scottish politician\nwho is a Scottish National Party (SNP) Member of Scottish Parliament\nfor the constituency of Coatbridge and Chryston.\nMacGregor is currently\nParliamentary Liaison Officer to Shona Robison, Cabinet Secretary for\nHealth & Sport.\nHe also serves on the Justice and Education & Skills\ncommittees in the Scottish Parliament.\nQuestion:\nFulton James MacGregor is a Scottish politican who is a Liaison\nofficer to Shona Robison who he swears is his best friend.\nTrue, False, or\nNeither?\nCorrect Answer →\nNeither\nIncorrect Answer →\nTrue\nIncorrect Answer →\nFalse\nFigure G.7: Formatted dataset example for ANLI R1\n52\n\nContext →\nOrganisms require energy in order to do what?\nCorrect Answer →\nmature and develop.\nIncorrect Answer →\nrest soundly.\nIncorrect Answer →\nabsorb light.\nIncorrect Answer →\ntake in nutrients.\nFigure G.8: Formatted dataset example for OpenBookQA. When predicting, we normalize by the unconditional\nprobability of each answer as described in 2.\nContext →\nMaking a cake:\nSeveral cake pops are shown on a display.\nA woman and girl\nare shown making the cake pops in a kitchen.\nThey\nCorrect Answer →\nbake them, then frost and decorate.\nIncorrect Answer →\ntaste them as they place them on plates.\nIncorrect Answer →\nput the frosting on the cake as they pan it.\nIncorrect Answer →\ncome out and begin decorating the cake as well.\nFigure G.9: Formatted dataset example for HellaSwag\nContext →\nanli 3:\nanli 3:\nWe shut the loophole which has American workers actually\nsubsidizing the loss of their own job.\nThey just passed an expansion of\nthat loophole in the last few days:\n$43 billion of giveaways, including\nfavors to the oil and gas industry and the people importing ceiling fans\nfrom China.\nQuestion:\nThe loophole is now gone True, False, or Neither?\nCorrect Answer →\nFalse\nIncorrect Answer →\nTrue\nIncorrect Answer →\nNeither\nFigure G.10: Formatted dataset example for ANLI R3\nContext →\nQuestion:\nGeorge wants to warm his hands quickly by rubbing them.\nWhich\nskin surface will produce the most heat?\nAnswer:\nCorrect Answer →\ndry palms\nIncorrect Answer →\nwet palms\nIncorrect Answer →\npalms covered with oil\nIncorrect Answer →\npalms covered with lotion\nFigure G.11: Formatted dataset example for ARC (Challenge). When predicting, we normalize by the unconditional\nprobability of each answer as described in 2.\nContext →\nlull is to trust as\nCorrect Answer →\ncajole is to compliance\nIncorrect Answer →\nbalk is to fortitude\nIncorrect Answer →\nbetray is to loyalty\nIncorrect Answer →\nhinder is to destination\nIncorrect Answer →\nsoothe is to passion\nFigure G.12: Formatted dataset example for SAT Analogies\nCorrect Context →\nGrace was happy to trade me her sweater for my jacket.\nShe thinks the\nsweater\nIncorrect Context →\nGrace was happy to trade me her sweater for my jacket.\nShe thinks the\njacket\nTarget Completion →\nlooks dowdy on her.\nFigure G.13: Formatted dataset example for Winograd. The ‘partial’ evaluation method we use compares the probability\nof the completion given a correct and incorrect context.\n53\n\nCorrect Context →\nJohnny likes fruits more than vegetables in his new keto diet because the\nfruits\nIncorrect Context →\nJohnny likes fruits more than vegetables in his new keto diet because the\nvegetables\nTarget Completion →\nare saccharine.\nFigure G.14: Formatted dataset example for Winogrande. The ‘partial’ evaluation method we use compares the\nprobability of the completion given a correct and incorrect context.\nContext →\nREADING COMPREHENSION ANSWER KEY\nWhile this process moved along, diplomacy continued its rounds.\nDirect\npressure on the Taliban had proved unsuccessful.\nAs one NSC staff note\nput it, \"Under the Taliban, Afghanistan is not so much a state sponsor\nof terrorism as it is a state sponsored by terrorists.\" In early 2000,\nthe United States began a high-level effort to persuade Pakistan to use\nits influence over the Taliban.\nIn January 2000, Assistant Secretary\nof State Karl Inderfurth and the State Department’s counterterrorism\ncoordinator, Michael Sheehan, met with General Musharraf in Islamabad,\ndangling before him the possibility of a presidential visit in March as a\nreward for Pakistani cooperation.\nSuch a visit was coveted by Musharraf,\npartly as a sign of his government’s legitimacy.\nHe told the two envoys\nthat he would meet with Mullah Omar and press him on Bin Laden.\nThey\nleft, however, reporting to Washington that Pakistan was unlikely in fact\nto do anything,\" given what it sees as the benefits of Taliban control\nof Afghanistan.\" President Clinton was scheduled to travel to India.\nThe State Department felt that he should not visit India without also\nvisiting Pakistan.\nThe Secret Service and the CIA, however, warned in\nthe strongest terms that visiting Pakistan would risk the President’s\nlife.\nCounterterrorism officials also argued that Pakistan had not done\nenough to merit a presidential visit.\nBut President Clinton insisted\non including Pakistan in the itinerary for his trip to South Asia.\nHis\none-day stopover on March 25, 2000, was the first time a U.S. president\nhad been there since 1969.\nAt his meeting with Musharraf and others,\nPresident Clinton concentrated on tensions between Pakistan and India\nand the dangers of nuclear proliferation, but also discussed Bin Laden.\nPresident Clinton told us that when he pulled Musharraf aside for a brief,\none-on-one meeting, he pleaded with the general for help regarding Bin\nLaden.\" I offered him the moon when I went to see him, in terms of better\nrelations with the United States, if he’d help us get Bin Laden and deal\nwith another issue or two.\" The U.S. effort continued.\nWho did The State Department feel should visit both India and Pakistan?\nCorrect Answer →\n- [False] Bin Laden\nIncorrect Answer →\n- [True] Bin Laden\nFigure G.15: Formatted dataset example for MultiRC. There are three levels within MultiRC: (1) the passage, (2) the\nquestions, and (3) the answers. During evaluation, accuracy is determined at the per-question level, with a question\nbeing considered correct if and only if all the answers within the question are labeled correctly. For this reason, we use\nK to refer to the number of questions shown within the context.\nContext →\nQuestion:\nWhich factor will most likely cause a person to develop a fever?\nAnswer:\nCorrect Answer →\na bacterial population in the bloodstream\nIncorrect Answer →\na leg muscle relaxing after exercise\nIncorrect Answer →\nseveral viral particles on the skin\nIncorrect Answer →\ncarbohydrates being digested in the stomach\nFigure G.16: Formatted dataset example for ARC (Easy). When predicting, we normalize by the unconditional\nprobability of each answer as described in 2.\n54\n\nContext →\nBob went to the gas station to fill up his car.\nHis tank was completely\nempty and so was his wallet.\nThe cashier offered to pay for his gas if he\ncame back later to pay.\nBob felt grateful as he drove home.\nCorrect Answer →\nBob believed that there were good people in the world.\nIncorrect Answer →\nBob contemplated how unfriendly the world was.\nFigure G.17: Formatted dataset example for StoryCloze\nContext →\nHelsinki is the capital and largest city of Finland.\nIt is in the region\nof Uusimaa, in southern Finland, on the shore of the Gulf of Finland.\nHelsinki has a population of , an urban population of , and a metropolitan\npopulation of over 1.4 million, making it the most populous municipality\nand urban area in Finland.\nHelsinki is some north of Tallinn, Estonia,\neast of Stockholm, Sweden, and west of Saint Petersburg, Russia.\nHelsinki\nhas close historical connections with these three cities.\nThe Helsinki metropolitan area includes the urban core of Helsinki, Espoo,\nVantaa, Kauniainen, and surrounding commuter towns.\nIt is the world’s\nnorthernmost metro area of over one million people, and the city is the\nnorthernmost capital of an EU member state.\nThe Helsinki metropolitan\narea is the third largest metropolitan area in the Nordic countries\nafter Stockholm and Copenhagen, and the City of Helsinki is the third\nlargest after Stockholm and Oslo.\nHelsinki is Finland’s major political,\neducational, financial, cultural, and research center as well as one of\nnorthern Europe’s major cities.\nApproximately 75% of foreign companies\nthat operate in Finland have settled in the Helsinki region.\nThe nearby\nmunicipality of Vantaa is the location of Helsinki Airport, with frequent\nservice to various destinations in Europe and Asia.\nQ: what is the most populous municipality in Finland?\nA: Helsinki\nQ: how many people live there?\nA: 1.4 million in the metropolitan area\nQ: what percent of the foreign companies that operate in Finland are in\nHelsinki?\nA: 75%\nQ: what towns are a part of the metropolitan area?\nA:\nTarget Completion →\nHelsinki, Espoo, Vantaa, Kauniainen, and surrounding commuter towns\nFigure G.18: Formatted dataset example for CoQA\nContext →\nPlease unscramble the letters into a word, and write that word:\nasinoc =\nTarget Completion →\ncasino\nFigure G.19: Formatted dataset example for Cycled Letters\n55\n\nContext →\nPassage:\nSaint Jean de Br´ebeuf was a French Jesuit missionary who\ntravelled to New France in 1625.\nThere he worked primarily with the Huron\nfor the rest of his life, except for a few years in France from 1629 to\n1633.\nHe learned their language and culture, writing extensively about\neach to aid other missionaries.\nIn 1649, Br´ebeuf and another missionary\nwere captured when an Iroquois raid took over a Huron village .\nTogether\nwith Huron captives, the missionaries were ritually tortured and killed\non March 16, 1649.\nBr´ebeuf was beatified in 1925 and among eight Jesuit\nmissionaries canonized as saints in the Roman Catholic Church in 1930.\nQuestion:\nHow many years did Saint Jean de Br´ebeuf stay in New France\nbefore he went back to France for a few years?\nAnswer:\nTarget Completion →\n4\nFigure G.20: Formatted dataset example for DROP\nContext →\nFill in blank:\nShe held the torch in front of her.\nShe caught her breath.\n\"Chris?\nThere’s a step.\"\n\"What?\"\n\"A step.\nCut in the rock.\nAbout fifty feet ahead.\" She moved faster.\nThey both moved faster.\n\"In fact,\" she said, raising the torch higher,\n\"there’s more than a\n.\n->\nTarget Completion →\nstep\nFigure G.21: Formatted dataset example for LAMBADA\nContext →\nPlease unscramble the letters into a word, and write that word:\nskicts =\nTarget Completion →\nsticks\nFigure G.22: Formatted dataset example for Anagrams 1 (A1)\nContext →\nPlease unscramble the letters into a word, and write that word:\nvolwskagen =\nTarget Completion →\nvolkswagen\nFigure G.23: Formatted dataset example for Anagrams 2\nContext →\nQ: Who played tess on touched by an angel?\nA:\nTarget Completion →\nDelloreese Patricia Early (July 6, 1931 { November 19, 2017), known\nprofessionally as Della Reese\nFigure G.24: Formatted dataset example for Natural Questions\n56\n\nContext →\nTITLE: William Perry (American football) - Professional career\nPARAGRAPH: In 1985, he was selected in the first round of the 1985 NFL\nDraft by the Chicago Bears; he had been hand-picked by coach Mike Ditka.\nHowever, defensive coordinator Buddy Ryan, who had a highly acrimonious\nrelationship with Ditka, called Perry a \"wasted draft-pick\".\nPerry\nsoon became a pawn in the political power struggle between Ditka and\nRyan.\nPerry’s \"Refrigerator\" nickname followed him into the NFL and he\nquickly became a favorite of the Chicago Bears fans.\nTeammates called\nhim \"Biscuit,\" as in \"one biscuit shy of 350 pounds.\" While Ryan refused\nto play Perry, Ditka decided to use Perry as a fullback when the team was\nnear the opponents’ goal line or in fourth and short situations, either\nas a ball carrier or a lead blocker for star running back Walter Payton.\nDitka stated the inspiration for using Perry as a fullback came to him\nduring five-yard sprint exercises.\nDuring his rookie season, Perry\nrushed for two touchdowns and caught a pass for one.\nPerry even had\nthe opportunity to run the ball during Super Bowl XX, as a nod to his\npopularity and contributions to the team’s success.\nThe first time he\ngot the ball, he was tackled for a one-yard loss while attempting to throw\nhis first NFL pass on a halfback option play.\nThe second time he got the\nball, he scored a touchdown (running over Patriots linebacker Larry McGrew\nin the process).\nAbout halfway through his rookie season, Ryan finally\nbegan to play Perry, who soon proved that he was a capable defensive\nlineman.\nHis Super Bowl ring size is the largest of any professional\nfootball player in the history of the event.\nHis ring size is 25, while\nthe ring size for the average adult male is between 10 and 12.\nPerry went\non to play for ten years in the NFL, retiring after the 1994 season.\nIn\nhis ten years as a pro, he regularly struggled with his weight, which\nhampered his performance at times.\nHe played in 138 games, recording\n29.5 sacks and five fumble recoveries, which he returned for a total of\n71 yards.\nIn his offensive career he ran five yards for two touchdowns,\nand had one reception for another touchdown.\nPerry later attempted a\ncomeback, playing an unremarkable 1996 season with the London Monarchs of\nthe World League of American Football (later NFL Europa).\nQ: what team did he play for?\nA:\nTarget Completion →\nthe Chicago Bears\nFigure G.25: Formatted dataset example for QuAC\nContext →\nPlease unscramble the letters into a word, and write that word:\nr e!c.i p r o.c a/l =\nTarget Completion →\nreciprocal\nFigure G.26: Formatted dataset example for Symbol Insertion\nContext →\nPlease unscramble the letters into a word, and write that word:\ntaefed =\nTarget Completion →\ndefeat\nFigure G.27: Formatted dataset example for Reversed Words\n57\n\nContext →\nTitle:\nThe Blitz\nBackground:\nFrom the German point of view, March 1941 saw an improvement.\nThe Luftwaffe flew 4,000 sorties that month, including 12 major and\nthree heavy attacks.\nThe electronic war intensified but the Luftwaffe\nflew major inland missions only on moonlit nights.\nPorts were easier to\nfind and made better targets.\nTo confuse the British, radio silence was\nobserved until the bombs fell.\nX- and Y-Ger¨at beams were placed over\nfalse targets and switched only at the last minute.\nRapid frequency\nchanges were introduced for X-Ger¨at, whose wider band of frequencies and\ngreater tactical flexibility ensured it remained effective at a time when\nBritish selective jamming was degrading the effectiveness of Y-Ger¨at.\nQ: How many sorties were flown in March 1941?\nA: 4,000\nQ: When did the Luftwaffe fly inland missions?\nA:\nTarget Completion →\nonly on moonlit nights\nFigure G.28: Formatted dataset example for SQuADv2\nContext →\nNormal force -- In a simple case such as an object resting upon a table,\nthe normal force on the object is equal but in opposite direction to the\ngravitational force applied on the object (or the weight of the object),\nthat is, N = m g (\\displaystyle N=mg), where m is mass, and g is the\ngravitational field strength (about 9.81 m/s on Earth).\nThe normal force\nhere represents the force applied by the table against the object that\nprevents it from sinking through the table and requires that the table is\nsturdy enough to deliver this normal force without breaking.\nHowever, it\nis easy to assume that the normal force and weight are action-reaction\nforce pairs (a common mistake).\nIn this case, the normal force and\nweight need to be equal in magnitude to explain why there is no upward\nacceleration of the object.\nFor example, a ball that bounces upwards\naccelerates upwards because the normal force acting on the ball is larger\nin magnitude than the weight of the ball.\nquestion:\nis the normal force equal to the force of gravity?\nanswer:\nTarget Completion →\nyes\nFigure G.29: Formatted dataset example for BoolQ\nContext →\nThe trend toward lower rents may seem surprising given that some\ncommunities in New York are bemoaning the loss of favorite local\nbusinesses to high rents.\nBut, despite the recent softening, for many\nof these retailers there’s still been too big a jump from the rental rates\nof the late 1970s, when their leases were signed.\nCertainly, the recent\ndrop in prices doesn’t mean Manhattan comes cheap.\nquestion:\nManhattan comes cheap.\ntrue, false, or neither?\nanswer:\nTarget Completion →\nfalse\nFigure G.30: Formatted dataset example for CB\n58\n\nContext →\nThe bet, which won him dinner for four, was regarding the existence and\nmass of the top quark, an elementary particle discovered in 1995.\nquestion:\nThe Top Quark is the last of six flavors of quarks predicted by\nthe standard model theory of particle physics.\nTrue or False?\nanswer:\nTarget Completion →\nFalse\nFigure G.31: Formatted dataset example for RTE\nContext →\nAn outfitter provided everything needed for the safari.\nBefore his first walking holiday, he went to a specialist outfitter to buy\nsome boots.\nquestion:\nIs the word ‘outfitter’ used in the same way in the two\nsentences above?\nanswer:\nTarget Completion →\nno\nFigure G.32: Formatted dataset example for WiC\nContext →\nFinal Exam with Answer Key\nInstructions:\nPlease carefully read the following passages.\nFor each\npassage, you must identify which noun the pronoun marked in *bold* refers\nto.\n=====\nPassage:\nMr.\nMoncrieff visited Chester’s luxurious New York apartment,\nthinking that it belonged to his son Edward.\nThe result was that Mr.\nMoncrieff has decided to cancel Edward’s allowance on the ground that\nhe no longer requires *his* financial support.\nQuestion:\nIn the passage above, what does the pronoun \"*his*\" refer to?\nAnswer:\nTarget Completion →\nmr.\nmoncrieff\nFigure G.33: Formatted dataset example for WSC\nContext →\nQ: ‘Nude Descending A Staircase’ is perhaps the most famous painting by\nwhich 20th century artist?\nA:\nTarget Completion →\nMARCEL DUCHAMP\nTarget Completion →\nr mutt\nTarget Completion →\nduchamp\nTarget Completion →\nmarcel duchamp\nTarget Completion →\nR.Mutt\nTarget Completion →\nMarcel duChamp\nTarget Completion →\nHenri-Robert-Marcel Duchamp\nTarget Completion →\nMarcel du Champ\nTarget Completion →\nhenri robert marcel duchamp\nTarget Completion →\nDuchampian\nTarget Completion →\nDuchamp\nTarget Completion →\nduchampian\nTarget Completion →\nmarcel du champ\nTarget Completion →\nMarcel Duchamp\nTarget Completion →\nMARCEL DUCHAMP\nFigure G.34: Formatted dataset example for TriviaQA. TriviaQA allows for multiple valid completions.\n59\n\nContext →\nQ: What school did burne hogarth establish?\nA:\nTarget Completion →\nSchool of Visual Arts\nFigure G.35: Formatted dataset example for WebQA\nContext →\nKeinesfalls d¨urfen diese f¨ur den kommerziellen Gebrauch verwendet werden.\n=\nTarget Completion →\nIn no case may they be used for commercial purposes.\nFigure G.36: Formatted dataset example for De→En. This is the format for one- and few-shot learning, for this and\nother langauge tasks, the format for zero-shot learning is “Q: What is the {language} translation of {sentence} A:\n{translation}.”\nContext →\nIn no case may they be used for commercial purposes.\n=\nTarget Completion →\nKeinesfalls d¨urfen diese f¨ur den kommerziellen Gebrauch verwendet werden.\nFigure G.37: Formatted dataset example for En→De\nContext →\nAnalysis of instar distributions of larval I. verticalis collected from\na series of ponds also indicated that males were in more advanced instars\nthan females.\n=\nTarget Completion →\nL’analyse de la distribution de fr´equence des stades larvaires d’I.\nverticalis dans une s´erie d’´etangs a ´egalement d´emontr´e que les larves\nm^ales ´etaient `a des stades plus avanc´es que les larves femelles.\nFigure G.38: Formatted dataset example for En→Fr\nContext →\nL’analyse de la distribution de fr´equence des stades larvaires d’I.\nverticalis dans une s´erie d’´etangs a ´egalement d´emontr´e que les larves\nm^ales ´etaient `a des stades plus avanc´es que les larves femelles.\n=\nTarget Completion →\nAnalysis of instar distributions of larval I. verticalis collected from\na series of ponds also indicated that males were in more advanced instars\nthan females.\nFigure G.39: Formatted dataset example for Fr→En\nContext →\nThe truth is that you want, at any price, and against the wishes of the\npeoples of Europe, to continue the negotiations for Turkey’s accession\nto the European Union, despite Turkey’s continuing refusal to recognise\nCyprus and despite the fact that the democratic reforms are at a\nstandstill.\n=\nTarget Completion →\nAdev˘arul este c˘a v˘a dorit¸i, cu orice pret¸ ¸si ^ımpotriva dorint¸ei\neuropenilor, s˘a continuat¸i negocierile de aderare a Turciei la Uniunea\nEuropean˘a, ^ın ciuda refuzului continuu al Turciei de a recunoa¸ste Ciprul\n¸si ^ın ciuda faptului c˘a reformele democratice au ajuns ^ıntr-un punct mort.\nFigure G.40: Formatted dataset example for En→Ro\n60\n\nContext →\nAdev˘arul este c˘a v˘a dorit¸i, cu orice pret¸ ¸si ^ımpotriva dorint¸ei\neuropenilor, s˘a continuat¸i negocierile de aderare a Turciei la Uniunea\nEuropean˘a, ^ın ciuda refuzului continuu al Turciei de a recunoa¸ste Ciprul\n¸si ^ın ciuda faptului c˘a reformele democratice au ajuns ^ıntr-un punct mort.\n=\nTarget Completion →\nThe truth is that you want, at any price, and against the wishes of the\npeoples of Europe, to continue the negotiations for Turkey’s accession\nto the European Union, despite Turkey’s continuing refusal to recognise\nCyprus and despite the fact that the democratic reforms are at a\nstandstill.\nFigure G.41: Formatted dataset example for Ro→En\nContext →\nQ: What is (2 * 4) * 6?\nA:\nTarget Completion →\n48\nFigure G.42: Formatted dataset example for Arithmetic 1DC\nContext →\nQ: What is 17 minus 14?\nA:\nTarget Completion →\n3\nFigure G.43: Formatted dataset example for Arithmetic 2D-\nContext →\nQ: What is 98 plus 45?\nA:\nTarget Completion →\n143\nFigure G.44: Formatted dataset example for Arithmetic 2D+\nContext →\nQ: What is 95 times 45?\nA:\nTarget Completion →\n4275\nFigure G.45: Formatted dataset example for Arithmetic 2Dx\nContext →\nQ: What is 509 minus 488?\nA:\nTarget Completion →\n21\nFigure G.46: Formatted dataset example for Arithmetic 3D-\nContext →\nQ: What is 556 plus 497?\nA:\nTarget Completion →\n1053\nFigure G.47: Formatted dataset example for Arithmetic 3D+\nContext →\nQ: What is 6209 minus 3365?\nA:\nTarget Completion →\n2844\nFigure G.48: Formatted dataset example for Arithmetic 4D-\n61\n\nContext →\nQ: What is 9923 plus 617?\nA:\nTarget Completion →\n10540\nFigure G.49: Formatted dataset example for Arithmetic 4D+\nContext →\nQ: What is 40649 minus 78746?\nA:\nTarget Completion →\n-38097\nFigure G.50: Formatted dataset example for Arithmetic 5D−\nContext →\nQ: What is 65360 plus 16204?\nA:\nTarget Completion →\n81564\nFigure G.51: Formatted dataset example for Arithmetic 5D+\n62\n\nH\nResults on All Tasks for All Model Sizes\nZero-Shot\nOne-Shot\nFew-Shot\nName\nMetric\nSplit\nFine-tune\nSOTA\nK\nSmall Med Large XL 2.7B 6.7B 13B 175B\nSmall Med Large XL 2.7B 6.7B 13B 175B\nSmall Med Large XL 2.7B 6.7B 13B 175B\n175B\n(test server)\nHellaSwag\nacc\ndev\n85.6\n20\n33.7\n43.6 51.0\n54.7 62.8 67.4 70.9 78.9\n33.0\n42.9 50.5\n53.5 61.9 66.5 70.0 78.1\n33.5\n43.1 51.3\n54.9 62.9 67.3 71.3 79.3\nLAMBADA\nacc\ntest\n68.0\n15\n42.7\n54.3 60.4\n63.6 67.1 70.3 72.5 76.2\n22.0\n47.1 52.6\n58.3 61.1 65.4 69.0 72.5\n22.0\n40.4 63.2\n57.0 78.1 79.1 81.3 86.4\nLAMBADA\nppl\ntest\n8.63\n15\n18.6\n9.09 6.53\n5.44 4.60 4.00 3.56 3.00\n165.0 11.6 8.29\n6.46 5.53 4.61 4.06 3.35\n165.0 27.6 6.63\n7.45 2.89 2.56 2.56 1.92\nStoryCloze\nacc\ntest\n91.8\n70\n63.3\n68.5 72.4\n73.4 77.2 77.7 79.5 83.2\n62.3\n68.7 72.3\n74.2 77.3 78.7 79.7 84.7\n62.3\n70.2 73.9\n76.1 80.2 81.2 83.0 87.7\nNQs\nacc\ntest\n44.5\n64\n0.64\n1.75 2.71\n4.40 6.01 5.79 7.84 14.6\n1.19\n3.07 4.79\n5.43 8.73 9.78 13.7 23.0\n1.72\n4.46 7.89\n9.72 13.2 17.0 21.0 29.9\nTriviaQA\nacc\ndev\n68.0\n64\n4.15\n7.61 14.0\n19.7 31.3 38.7 41.8 64.3\n4.19\n12.9 20.5\n26.5 35.9 44.4 51.3 68.0\n6.96\n16.3 26.5\n32.1 42.3 51.6 57.5 71.2\n71.2\nWebQs\nacc\ntest\n45.5\n64\n1.77\n3.20 4.33\n4.63 7.92 7.73 8.22 14.4\n2.56\n6.20 8.51\n9.15 14.5 15.1 19.0 25.3\n5.46\n12.6 15.9\n19.6 24.8 27.7 33.5 41.5\nRo→En 16\nBLEU-mb test\n39.9\n64\n2.08\n2.71 3.09\n3.15 16.3 8.34 20.2 19.9\n0.55\n15.4 23.0\n26.3 30.6 33.2 35.6 38.6\n1.25\n20.7 25.8\n29.2 33.1 34.8 37.0 39.5\nRo→En 16\nBLEU-sb\ntest\n64\n2.39\n3.08 3.49\n3.56 16.8 8.75 20.8 20.9\n0.65\n15.9 23.6\n26.8 31.3 34.2 36.7 40.0\n1.40\n21.3 26.6\n30.1 34.3 36.2 38.4 41.3\nEn→Ro 16\nBLEU-mb test\n38.5\n64\n2.14\n2.65 2.53\n2.50 3.46 4.24 5.32 14.1\n0.35\n3.30 7.89\n8.72 13.2 15.1 17.3 20.6\n1.25\n5.90 9.33\n10.7 14.3 16.3 18.0 21.0\nEn→Ro 16\nBLEU-sb\ntest\n64\n2.61\n3.11 3.07\n3.09 4.26 5.31 6.43 18.0\n0.55\n3.90 9.15\n10.3 15.7 18.2 20.8 24.9\n1.64\n7.40 10.9\n12.9 17.2 19.6 21.8 25.8\nFr→En 14\nBLEU-mb test\n35.0\n64\n1.81\n2.53 3.47\n3.13 20.6 15.1 21.8 21.2\n1.28\n15.9 23.7\n26.3 29.0 30.5 30.2 33.7\n4.98\n25.5 28.5\n31.1 33.7 34.9 36.6 39.2\nFr→En 14\nBLEU-sb\ntest\n64\n2.29\n2.99 3.90\n3.60 21.2 15.5 22.4 21.9\n1.50\n16.3 24.4\n27.0 30.0 31.6 31.4 35.6\n5.30\n26.2 29.5\n32.2 35.1 36.4 38.3 41.4\nEn→Fr 14\nBLEU-mb test\n45.6\n64\n1.74\n2.16 2.73\n2.15 15.1 8.82 12.0 25.2\n0.49\n8.00 14.8\n15.9 20.3 23.3 24.9 28.3\n4.08\n14.5 19.3\n21.5 24.9 27.3 29.5 32.6\nEn→Fr 14\nBLEU-sb\ntest\n45.9\n64\n2.44\n2.75 3.54\n2.82 19.3 11.4 15.3 31.3\n0.81\n10.0 18.2\n19.3 24.7 28.3 30.1 34.1\n5.31\n18.0 23.6\n26.1 30.3 33.3 35.5 39.9\nDe→En 16\nBLEU-mb test\n40.2\n64\n2.06\n2.87 3.41\n3.63 21.5 17.3 23.0 27.2\n0.83\n16.2 22.5\n24.7 28.2 30.7 33.0 30.4\n3.25\n22.7 26.2\n29.2 32.7 34.8 37.3 40.6\nDe→En 16\nBLEU-sb\ntest\n64\n2.39\n3.27 3.85\n4.04 22.5 18.2 24.4 28.6\n0.93\n17.1 23.4\n25.8 29.2 31.9 34.5 32.1\n3.60\n23.8 27.5\n30.5 34.1 36.5 39.1 43.0\nEn→De 16\nBLEU-mb test\n41.2\n64\n1.70\n2.27 2.31\n2.43 12.9 8.66 10.4 24.6\n0.50\n7.00 12.9\n13.1 18.3 20.9 22.5 26.2\n3.42\n12.3 15.4\n17.1 20.9 23.0 26.6 29.7\nEn→De 16\nBLEU-sb\ntest\n41.2\n64\n2.09\n2.65 2.75\n2.92 13.7 9.36 11.0 25.3\n0.54\n7.40 13.4\n13.4 18.8 21.7 23.3 27.3\n3.78\n12.9 16.1\n17.7 21.7 24.1 27.7 30.9\nWinograd\nacc\ntest\n93.8\n7\n66.3\n72.9 74.7\n76.9 82.4 85.7 87.9 88.3\n63.4\n68.5 72.9\n76.9 82.4 84.6 86.1 89.7\n63.4\n67.4 73.6\n76.9 84.3 85.4 82.4 88.6\nWinogrande\nacc\ndev\n84.6\n50\n52.0\n52.1 57.4\n58.7 62.3 64.5 67.9 70.2\n51.3\n53.0 58.3\n59.1 61.7 65.8 66.9 73.2\n51.3\n52.6 57.5\n59.1 62.6 67.4 70.0 77.7\nPIQA\nacc\ndev\n77.1\n50\n64.6\n70.2 72.9\n75.1 75.6 78.0 78.5 81.0\n64.3\n69.3 71.8\n74.4 74.3 76.3 77.8 80.5\n64.3\n69.4 72.0\n74.3 75.4 77.8 79.9 82.3\n82.8\nARC (Challenge) acc\ntest\n78.5\n50\n26.6\n29.5 31.8\n35.5 38.0 41.4 43.7 51.4\n25.5\n30.2 31.6\n36.4 38.4 41.5 43.1 53.2\n25.5\n28.4 32.3\n36.7 39.5 43.7 44.8 51.5\nARC (Easy)\nacc\ntest\n92.0\n50\n43.6\n46.5 53.0\n53.8 58.2 60.2 63.8 68.8\n42.7\n48.2 54.6\n55.9 60.3 62.6 66.8 71.2\n42.7\n51.0 58.1\n59.1 62.1 65.8 69.1 70.1\nOpenBookQA\nacc\ntest\n87.2\n100\n35.6\n43.2 45.2\n46.8 53.0 50.4 55.6 57.6\n37.0\n39.8 46.2\n46.4 53.4 53.0 55.8 58.8\n37.0\n43.6 48.0\n50.6 55.6 55.2 60.8 65.4\nQuac\nf1\ndev\n74.4\n5\n21.2\n26.8 31.0\n30.1 34.7 36.1 38.4 41.5\n21.1\n26.9 31.9\n32.3 37.4 39.0 40.6 43.4\n21.6\n27.6 32.9\n34.2 38.2 39.9 40.9 44.3\nRACE-h\nacc\ntest\n90.0\n10\n35.2\n37.9 40.1\n40.9 42.4 44.1 44.6 45.5\n34.3\n37.7 40.0\n42.0 43.8 44.3 44.6 45.9\n34.3\n37.0 40.4\n41.4 42.3 44.7 45.1 46.8\nRACE-m\nacc\ntest\n93.1\n10\n42.1\n47.2 52.1\n52.3 54.7 54.4 56.7 58.4\n42.3\n47.3 51.7\n55.2 56.1 54.7 56.9 57.4\n42.3\n47.0 52.7\n53.0 55.6 55.4 58.1 58.1\nSQuADv2\nem\ndev\n90.7\n16\n22.6\n32.8 33.9\n43.1 43.6 45.4 49.0 52.6\n25.1\n37.5 37.9\n47.9 47.9 51.1 56.0 60.1\n27.5\n40.5 39.2\n53.5 50.0 56.6 62.6 64.9\nSQuADv2\nf1\ndev\n93.0\n16\n28.3\n40.2 41.4\n50.3 51.0 52.7 56.3 59.5\n30.1\n43.6 44.1\n54.0 54.1 57.1 61.8 65.4\n32.1\n45.5 44.9\n58.7 55.9 62.1 67.7 69.8\nCoQA\nf1\ndev\n90.7\n5\n34.5\n55.0 61.8\n65.3 71.1 72.8 76.3 81.5\n30.6\n52.1 61.6\n66.1 71.8 75.1 77.9 84.0\n31.1\n52.0 62.7\n66.8 73.2 77.3 79.9 85.0\nDROP\nf1\ndev\n89.1\n20\n9.40\n13.6 14.4\n16.4 19.7 17.0 24.0 23.6\n11.7\n18.1 20.9\n23.0 26.4 27.3 29.2 34.3\n12.9\n18.7 24.0\n25.6 29.7 29.7 32.3 36.5\nBoolQ\nacc\ndev\n91.0\n32\n49.7\n60.3 58.9\n62.4 67.1 65.4 66.2 60.5\n52.6\n61.7 60.4\n63.7 68.4 68.7 69.0 76.7\n43.1\n60.6 62.0\n64.1 70.3 70.0 70.2 77.5\n76.4\nCB\nacc\ndev\n96.9\n32\n0.00\n32.1 8.93\n19.6 19.6 28.6 19.6 46.4\n55.4\n53.6 53.6\n48.2 57.1 33.9 55.4 64.3\n42.9\n58.9 53.6\n69.6 67.9 60.7 66.1 82.1\n75.6\nCB\nf1\ndev\n93.9\n32\n0.00\n29.3 11.4\n17.4 22.4 25.1 20.3 42.8\n60.1\n39.8 45.6\n37.5 45.7 28.5 44.6 52.5\n26.1\n40.4 32.6\n48.3 45.7 44.6 46.0 57.2\n52.0\nCopa\nacc\ndev\n94.8\n32\n66.0\n68.0 73.0\n77.0 76.0 80.0 84.0 91.0\n62.0\n64.0 66.0\n74.0 76.0 82.0 86.0 87.0\n67.0\n64.0 72.0\n77.0 83.0 83.0 86.0 92.0\n92.0\nRTE\nacc\ndev\n92.5\n32\n47.7\n49.8 48.4\n56.0 46.6 55.2 62.8 63.5\n53.1\n47.3 49.5\n49.5 54.9 54.9 56.3 70.4\n52.3\n48.4 46.9\n50.9 56.3 49.5 60.6 72.9\n69.0\nWiC\nacc\ndev\n76.1\n32\n0.00\n0.00 0.00\n0.00 0.00 0.00 0.00 0.00\n50.0\n50.3 50.3\n49.2 49.4 50.3 50.0 48.6\n49.8\n55.0 53.0\n53.0 51.6 53.1 51.1 55.3\n49.4\nWSC\nacc\ndev\n93.8\n32\n59.6\n56.7 65.4\n61.5 66.3 60.6 64.4 65.4\n58.7\n58.7 60.6\n62.5 66.3 60.6 66.3 69.2\n58.7\n60.6 54.8\n49.0 62.5 67.3 75.0 75.0\n80.1\nMultiRC\nacc\ndev\n62.3\n32\n4.72\n9.65 12.3\n13.6 14.3 18.4 24.2 27.6\n4.72\n9.65 12.3\n13.6 14.3 18.4 24.2 27.6\n6.09\n11.8 16.8\n20.8 24.7 23.8 25.0 32.5\n30.5\nMultiRC\nf1a\ndev\n88.2\n32\n57.0\n59.7 60.4\n59.9 60.0 64.5 71.4 72.9\n57.0\n59.7 60.4\n59.9 60.0 64.5 71.4 72.9\n45.0\n55.9 64.2\n65.4 69.5 66.4 69.3 74.8\n75.4\nReCoRD\nacc\ndev\n92.5\n32\n70.8\n78.5 82.1\n84.1 86.2 88.6 89.0 90.2\n69.8\n77.0 80.7\n83.0 85.9 88.0 88.8 90.2\n69.8\n77.2 81.3\n83.1 86.6 87.9 88.9 89.0\n90.2\nReCoRD\nf1\ndev\n93.3\n32\n71.9\n79.2 82.8\n85.2 87.3 89.5 90.4 91.0\n70.7\n77.8 81.6\n83.9 86.8 88.8 89.7 91.2\n70.7\n77.9 82.1\n84.0 87.5 88.8 89.8 90.1\n91.1\nSuperGLUE\naverage\ndev\n89.0\n40.6\n47.4 46.8\n49.6 50.1 52.3 54.4 58.2\n54.4\n55.1 56.7\n57.8 61.2 59.7 64.3 68.9\n50.2\n56.2 56.8\n60.0 64.3 63.6 66.9 73.2\n71.8\nANLI R1\nacc\ntest\n73.8\n50\n33.4\n34.2 33.4\n33.4 34.2 32.3 33.2 34.6\n32.1\n31.6 31.9\n34.6 30.6 31.6 32.7 32.0\n32.1\n32.5 30.9\n32.5 33.5 33.1 33.3 36.8\nANLI R2\nacc\ntest\n50.7\n50\n33.2\n31.9 33.3\n33.3 33.8 33.5 33.5 35.4\n35.7\n33.7 33.2\n32.7 32.7 33.9 33.9 33.9\n35.7\n33.8 32.1\n31.4 32.6 33.3 32.6 34.0\nANLI R3\nacc\ntest\n48.3\n50\n33.6\n34.0 33.8\n33.4 35.3 34.8 34.4 34.5\n35.0\n32.6 33.0\n33.9 34.1 33.1 32.5 35.1\n35.0\n34.4 35.1\n36.0 32.7 33.9 34.5 40.2\n2D+\nacc\nn/a\n50\n0.70\n0.65 0.70\n0.85 1.10 2.54 15.4 76.9\n2.00\n0.55 3.15\n4.00 12.1 19.6 73.0 99.6\n2.00\n4.10 3.50\n4.50 8.90 11.9 55.5 100.0\n2D-\nacc\nn/a\n50\n1.25\n1.25 1.25\n1.25 1.60 7.60 12.6 58.0\n1.15\n0.95 1.45\n1.95 3.85 11.5 44.6 86.4\n1.15\n1.45 2.25\n2.70 7.35 13.6 52.4 98.9\n3D+\nacc\nn/a\n50\n0.10\n0.10 0.05\n0.10 0.10 0.25 1.40 34.2\n0.15\n0.00 0.10\n0.30 0.45 0.95 15.4 65.5\n0.15\n0.45 0.30\n0.55 0.75 0.90 8.40 80.4\n3D-\nacc\nn/a\n50\n0.05\n0.05 0.05\n0.05 0.05 0.45 1.35 48.3\n0.05\n0.15 0.25\n0.30 0.55 1.60 6.15 78.7\n0.05\n0.10 0.15\n0.35 0.65 1.05 9.20 94.2\n4D+\nacc\nn/a\n50\n0.05\n0.05 0.00\n0.00 0.05 0.05 0.15 4.00\n0.00\n0.00 0.10\n0.00 0.00 0.10 0.80 14.0\n0.00\n0.05 0.05\n0.00 0.15 0.15 0.40 25.5\n4D-\nacc\nn/a\n50\n0.00\n0.00 0.00\n0.00 0.00 0.00 0.10 7.50\n0.00\n0.00 0.00\n0.00 0.05 0.00 0.50 14.0\n0.00\n0.05 0.00\n0.00 0.10 0.05 0.40 26.8\n5D+\nacc\nn/a\n50\n0.00\n0.00 0.00\n0.00 0.00 0.00 0.00 0.65\n0.00\n0.00 0.00\n0.00 0.00 0.00 0.05 3.45\n0.00\n0.00 0.00\n0.00 0.00 0.00 0.05 9.30\n5D-\nacc\nn/a\n50\n0.00\n0.00 0.00\n0.00 0.00 0.00 0.00 0.80\n0.00\n0.00 0.00\n0.00 0.00 0.00 0.05 3.75\n0.00\n0.00 0.00\n0.00 0.00 0.00 0.00 9.90\n2Dx\nacc\nn/a\n50\n2.20\n2.25 2.65\n2.10 2.55 5.80 6.15 19.8\n1.35\n2.35 3.35\n2.35 4.75 9.15 11.0 27.4\n1.35\n2.90 2.70\n2.85 4.25 6.10 7.05 29.2\n1DC\nacc\nn/a\n50\n1.25\n2.95 2.75\n0.05 0.30 2.35 0.75 9.75\n1.90\n2.80 2.85\n3.65 6.45 9.15 8.20 14.3\n1.70\n2.15 3.90\n5.75 6.20 7.60 9.95 21.3\nCycled Letters\nacc\nn/a\n100\n0.62\n0.71 2.85\n0.00 0.63 1.35 2.58 3.66\n1.67\n4.36 5.68\n6.46 6.25 9.41 15.1 21.7\n4.63\n9.27 10.7\n14.5 16.7 21.9 27.7 37.9\nAnagrams 1\nacc\nn/a\n100\n0.10\n0.14 0.40\n0.00 0.27 0.69 1.16 2.28\n0.21\n0.61 1.12\n1.27 1.60 2.72 3.72 8.62\n0.50\n1.27 2.13\n3.05 3.81 5.49 8.38 15.1\nAnagrams 2\nacc\nn/a\n100\n0.81\n1.21 2.69\n0.01 1.71 3.75 4.53 8.91\n1.19\n2.62 4.70\n4.77 6.97 10.2 14.6 25.9\n1.94\n4.80 7.59\n9.87 12.6 18.9 25.6 39.7\nSymbol Insertion acc\nn/a\n100\n0.00\n0.00 0.10\n0.00 0.05 0.42 0.89 8.26\n0.03\n0.05 0.57\n1.18 1.67 3.46 6.62 45.4\n0.11\n0.28 2.19\n4.18 6.61 11.0 27.3 67.2\nReversed Words\nacc\nn/a\n100\n0.00\n0.01 0.01\n0.01 0.02 0.03 0.03 0.09\n0.02\n0.01 0.01\n0.00 0.05 0.07 0.11 0.48\n0.00\n0.05 0.00\n0.17 0.24 0.30 0.42 0.44\nSAT Analogies\nacc\nn/a\n20\n35.6\n39.0 45.2\n44.1 50.0 49.2 52.7 53.7\n30.5\n41.2 43.1\n46.5 55.1 54.3 53.5 59.1\n30.5\n40.4 42.8\n40.6 48.4 51.9 53.5 65.2\nTable H.1: Scores for every task, setting and model that we investigate in this paper.\n63\n\nFigure H.1: All results for all SuperGLUE tasks.\nFigure H.2: Results for SAT task.\nFigure H.3: All results for all Winograd tasks.\n64\n\nFigure H.4: All results for all Arithmetic tasks.\nFigure H.5: All results for all Cloze and Completion tasks.\n65\n\nFigure H.6: All results for all Common Sense Reasoning tasks.\nFigure H.7: All results for all QA tasks.\nFigure H.8: All results for all Reading Comprehension tasks.\nFigure H.9: All results for all ANLI rounds.\n66\n\nFigure H.10: All results for all Scramble tasks.\nFigure H.11: All results for all Translation tasks.\n67\n\nReferences\n[ADG+16] Marcin Andrychowicz, Misha Denil, Sergio Gomez, Matthew W Hoffman, David Pfau, Tom Schaul,\nBrendan Shillingford, and Nando De Freitas. Learning to learn by gradient descent by gradient descent.\nIn Advances in neural information processing systems, pages 3981–3989, 2016.\n[AI19] WeChat AI. Tr-mt (ensemble), December 2019.\n[AJF19] Roee Aharoni, Melvin Johnson, and Orhan Firat. Massively multilingual neural machine translation. In\nProceedings of the 2019 Conference of the North American Chapter of the Association for Computational\nLinguistics: Human Language Technologies, Volume 1 (Long and Short Papers), 2019.\n[BBDIW20] Su Lin Blodgett, Solon Barocas, Hal Daum´e III, and Hanna Wallach. Language (technology) is power:\nA critical survey of “bias” in nlp. arXiv preprint arXiv:2005.14050, 2020.\n[BCFL13] Jonathan Berant, Andrew Chou, Roy Frostig, and Percy Liang. Semantic parsing on freebase from\nquestion-answer pairs. In Proceedings of the 2013 conference on empirical methods in natural language\nprocessing, pages 1533–1544, 2013.\n[BDD+09] Luisa Bentivogli, Ido Dagan, Hoa Trang Dang, Danilo Giampiccolo, and Bernardo Magnini. The ﬁfth\nPASCAL recognizing textual entailment challenge. 2009.\n[BES10] Stefano Baccianella, Andrea Esuli, and Fabrizio Sebastiani. Sentiwordnet 3.0: an enhanced lexical\nresource for sentiment analysis and opinion mining. In Lrec, volume 10, pages 2200–2204, 2010.\n[BHDD+06] Roy Bar Haim, Ido Dagan, Bill Dolan, Lisa Ferro, Danilo Giampiccolo, Bernardo Magnini, and Idan\nSzpektor. The second PASCAL recognising textual entailment challenge. 2006.\n[BHT+20] Yonatan Bisk, Ari Holtzman, Jesse Thomason, Jacob Andreas, Yoshua Bengio, Joyce Chai, Mirella\nLapata, Angeliki Lazaridou, Jonathan May, Aleksandr Nisnevich, et al. Experience grounds language.\narXiv preprint arXiv:2004.10151, 2020.\n[BLC13] Yoshua Bengio, Nicholas L´eonard, and Aaron C. Courville. Estimating or propagating gradients through\nstochastic neurons for conditional computation. Arxiv, 2013.\n[BZB+19] Yonatan Bisk, Rowan Zellers, Ronan Le Bras, Jianfeng Gao, and Yejin Choi. Piqa: Reasoning about\nphysical commonsense in natural language. arXiv preprint arXiv:1911.11641, 2019.\n[Car97] Rich Caruana. Multitask learning. Machine learning, 28(1), 1997.\n[CB78] Susan Carey and Elsa Bartlett. Acquiring a single new word. Proceedings of the Stanford Child Language\nConference, 1978.\n[CCE+18] Peter Clark, Isaac Cowhey, Oren Etzioni, Tushar Khot, Ashish Sabharwal, Carissa Schoenick, and\nOyvind Tafjord. Think you have solved question answering? try arc, the ai2 reasoning challenge. ArXiv,\nabs/1803.05457, 2018.\n[CGRS19] Rewon Child, Scott Gray, Alec Radford, and Ilya Sutskever. Generating long sequences with sparse\ntransformers, 2019.\n[CHI+18] Eunsol Choi, He He, Mohit Iyyer, Mark Yatskar, Wen-tau Yih, Yejin Choi, Percy Liang, and Luke\nZettlemoyer. Quac : Question answering in context. Arxiv, 2018.\n[CLC+19] Christopher Clark, Kenton Lee, Ming-Wei Chang, Tom Kwiatkowski, Michael Collins, and Kristina\nToutanova. BoolQ: Exploring the surprising difﬁculty of natural yes/no questions. arXiv preprint\narXiv:1905.10044, 2019.\n[CLY+19] Yen-Chun Chen, Linjie Li, Licheng Yu, Ahmed El Kholy, Faisal Ahmed, Zhe Gan, Yu Cheng, and\nJingjing Liu. Uniter: Learning universal image-text representations. arXiv preprint arXiv:1909.11740,\n2019.\n[Cra17] Kate Crawford. The trouble with bias. NIPS 2017 Keynote, 2017.\n[DCLT18] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of deep\nbidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805, 2018.\n68\n\n[DGM06] Ido Dagan, Oren Glickman, and Bernardo Magnini. The PASCAL recognising textual entailment\nchallenge. In Machine learning challenges. evaluating predictive uncertainty, visual object classiﬁcation,\nand recognising textual entailment, pages 177–190. Springer, 2006.\n[DGV+18] Mostafa Dehghani, Stephan Gouws, Oriol Vinyals, Jakob Uszkoreit, and Lukasz Kaiser. Universal\ntransformers. Arxiv, 2018.\n[DHKH14] Nadir Durrani, Barry Haddow, Philipp Koehn, and Kenneth Heaﬁeld. Edinburgh’s phrase-based machine\ntranslation systems for wmt-14. In Proceedings of the Ninth Workshop on Statistical Machine Translation,\npages 97–104, 2014.\n[DL15] Andrew M. Dai and Quoc V. Le. Semi-supervised sequence learning. In Advances in neural information\nprocessing systems, 2015.\n[DMST19] Marie-Catherine De Marneffe, Mandy Simons, and Judith Tonhauser. The CommitmentBank: Investigat-\ning projection in naturally occurring discourse. 2019. To appear in proceedings of Sinn und Bedeutung\n23. Data can be found at https://github.com/mcdm/CommitmentBank/.\n[DSC+16] Yan Duan, John Schulman, Xi Chen, Peter L. Bartlett, Ilya Sutskever, and Pieter Abbeel. Rl2: Fast\nreinforcement learning via slow reinforcement learning. ArXiv, abs/1611.02779, 2016.\n[DWD+19] Dheeru Dua, Yizhong Wang, Pradeep Dasigi, Gabriel Stanovsky, Sameer Singh, and Matt Gardner.\nDrop: A reading comprehension benchmark requiring discrete reasoning over paragraphs. arXiv preprint\narXiv:1903.00161, 2019.\n[DYY+19] Zihang Dai, Zhilin Yang, Yiming Yang, Jaime G. Carbonell, Quoc V. Le, and Ruslan Salakhutdinov.\nTransformer-xl: Attentive language models beyond a ﬁxed-length context. Arxiv, 2019.\n[EOAG18] Sergey Edunov, Myle Ott, Michael Auli, and David Grangier. Understanding back-translation at scale.\narXiv preprint arXiv:1808.09381, 2018.\n[FAL17] Chelsea Finn, Pieter Abbeel, and Sergey Levine. Model-agnostic meta-learning for fast adaptation of\ndeep networks. ArXiv, abs/1703.03400, 2017.\n[Fyo00] Yaroslav Fyodorov. A natural logic inference system, 2000.\n[GG19] Hila Gonen and Yoav Goldberg. Lipstick on a pig: Debiasing methods cover up systematic gender biases\nin word embeddings but do not remove them. arXiv preprint arXiv:1903.03862, 2019.\n[GLT+20] Kelvin Guu, Kenton Lee, Zora Tung, Panupong Pasupat, and Ming-Wei Chang. Realm: Retrieval-\naugmented language model pre-training. arXiv preprint arXiv:2002.08909, 2020.\n[GMDD07] Danilo Giampiccolo, Bernardo Magnini, Ido Dagan, and Bill Dolan. The third PASCAL recognizing\ntextual entailment challenge. In Proceedings of the ACL-PASCAL workshop on textual entailment and\nparaphrasing, pages 1–9. Association for Computational Linguistics, 2007.\n[Gra16] Alex Graves. Adaptive computation time for recurrent neural networks. Arxiv, 2016.\n[GSL+18] Suchin Gururangan, Swabha Swayamdipta, Omer Levy, Roy Schwartz, Samuel R Bowman, and Noah A\nSmith. Annotation artifacts in natural language inference data. arXiv preprint arXiv:1803.02324, 2018.\n[GSR19] Sebastian Gehrmann, Hendrik Strobelt, and Alexander M. Rush. Gltr: Statistical detection and visualiza-\ntion of generated text. arXiv preprint arXiv: 1906.04043, 2019.\n[GWC+18] Jiatao Gu, Yong Wang, Yun Chen, Kyunghyun Cho, and Victor OK Li. Meta-learning for low-resource\nneural machine translation. arXiv preprint arXiv:1808.08437, 2018.\n[HB20] Daniel Hernandez and Tom Brown. Ai and efﬁciency, May 2020.\n[HBFC19] Ari Holtzman, Jan Buys, Maxwell Forbes, and Yejin Choi. The curious case of neural text degeneration.\nCoRR, abs/1904.09751, 2019.\n[HLW+20] Dan Hendrycks, Xiaoyuan Liu, Eric Wallace, Adam Dziedzic, Rishabh Krishnan, and Dawn Song.\nPretrained transformers improve out of distribution robustness. arXiv preprint arXiv:2004.06100, 2020.\n69\n\n[HNA+17] Joel Hestness, Sharan Narang, Newsha Ardalani, Gregory Diamos, Heewoo Jun, Hassan Kianinejad, Md.\nMostofa Ali Patwary, Yang Yang, and Yanqi Zhou. Deep learning scaling is predictable, empirically.\narXiv preprint arXiv:1712.00409, 2017.\n[HR18] Jeremy Howard and Sebastian Ruder. Universal language model ﬁne-tuning for text classiﬁcation. arXiv\npreprint arXiv:1801.06146, 2018.\n[HVD15] Geoffrey Hinton, Oriol Vinyals, and Jeff Dean. Distilling the knowledge in a neural network. arXiv\npreprint arXiv:1503.02531, 2015.\n[HYC01] Sepp Hochreiter, A Steven Younger, and Peter R Conwell. Learning to Learn Using Gradient Descent.\nIn International Conference on Artiﬁcial Neural Networks, pages 87–94. Springer, 2001.\n[HZJ+19] Po-Sen Huang, Huan Zhang, Ray Jiang, Robert Stanforth, Johannes Welbl, Jack Rae, Vishal Maini,\nDani Yogatama, and Pushmeet Kohli. Reducing sentiment bias in language models via counterfactual\nevaluation. arXiv preprint arXiv:1911.03064, 2019.\n[IBGC+14] Mohit Iyyer, Jordan Boyd-Graber, Leonardo Claudino, Richard Socher, and Hal Daum´e III. A neural\nnetwork for factoid question answering over paragraphs. In Empirical Methods in Natural Language\nProcessing, 2014.\n[IDCBE19] Daphne Ippolito, Daniel Duckworth, Chris Callison-Burch, and Douglas Eck. Automatic detection of\ngenerated text is easiest when humans are fooled. arXiv preprint arXiv:1911.00650, 2019.\n[JCWZ17] Mandar Joshi, Eunsol Choi, Daniel S. Weld, and Luke Zettlemoyer. TriviaQA: A large scale distantly\nsupervised challenge dataset for reading comprehension. arXiv preprint arXiv:1705.03551, 2017.\n[JN20] Zheng Junyuan and Gamma Lab NYC. Numeric transformer - albert, March 2020.\n[JVS+16] Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam Shazeer, and Yonghui Wu. Exploring the limits\nof language modeling. arXiv preprint arXiv:1602.02410, 2016.\n[JYS+19] Xiaoqi Jiao, Yichun Yin, Lifeng Shang, Xin Jiang, Xiao Chen, Linlin Li, Fang Wang, and Qun Liu.\nTinyBERT: Distilling BERT for natural language understanding. arXiv preprint arXiv:1909.10351, 2019.\n[JZC+19] Ying Ju, Fubang Zhao, Shijie Chen, Bowen Zheng, Xuefeng Yang, and Yunfeng Liu. Technical report on\nconversational question answering. arXiv preprint arXiv:1909.10772, 2019.\n[KCR+18] Daniel Khashabi, Snigdha Chaturvedi, Michael Roth, Shyam Upadhyay, and Dan Roth. Looking beyond\nthe surface: A challenge set for reading comprehension over multiple sentences. In Proceedings of North\nAmerican Chapter of the Association for Computational Linguistics (NAACL), 2018.\n[KKS+20] Daniel Khashabi, Tushar Khot, Ashish Sabharwal, Oyvind Tafjord, Peter Clark, and Hannaneh Hajishirzi.\nUniﬁedqa: Crossing format boundaries with a single qa system. arXiv preprint arXiv:2005.00700, 2020.\n[KMB20] Sarah E. Kreps, Miles McCain, and Miles Brundage. All the news that’s ﬁt to fabricate: Ai-generated\ntext as a tool of media misinformation, 2020.\n[KMH+20] Jared Kaplan, Sam McCandlish, Tom Henighan, Tom B. Brown, Benjamin Chess, Rewon Child, Scott\nGray, Alec Radford, Jeffrey Wu, and Dario Amodei. Scaling laws for neural language models, 2020.\n[KPR+19] Tom Kwiatkowski, Jennimaria Palomaki, Olivia Redﬁeld, Michael Collins, Ankur Parikh, Chris Alberti,\nDanielle Epstein, Illia Polosukhin, Matthew Kelcey, Jacob Devlin, Kenton Lee, Kristina N. Toutanova,\nLlion Jones, Ming-Wei Chang, Andrew Dai, Jakob Uszkoreit, Quoc Le, and Slav Petrov. Natural ques-\ntions: a benchmark for question answering research. Transactions of the Association of Computational\nLinguistics, 2019.\n[KR16] Yoon Kim and Alexander M. Rush. Sequence-level knowledge distillation. Arxiv, 2016.\n[LB02] Edward Loper and Steven Bird. Nltk: The natural language toolkit, 2002.\n[LC19] Guillaume Lample and Alexis Conneau. Cross-lingual language model pretraining. arXiv preprint\narXiv:1901.07291, 2019.\n70\n\n[LCG+19] Zhenzhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, and Radu Sori-\ncut. ALBERT: A lite BERT for self-supervised learning of language representations. arXiv preprint\narXiv:1909.11942, 2019.\n[LCH+20] Xiaodong Liu, Hao Cheng, Pengcheng He, Weizhu Chen, Yu Wang, Hoifung Poon, and Jianfeng Gao.\nAdversarial training for large neural language models. arXiv preprint arXiv:2004.08994, 2020.\n[LDL19] Zhongyang Li, Xiao Ding, and Ting Liu. Story ending prediction by transferable bert. arXiv preprint\narXiv:1905.07504, 2019.\n[LDM12] Hector Levesque, Ernest Davis, and Leora Morgenstern. The Winograd schema challenge. In Thirteenth\nInternational Conference on the Principles of Knowledge Representation and Reasoning, 2012.\n[LGG+20] Yinhan Liu, Jiatao Gu, Naman Goyal, Xian Li, Sergey Edunov, Marjan Ghazvininejad, Mike Lewis, and\nLuke Zettlemoyer. Multilingual denoising pre-training for neural machine translation. arXiv preprint\narXiv:2001.08210, 2020.\n[LGH+15] Xiaodong Liu, Jianfeng Gao, Xiaodong He, Li Deng, Kevin Duh, and Ye-Yi Wang. Representation\nlearning using multi-task deep neural networks for semantic classiﬁcation and information retrieval. In\nProceedings of the 2015 Conference of the North American Chapter of the Association for Computational\nLinguistics: Human Language Technologies, 2015.\n[LH17] Ilya Loshchilov and Frank Hutter.\nDecoupled weight decay regularization.\narXiv preprint\narXiv:1711.05101, 2017.\n[LHCG19a] Xiaodong Liu, Pengcheng He, Weizhu Chen, and Jianfeng Gao. Improving multi-task deep neural\nnetworks via knowledge distillation for natural language understanding. arXiv preprint arXiv:1904.09482,\n2019.\n[LHCG19b] Xiaodong Liu, Pengcheng He, Weizhu Chen, and Jianfeng Gao. Multi-task deep neural networks for\nnatural language understanding. arXiv preprint arXiv:1901.11504, 2019.\n[Lin20] Tal Linzen. How can we accelerate progress towards human-like linguistic generalization? arXiv preprint\narXiv:2005.00955, 2020.\n[LLG+19] Mike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy,\nVes Stoyanov, and Luke Zettlemoyer. Bart: Denoising sequence-to-sequence pre-training for natural\nlanguage generation, translation, and comprehension. arXiv preprint arXiv:1910.13461, 2019.\n[LM17] Ke Li and Jitendra Malik. Learning to optimize neural nets. arXiv preprint arXiv:1703.00441, 2017.\n[LOG+19] Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis,\nLuke Zettlemoyer, and Veselin Stoyanov. RoBERTa: A robustly optimized BERT pretraining approach.\narXiv preprint arXiv:1907.11692, 2019.\n[LPP+20] Patrick Lewis, Ethan Perez, Aleksandra Piktus, Fabio Petroni, Vladimir Karpukhin, Naman Goyal,\nHeinrich K¨uttler, Mike Lewis, Wen-tau Yih, Tim Rockt¨aschel, Sebastian Riedel, and Kiela Douwe.\nRetrieval-augmented generation for knowledge-intensive nlp tasks. arXiv preprint arXiv:2005.11401,\n2020.\n[LSP+18] Peter J. Liu, Mohammad Saleh, Etienne Pot, Ben Goodrich, Ryan Sepassi, Lukasz Kaiser, and Noam\nShazeer. Generating Wikipedia by summarizing long sequences. arXiv preprint arXiv:1801.10198, 2018.\n[LWS+20] Zhuohan Li, Eric Wallace, Sheng Shen, Kevin Lin, Kurt Keutzer, Dan Klein, and Joseph E. Gonzalez.\nTrain large, then compress: Rethinking model size for efﬁcient training and inference of transformers,\n2020.\n[LXL+17] Guokun Lai, Qizhe Xie, Hanxiao Liu, Yiming Yang, and Eduard Hovy. Race: Large-scale reading\ncomprehension dataset from examinations. arXiv preprint arXiv:1704.04683, 2017.\n[LYN+20] Sheng-Chieh Lin, Jheng-Hong Yang, Rodrigo Nogueira, Ming-Feng Tsai, Chuan-Ju Wang, and Jimmy\nLin. Tttttackling winogrande schemas. arXiv preprint arXiv:2003.08380, 2020.\n[Mac92] David. MacKay. Information-based objective functions for active data selection. Neural Computation,\n1992.\n71\n\n[MBXS17] Bryan McCann, James Bradbury, Caiming Xiong, and Richard Socher. Learned in translation: Con-\ntextualized word vectors. In Advances in Neural Information Processing Systems, pages 6294–6305,\n2017.\n[MCCD13] Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean. Efﬁcient estimation of word representations\nin vector space. arXiv preprint arXiv:1301.3781, 2013.\n[MCH+16] Nasrin Mostafazadeh, Nathanael Chambers, Xiaodong He, Devi Parikh, Dhruv Batra, Lucy Vanderwende,\nPushmeet Kohli, and James Allen. A corpus and evaluation framework for deeper understanding of\ncommonsense stories. arXiv preprint arXiv:1604.01696, 2016.\n[MCKS18] Todor Mihaylov, Peter Clark, Tushar Khot, and Ashish Sabharwal. Can a suit of armor conduct electricity?\na new dataset for open book question answering. ArXiv, abs/1809.02789, 2018.\n[MKAT18] Sam McCandlish, Jared Kaplan, Dario Amodei, and OpenAI Dota Team. An empirical model of\nlarge-batch training, 2018.\n[MKM+94] Mitchell Marcus, Grace Kim, Mary Ann Marcinkiewicz, Robert MacIntyre, Ann Bies, Mark Ferguson,\nKaren Katz, and Britta Schasberger. The penn treebank: annotating predicate argument structure.\nIn Proceedings of the workshop on Human Language Technology, pages 114–119. Association for\nComputational Linguistics, 1994.\n[MKXS18] Bryan McCann, Nitish Shirish Keskar, Caiming Xiong, and Richard Socher. The natural language\ndecathlon: Multitask learning as question answering. arXiv preprint arXiv:1806.08730, 2018.\n[MPL19] R Thomas McCoy, Ellie Pavlick, and Tal Linzen. Right for the wrong reasons: Diagnosing syntactic\nheuristics in natural language inference. arXiv preprint arXiv:1902.01007, 2019.\n[MWZ+18] Margaret Mitchell, Simone Wu, Andrew Zaldivar, Parker Barnes, Lucy Vasserman, Ben Hutchinson,\nElena Spitzer, Inioluwa Deborah Raji, and Timnit Gebru. Model cards for model reporting, 2018.\n[NBR20] Moin Nadeem, Anna Bethke, and Siva Reddy. Stereoset: Measuring stereotypical bias in pretrained\nlanguage models. arXiv preprint arXiv:2004.09456, 2020.\n[NK19] Timothy Niven and Hung-Yu Kao. Probing neural network comprehension of natural language arguments.\narXiv preprint arXiv:1907.07355, 2019.\n[Nor09] Peter Norvig. Natural language corpus data, 2009.\n[NvNvdG19] Malvina Nissim, Rik van Noord, and Rob van der Goot. Fair is better than sensational: Man is to doctor\nas woman is to doctor. arXiv preprint arXiv:1905.09866, 2019.\n[NWD+19] Yixin Nie, Adina Williams, Emily Dinan, Mohit Bansal, Jason Weston, and Douwe Kiela. Adversarial\nnli: A new benchmark for natural language understanding. arXiv preprint arXiv:1910.14599, 2019.\n[oR16] University of Regensburg. Fascha, 2016.\n[PCC18] Mohammad Taher Pilehvar and Jose Camacho-Collados. WIC: 10,000 example pairs for evaluating\ncontext-sensitive representations. arXiv preprint arXiv:1808.09121, 2018.\n[PFB18] Jason Phang, Thibault F´evry, and Samuel R. Bowman. Sentence encoders on STILTs: Supplementary\ntraining on intermediate labeled-data tasks. arXiv preprint arXiv:1811.01088, 2018.\n[PHR+18] Adam Poliak, Aparajita Haldar, Rachel Rudinger, J. Edward Hu, Ellie Pavlick, Aaron Steven White, and\nBenjamin Van Durme. Collecting diverse natural language inference problems for sentence representation\nevaluation. In Proceedings of EMNLP, 2018.\n[PKL+16] Denis Paperno, Germ´an Kruszewski, Angeliki Lazaridou, Quan Ngoc Pham, Raffaella Bernardi, Sandro\nPezzelle, Marco Baroni, Gemma Boleda, and Raquel Fern´andez. The lambada dataset: Word prediction\nrequiring a broad discourse context. arXiv preprint arXiv:1606.06031, 2016.\n[PNZtY18] Matthew E. Peters, Mark Neumann, Luke Zettlemoyer, and Wen tau Yih. Dissecting contextual word\nembeddings: Architecture and representation, 2018.\n[Pos18] Matt Post. A call for clarity in reporting BLEU scores. arXiv preprint arXiv:1804.08771, 2018.\n72\n\n[PSM14] Jeffrey Pennington, Richard Socher, and Christopher Manning.\nGloVe: Global vectors for word\nrepresentation. In Proceedings of the 2014 conference on empirical methods in natural language\nprocessing (EMNLP), 2014.\n[QIA20] QIANXIN. Sa-net on albert (ensemble), April 2020.\n[QMZH19] Yusu Qian, Urwa Muaz, Ben Zhang, and Jae Won Hyun. Reducing gender bias in word-level language\nmodels with a gender-equalizing loss function. arXiv preprint arXiv:1905.12801, 2019.\n[RBG11] Melissa Roemmele, Cosmin Adrian Bejan, and Andrew S Gordon. Choice of plausible alternatives: An\nevaluation of commonsense causal reasoning. In 2011 AAAI Spring Symposium Series, 2011.\n[RCM19] Siva Reddy, Danqi Chen, and Christopher D Manning. Coqa: A conversational question answering\nchallenge. Transactions of the Association for Computational Linguistics, 7:249–266, 2019.\n[RCP+17] Scott Reed, Yutian Chen, Thomas Paine, A¨aron van den Oord, SM Eslami, Danilo Rezende, Oriol\nVinyals, and Nando de Freitas. Few-shot autoregressive density estimation: Towards learning to learn\ndistributions. arXiv preprint arXiv:1710.10304, 2017.\n[RJL18] Pranav Rajpurkar, Robin Jia, and Percy Liang. Know what you don’t know: Unanswerable questions for\nsquad. arXiv preprint arXiv:1806.03822, 2018.\n[RL16] Sachin Ravi and Hugo Larochelle. Optimization as a model for few-shot learning. ICLR 2017 (oral),\n2016.\n[RLL+19] Qiu Ran, Yankai Lin, Peng Li, Jie Zhou, and Zhiyuan Liu. NumNet: Machine reading comprehension\nwith numerical reasoning. In Proceedings of EMNLP, 2019.\n[RNLVD18] Rachel Rudinger, Jason Naradowsky, Brian Leonard, and Benjamin Van Durme.\nGender bias in\ncoreference resolution. arXiv preprint arXiv:1804.09301, 2018.\n[RNSS18] Alec Radford, Karthik Narasimhan, Tim Salimans, and Ilya Sutskever. Improving language understanding\nby generative pre-training, 2018.\n[Ros12] R.S. Ross. Guide for conducting risk assessments. NIST Special Publication, 2012.\n[RRBS19] Jonathan S. Rosenfeld, Amir Rosenfeld, Yonatan Belinkov, and Nir Shavit. A constructive prediction of\nthe generalization error across scales, 2019.\n[RRS20] Adam Roberts, Colin Raffel, and Noam Shazeer. How much knowledge can you pack into the parameters\nof a language model? arXiv preprint arXiv:2002.08910, 2020.\n[RSR+19] Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi\nZhou, Wei Li, and Peter J. Liu. Exploring the limits of transfer learning with a uniﬁed text-to-text\ntransformer, 2019.\n[RWC+19] Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. Language\nmodels are unsupervised multitask learners, 2019.\n[SBBC19] Keisuke Sakaguchi, Ronan Le Bras, Chandra Bhagavatula, and Yejin Choi. Winogrande: An adversarial\nwinograd schema challenge at scale, 2019.\n[SBC+19] Irene Solaiman, Miles Brundage, Jack Clark, Amanda Askell, Ariel Herbert-Voss, Jeff Wu, Alec Radford,\nGretchen Krueger, Jong Wook Kim, Sarah Kreps, Miles McCain, Alex Newhouse, Jason Blazakis, Kris\nMcGufﬁe, and Jasmine Wang. Release strategies and the social impacts of language models, 2019.\n[SCNP19] Emily Sheng, Kai-Wei Chang, Premkumar Natarajan, and Nanyun Peng. The woman worked as a\nbabysitter: On biases in language generation. arXiv preprint arXiv:1909.01326, 2019.\n[SDCW19] Victor Sanh, Lysandre Debut, Julien Chaumond, and Thomas Wolf. DistilBERT, a distilled version of\nBERT: smaller, faster, cheaper and lighter. arXiv preprint arXiv:1910.01108, 2019.\n[SDSE19] Roy Schwartz, Jesse Dodge, Noah A. Smith, and Oren Etzioni. Green AI. CoRR, abs/1907.10597, 2019.\n[SHB15] Rico Sennrich, Barry Haddow, and Alexandra Birch. Improving neural machine translation models with\nmonolingual data. arXiv preprint arXiv:1511.06709, 2015.\n73\n\n[SMM+17] Noam Shazeer, Azalia Mirhoseini, Krzysztof Maziarz, Andy Davis, Quoc Le, Geoffrey Hinton, and Jeff\nDean. Outrageously large neural networks: The sparsely-gated mixture-of-experts layer. arXiv preprint\narXiv:1701.06538, 2017.\n[SPP+19] Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper, and Bryan Catanzaro.\nMegatron-lm: Training multi-billion parameter language models using model parallelism, 2019.\n[SS20] Timo Schick and Hinrich Sch¨utze. Exploiting cloze questions for few-shot text classiﬁcation and natural\nlanguage inference. arXiv preprint arXiv:2001.07676, 2020.\n[STQ+19] Kaitao Song, Xu Tan, Tao Qin, Jianfeng Lu, and Tie-Yan Liu. MASS: Masked sequence to sequence\npre-training for language generation. arXiv preprint arXiv:1905.02450, 2019.\n[TFR+17] Josh Tobin, Rachel Fong, Alex Ray, Jonas Schneider, Wojciech Zaremba, and Pieter Abbeel. Domain\nrandomization for transferring deep neural networks from simulation to the real world. In 2017 IEEE/RSJ\ninternational conference on intelligent robots and systems (IROS), pages 23–30. IEEE, 2017.\n[TL05] Peter D. Turney and Michael L. Littman. Corpus-based learning of analogies and semantic relations.\nCoRR, abs/cs/0508103, 2005.\n[TL18] Trieu H. Trinh and Quoc V. Le.\nA simple method for commonsense reasoning.\narXiv preprint\narXiv:1806.02847, 2018.\n[TLBS03] Peter D. Turney, Michael L. Littman, Jeffrey Bigham, and Victor Shnayder. Combining independent\nmodules to solve multiple-choice synonym and analogy problems. CoRR, cs.CL/0309035, 2003.\n[Tur20] Project Turing. Microsoft research blog, Feb 2020.\n[VBL+16] Oriol Vinyals, Charles Blundell, Timothy Lillicrap, Daan Wierstra, et al. Matching Networks for One\nShot Learning. In Advances in neural information processing systems, pages 3630–3638, 2016.\n[VSP+17] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N. Gomez, Łukasz\nKaiser, and Illia Polosukhin. Attention is all you need. In Advances in neural information processing\nsystems, 2017.\n[WPN+19] Alex Wang, Yada Pruksachatkun, Nikita Nangia, Amanpreet Singh, Julian Michael, Felix Hill, Omer\nLevy, and Samuel Bowman. Superglue: A stickier benchmark for general-purpose language understand-\ning systems. In Advances in Neural Information Processing Systems, pages 3261–3275, 2019.\n[WXH+18] Yiren Wang, Yingce Xia, Tianyu He, Fei Tian, Tao Qin, ChengXiang Zhai, and Tie-Yan Liu. Multi-agent\ndual learning. ICLR 2019, 2018.\n[XDH+19] Qizhe Xie, Zihang Dai, Eduard Hovy, Minh-Thang Luong, and Quoc V. Le.\nUnsupervised data\naugmentation for consistency training, 2019.\n[YdC+19] Dani Yogatama, Cyprien de Masson d’Autume, Jerome Connor, Tomas Kocisky, Mike Chrzanowski,\nLingpeng Kong, Angeliki Lazaridou, Wang Ling, Lei Yu, Chris Dyer, et al. Learning and evaluating\ngeneral linguistic intelligence. arXiv preprint arXiv:1901.11373, 2019.\n[YDY+19] Zhilin Yang, Zihang Dai, Yiming Yang, Jaime Carbonell, Ruslan Salakhutdinov, and Quoc V. Le. XLNet:\nGeneralized autoregressive pretraining for language understanding. arXiv preprint arXiv:1906.08237,\n2019.\n[ZHB+19] Rowan Zellers, Ari Holtzman, Yonatan Bisk, Ali Farhadi, and Yejin Choi. Hellaswag: Can a machine\nreally ﬁnish your sentence? arXiv preprint arXiv:1905.07830, 2019.\n[ZHR+19] Rowan Zellers, Ari Holtzman, Hannah Rashkin, Yonatan Bisk, Ali Farhadi, Franziska Roesner, and Yejin\nChoi. Defending against neural fake news. arXiv preprint arXiv:1905.12616, 2019.\n[ZLL+18] Sheng Zhang, Xiaodong Liu, Jingjing Liu, Jianfeng Gao, Kevin Duh, and Benjamin Van Durme.\nReCoRD: Bridging the gap between human and machine commonsense reading comprehension. arXiv\npreprint arXiv:1810.12885, 2018.\n[ZSW+19a] Daniel M. Ziegler, Nisan Stiennon, Jeffrey Wu, Tom B. Brown, Alec Radford, Dario Amodei, Paul\nChristiano, and Geoffrey Irving. Fine-tuning language models from human preferences, 2019.\n74\n\n[ZSW+19b] Daniel M. Ziegler, Nisan Stiennon, Jeffrey Wu, Tom B. Brown, Alec Radford, Dario Amodei, Paul Chris-\ntiano, and Geoffrey Irving. Fine-tuning language models from human preferences. ArXiv, abs/1909.08593,\n2019.\n75\n"
    }
  ]
}